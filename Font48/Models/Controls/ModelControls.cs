// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Font48.Models.Controls;

public partial class ModelControls : DbContext
{
    public ModelControls()
    {
    }

    public ModelControls(DbContextOptions<ModelControls> options)
        : base(options)
    {
    }

    public virtual DbSet<TbAction> TbActions { get; set; }

    public virtual DbSet<TbActionType> TbActionTypes { get; set; }

    public virtual DbSet<TbAppType> TbAppTypes { get; set; }

    public virtual DbSet<TbControl> TbControls { get; set; }

    public virtual DbSet<TbControlType> TbControlTypes { get; set; }

    public virtual DbSet<TbTest> TbTests { get; set; }

  protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
      => optionsBuilder.UseSqlServer("Data Source=localhost\\DEV2019;Initial Catalog=FontTest;User ID=HMsup;Password=HMIsNum1!;TrustServerCertificate=true");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("SQL_Latin1_General_CP1_CI_AS");

        modelBuilder.Entity<TbAction>(entity =>
        {
            entity.ToTable("TbAction", "dbFont");

            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.FontName)
                .HasMaxLength(200)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TbActionType>(entity =>
        {
            entity.ToTable("TbActionType", "dbFont");

            entity.Property(e => e.Description).IsUnicode(false);
            entity.Property(e => e.Name)
                .HasMaxLength(200)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TbAppType>(entity =>
        {
            entity.ToTable("TbAppType", "dbFont");

            entity.Property(e => e.Description).IsUnicode(false);
            entity.Property(e => e.Name)
                .HasMaxLength(200)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TbControl>(entity =>
        {
            entity.ToTable("TbControl", "dbFont");

            entity.Property(e => e.ControlName)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.ControlText).IsUnicode(false);
        });

        modelBuilder.Entity<TbControlType>(entity =>
        {
            entity.ToTable("TbControlType", "dbFont");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Description).IsUnicode(false);
            entity.Property(e => e.Name)
                .HasMaxLength(200)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TbTest>(entity =>
        {
            entity.ToTable("TbTest", "dbFont");

            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.Description).IsUnicode(false);
            entity.Property(e => e.FontSize).HasColumnType("decimal(18, 3)");
            entity.Property(e => e.TestName)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}