<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Drawing.Common</name>
    </assembly>
    <members>
        <member name="T:System.Drawing.DpiHelper">
            <summary>
            Helper class for scaling coordinates and images according to current DPI scaling set in Windows for the primary screen.
            </summary>
        </member>
        <member name="F:System.Drawing.DpiHelper.s_deviceDpiX">
            <summary>
            The primary screen's (device) current horizontal DPI
            </summary>
        </member>
        <member name="F:System.Drawing.DpiHelper.s_deviceDpiY">
            <summary>
            The primary screen's (device) current vertical DPI
            </summary>
        </member>
        <member name="P:System.Drawing.DpiHelper.IsScalingRequired">
            <summary>
            Returns whether scaling is required when converting between logical-device units,
            if the application opted in the automatic scaling in the .config file.
            </summary>
        </member>
        <member name="M:System.Drawing.DpiHelper.LogicalToDeviceUnitsX(System.Int32)">
            <summary>
            Transforms a horizontal integer coordinate from logical to device units
            by scaling it up  for current DPI and rounding to nearest integer value
            Note: this method should be called only inside an if (DpiHelper.IsScalingRequired) clause
            </summary>
            <param name="value">The horizontal value in logical units</param>
            <returns>The horizontal value in device units</returns>
        </member>
        <member name="M:System.Drawing.DpiHelper.ScaleToInitialSystemDpi(System.Int32)">
            <summary>
            Transforms a vertical integer coordinate from logical to device units
            by scaling it up  for current DPI and rounding to nearest integer value
            Note: this method should be called only inside an if (DpiHelper.IsScalingRequired) clause
            </summary>
            <param name="value">The vertical value in logical units</param>
            <returns>The vertical value in device units</returns>
        </member>
        <member name="M:System.Drawing.DpiHelper.LogicalToDeviceUnits(System.Drawing.Size)">
            <summary>
            Returns a new Size with the input's
            dimensions converted from logical units to device units.
            Note: this method should be called only inside an if (DpiHelper.IsScalingRequired) clause
            </summary>
            <param name="logicalSize">Size in logical units</param>
            <returns>Size in device units</returns>
        </member>
        <member name="M:System.Drawing.DpiHelper.CreateResizedBitmap(System.Drawing.Bitmap,System.Drawing.Size)">
            <summary>
            Create and return a new bitmap scaled to the specified size.
            Note: this method should be called only inside an if (DpiHelper.IsScalingRequired) clause
            </summary>
            <param name="logicalImage">The image to scale from logical units to device units</param>
            <param name="targetImageSize">The size to scale image to</param>
        </member>
        <member name="M:System.Drawing.DpiHelper.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)">
            <summary>
            Create a new bitmap scaled for the device units.
            When displayed on the device, the scaled image will have same size as the original image would have when displayed at 96dpi.
            Note: this method should be called only inside an if (DpiHelper.IsScalingRequired) clause
            </summary>
            <param name="logicalBitmap">The image to scale from logical units to device units</param>
        </member>
        <member name="M:System.Drawing.Bitmap.ApplyEffect(System.Drawing.Imaging.Effects.Effect,System.Drawing.Rectangle)">
            <summary>
             Alters the bitmap by applying the given <paramref name="effect"/>.
            </summary>
            <param name="effect">The effect to apply.</param>
            <param name="area">The area to apply to, or <see cref="F:System.Drawing.Rectangle.Empty"/> for the entire image.</param>
        </member>
        <member name="M:System.Drawing.Bitmap.ConvertFormat(System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.DitherType,System.Drawing.Imaging.PaletteType,System.Drawing.Imaging.ColorPalette,System.Single)">
            <summary>
             Converts the bitmap to the specified <paramref name="format"/> using the given <paramref name="ditherType"/>.
             The original pixel data is replaced with the new format.
            </summary>
            <param name="format">
             <para>
              The new pixel format. <see cref="F:System.Drawing.Imaging.PixelFormat.Format16bppGrayScale"/> is not supported.
             </para>
            </param>
            <param name="ditherType">
             <para>
              The dithering algorithm. Pass <see cref="F:System.Drawing.Imaging.DitherType.None"/> when the conversion does not reduce the bit depth
              of the pixel data.
             </para>
             <para>
              This must be <see cref="F:System.Drawing.Imaging.DitherType.Solid"/> or <see cref="F:System.Drawing.Imaging.DitherType.ErrorDiffusion"/> if the <paramref name="paletteType"/>
              is <see cref="F:System.Drawing.Imaging.PaletteType.Custom"/> or <see cref="!:PaletteType.FixedBW"/>.
             </para>
            </param>
            <param name="paletteType">
             <para>
              The palette type to use when the pixel format is indexed. Ignored for non-indexed pixel formats.
             </para>
            </param>
            <param name="palette">
             <para>
              Pointer to a <see cref="T:System.Drawing.Imaging.ColorPalette"/> that specifies the palette whose indexes are stored in the pixel data
              of the converted bitmap. This must be specified for indexed pixel formats.
             </para>
             <para>
              This palette (called the actual palette) does not have to have the type specified by
              the <paramref name="paletteType"/> parameter. The <paramref name="paletteType"/> parameter specifies a standard
              palette that can be used by any of the ordered or spiral dithering algorithms. If the actual palette has a type
              other than that specified by the <paramref name="paletteType"/> parameter, then
              <see cref="M:System.Drawing.Bitmap.ConvertFormat(System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.DitherType,System.Drawing.Imaging.PaletteType,System.Drawing.Imaging.ColorPalette,System.Single)"/> performs a nearest-color
              conversion from the standard palette to the actual palette.
             </para>
            </param>
            <param name="alphaThresholdPercent">
             <para>
              Real number in the range 0 through 100 that specifies which pixels in the source bitmap will map to the
              transparent color in the converted bitmap.
             </para>
             <para>
              A value of 0 specifies that none of the source pixels map to the transparent color. A value of 100
              specifies that any pixel that is not fully opaque will map to the transparent color. A value of t specifies
              that any source pixel less than t percent of fully opaque will map to the transparent color. Note that for
              the alpha threshold to be effective, the palette must have a transparent color. If the palette does not have
              a transparent color, pixels with alpha values below the threshold will map to color that most closely
              matches (0, 0, 0, 0), usually black.
             </para>
            </param>
            <remarks>
             <para>
              <paramref name="paletteType"/> and <paramref name="palette"/> really only have relevance with indexed pixel
              formats. You can pass a <see cref="T:System.Drawing.Imaging.ColorPalette"/> for non-indexed pixel formats, but it has no impact on the
              transformation and will effective just call <see cref="P:System.Drawing.Image.Palette"/> to set the palette when the conversion
              is complete.
             </para>
            </remarks>
        </member>
        <member name="M:System.Drawing.Bitmap.ConvertFormat(System.Drawing.Imaging.PixelFormat)">
            <summary>
             Converts the bitmap to the specified <paramref name="format"/>.
             The original pixel data is replaced with the new format.
            </summary>
            <param name="format">
             <para>
              The new pixel format. <see cref="F:System.Drawing.Imaging.PixelFormat.Format16bppGrayScale"/> is not supported.
             </para>
            </param>
        </member>
        <member name="T:System.Drawing.BitmapSelector">
            <summary>
            Provides methods to select bitmaps.
            </summary>
        </member>
        <member name="M:System.Drawing.BitmapSelector.GetResourceStream(System.Reflection.Assembly,System.Type,System.String)">
            <summary>
            Returns a resource stream loaded from the appropriate location according to the current
            suffix.
            </summary>
            <param name="assembly">The assembly from which the stream is loaded</param>
            <param name="type">The type whose namespace is used to scope the manifest resource name</param>
            <param name="originalName">The name of the manifest resource being requested</param>
            <returns>
            The manifest resource stream corresponding to <paramref name="originalName"/>.
            </returns>
        </member>
        <member name="M:System.Drawing.BitmapSelector.GetResourceStream(System.Type,System.String)">
            <summary>
            Returns a resource stream loaded from the appropriate location according to the current
            suffix.
            </summary>
            <param name="type">The type from whose assembly the stream is loaded and whose namespace is used to scope the resource name</param>
            <param name="originalName">The name of the manifest resource being requested</param>
            <returns>
            The manifest resource stream corresponding to <paramref name="originalName"/>.
            </returns>
        </member>
        <member name="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute">
            <summary>
            Opt-In flag to look for resources in the same assembly but with the "bitmapSuffix" config setting.
            i.e. System.Web.UI.WebControl.Button.bmp -> System.Web.UI.WebControl.Button.VisualStudio.11.0.bmp
            </summary>
        </member>
        <member name="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute">
            <summary>
            Opt-In flag to look for resources in the another assembly with the "bitmapSuffix" config setting
            i.e. System.Web.dll -> System.Web.VisualStudio.11.0.dll
            </summary>
        </member>
        <member name="T:System.Drawing.BufferedGraphics">
            <summary>
            The BufferedGraphics class can be thought of as a "Token" or "Reference" to the buffer that a
            BufferedGraphicsContext creates. While a BufferedGraphics is outstanding, the memory associated with the
            buffer is locked. The general design is such that under normal conditions a single BufferedGraphics will be in
            use at one time for a given BufferedGraphicsContext.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphics.#ctor(System.Drawing.Graphics,System.Drawing.BufferedGraphicsContext,System.Drawing.Graphics,System.IntPtr,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Internal constructor, this class is created by BufferedGraphicsContext.
            </summary>
        </member>
        <member name="P:System.Drawing.BufferedGraphics.Graphics">
            <summary>
            Allows access to the Graphics wrapper for the buffer.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
            <summary>
            Renders the buffer to the specified target graphics.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphics.RenderInternal(System.Runtime.InteropServices.HandleRef)">
            <summary>
             Internal method that renders the specified buffer into the target.
            </summary>
        </member>
        <member name="P:System.Drawing.BufferedGraphics.DisposeContext">
            <summary>
             Determines if we need to dispose of the Context when this is disposed.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphics.Render">
            <summary>
             Renders the buffer to the original graphics used to allocate the buffer.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
            <summary>
             Renders the buffer to the specified target HDC.
            </summary>
        </member>
        <member name="T:System.Drawing.BufferedGraphicsContext">
            <summary>
             The BufferedGraphicsContext class can be used to perform standard double buffer rendering techniques.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphicsContext.#ctor">
            <summary>
            Basic constructor.
            </summary>
        </member>
        <member name="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
            <summary>
            Allows you to set the maximum width and height of the buffer that will be retained in memory.
            You can allocate a buffer of any size, however any request for a buffer that would have a total
            memory footprint larger that the maximum size will be allocated temporarily and then discarded
            with the BufferedGraphics is released.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Returns a BufferedGraphics that is matched for the specified target Graphics object.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
            <summary>
            Returns a BufferedGraphics that is matched for the specified target HDC object.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphicsContext.AllocBuffer(System.Drawing.Graphics,Windows.Win32.Graphics.Gdi.HDC,System.Drawing.Rectangle)">
            <summary>
            Returns a BufferedGraphics that is matched for the specified target HDC object.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphicsContext.AllocBufferInTempManager(System.Drawing.Graphics,Windows.Win32.Graphics.Gdi.HDC,System.Drawing.Rectangle)">
            <summary>
            Returns a BufferedGraphics that is matched for the specified target HDC object.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphicsContext.ShouldUseTempManager(System.Drawing.Rectangle)">
            <summary>
            This routine allows us to control the point were we start using throw away
            managers for painting. Since the buffer manager stays around (by default)
            for the life of the app, we don't want to consume too much memory
            in the buffer. However, re-allocating the buffer for small things (like
            buttons, labels, etc) will hit us on runtime performance.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphicsContext.FillBitmapInfo(Windows.Win32.Graphics.Gdi.HDC,Windows.Win32.Graphics.Gdi.HPALETTE,Windows.Win32.Graphics.Gdi.BITMAPINFO*)">
            <summary>
             Fills in the fields of a BITMAPINFO so that we can create a bitmap
             that matches the format of the display.
            </summary>
            <remarks>
             <para>
              This is done by creating a compatible bitmap and calling GetDIBits
              to return the color masks. This is done with two calls. The first
              call passes in biBitCount = 0 to GetDIBits which will fill in the
              base BITMAPINFOHEADER data. The second call to GetDIBits (passing
              in the BITMAPINFO filled in by the first call) will return the color
              table or bitmasks, as appropriate.
             </para>
            </remarks>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:System.Drawing.BufferedGraphicsContext.FillColorTable(Windows.Win32.Graphics.Gdi.HDC,Windows.Win32.Graphics.Gdi.HPALETTE,Windows.Win32.Graphics.Gdi.BITMAPINFO*)">
            <summary>
             Initialize the color table of the <see cref="T:Windows.Win32.Graphics.Gdi.BITMAPINFO"/>. Colors
             are set to the current system palette.
            </summary>
            <remarks>
             <para>
              Note: call only valid for displays of 8bpp or less.
             </para>
            </remarks>
            <returns>True is successful, false otherwise.</returns>
        </member>
        <member name="M:System.Drawing.BufferedGraphicsContext.CreateBuffer(Windows.Win32.Graphics.Gdi.HDC,System.Int32,System.Int32)">
            <summary>
             Returns a Graphics object representing a buffer.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphicsContext.CreateCompatibleDIB(Windows.Win32.Graphics.Gdi.HDC,Windows.Win32.Graphics.Gdi.HPALETTE,System.Int32,System.Int32)">
             <summary>
             Create a DIB section with an optimal format w.r.t. the specified hdc.
            
             If DIB &lt;= 8bpp, then the DIB color table is initialized based on the
             specified palette. If the palette handle is NULL, then the system
             palette is used.
            
             Note: The hdc must be a direct DC (not an info or memory DC).
            
             Note: On palettized displays, if the system palette changes the
                   UpdateDIBColorTable function should be called to maintain
                   the identity palette mapping between the DIB and the display.
             </summary>
             <returns>A valid bitmap handle if successful, IntPtr.Zero otherwise.</returns>
        </member>
        <member name="M:System.Drawing.BufferedGraphicsContext.DisposeDC">
            <summary>
             Disposes the DC, but leaves the bitmap alone.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphicsContext.DisposeBitmap">
            <summary>
             Disposes the bitmap, will ASSERT if bitmap is being used (checks oldbitmap). if ASSERTed, call DisposeDC() first.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphicsContext.Dispose(System.Boolean)">
            <summary>
            Disposes of the Graphics buffer.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphicsContext.Invalidate">
            <summary>
            Invalidates the cached graphics buffer.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphicsContext.ReleaseBuffer">
            <summary>
            Returns a Graphics object representing a buffer.
            </summary>
        </member>
        <member name="T:System.Drawing.BufferedGraphicsManager">
            <summary>
            The BufferedGraphicsManager is used for accessing a BufferedGraphicsContext.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphicsManager.#cctor">
            <summary>
            Static constructor.  Here, we hook the exit &amp; unload events so we can clean up our context buffer.
            </summary>
        </member>
        <member name="P:System.Drawing.BufferedGraphicsManager.Current">
            <summary>
            Retrieves the context associated with the app domain.
            </summary>
        </member>
        <member name="M:System.Drawing.BufferedGraphicsManager.OnShutdown(System.Object,System.EventArgs)">
            <summary>
            Called on process exit
            </summary>
        </member>
        <member name="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance of the <see cref='T:System.Drawing.CharacterRange'/> class with the specified coordinates.</summary>
        </member>
        <member name="P:System.Drawing.CharacterRange.First">
            <summary>Gets the First character position of this <see cref='T:System.Drawing.CharacterRange'/>.</summary>
        </member>
        <member name="P:System.Drawing.CharacterRange.Length">
            <summary>Gets the Length of this <see cref='T:System.Drawing.CharacterRange'/>.</summary>
        </member>
        <member name="M:System.Drawing.CharacterRange.Equals(System.Drawing.CharacterRange)">
            <summary>Indicates whether the current instance is equal to another instance of the same type.</summary>
            <param name="other">An instance to compare with this instance.</param>
            <returns>true if the current instance is equal to the other instance; otherwise, false.</returns>
        </member>
        <member name="T:System.Drawing.ContentAlignment">
            <summary>
            Specifies alignment of content on the drawing surface.
            </summary>
        </member>
        <member name="F:System.Drawing.ContentAlignment.TopLeft">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:System.Drawing.ContentAlignment.TopCenter">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:System.Drawing.ContentAlignment.TopRight">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="F:System.Drawing.ContentAlignment.MiddleLeft">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:System.Drawing.ContentAlignment.MiddleCenter">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:System.Drawing.ContentAlignment.MiddleRight">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="F:System.Drawing.ContentAlignment.BottomLeft">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:System.Drawing.ContentAlignment.BottomCenter">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:System.Drawing.ContentAlignment.BottomRight">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="T:System.Drawing.CopyPixelOperation">
            <summary>
             Specifies the Copy Pixel (ROP) operation.
            </summary>
        </member>
        <member name="F:System.Drawing.CopyPixelOperation.Blackness">
            <summary>
             Fills the Destination Rectangle using the color associated with the index 0 in the physical palette.
            </summary>
        </member>
        <member name="F:System.Drawing.CopyPixelOperation.CaptureBlt">
            <summary>
             Includes any windows that are Layered on Top.
            </summary>
        </member>
        <member name="T:System.Drawing.Drawing2D.DashCap">
            <summary>
            Specifies the available dash cap styles with which a <see cref='T:System.Drawing.Pen'/> can end a line.
            </summary>
        </member>
        <member name="F:System.Drawing.Drawing2D.FlushIntention.Flush">
            <summary>
             Flush all batched rendering operations.
            </summary>
        </member>
        <member name="F:System.Drawing.Drawing2D.FlushIntention.Sync">
            <summary>
             Flush all batched rendering operations and wait for them to complete.
            </summary>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.ReadOnlySpan{System.Drawing.PointF},System.ReadOnlySpan{System.Byte},System.Drawing.Drawing2D.FillMode)">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Drawing2D.GraphicsPath'/> class.
            </summary>
            <param name="pts">Array of points that define the path.</param>
            <param name="types">Array of <see cref="T:System.Drawing.Drawing2D.PathPointType"/> values that specify the type of <paramref name="pts"/></param>
            <param name="fillMode">
             A <see cref="T:System.Drawing.Drawing2D.FillMode"/> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>
            </param>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.ReadOnlySpan{System.Drawing.Point},System.ReadOnlySpan{System.Byte},System.Drawing.Drawing2D.FillMode)">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
            <summary>
             Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.
            </summary>
            <param name="points">An array of points that define the line segments to add.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <remarks>
             <para>
              If there are previous lines or curves in the figure, a line is added to connect the endpoint
              of the previous segment the starting point of the line. The <paramref name="points"/> parameter
              specifies an array of endpoints. The first two specify the first line. Each additional point
              specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.
             </para>
            </remarks>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.ReadOnlySpan{System.Drawing.PointF})">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.ReadOnlySpan{System.Drawing.Point})">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
            <summary>
             Adds a sequence of connected cubic Bézier curves to the current figure.
            </summary>
            <param name="points">An array of points that define the curves.</param>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.ReadOnlySpan{System.Drawing.PointF})">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.ReadOnlySpan{System.Drawing.Point})">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
            <summary>
             Adds a spline curve to the current figure. A cardinal spline curve is used because the
             curve travels through each of the points in the array.
            </summary>
            <param name="points">An array points that define the curve.</param>
            <param name="offset">The index of the first point in the array to use.</param>
            <param name="numberOfSegments">
             The number of segments to use when creating the curve. A segment can be thought of as
             a line connecting two points.
            </param>
            <param name="tension">
             A value that specifies the amount that the curve bends between control points.
             Values greater than 1 produce unpredictable results.
            </param>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.ReadOnlySpan{System.Drawing.PointF})">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.ReadOnlySpan{System.Drawing.PointF},System.Single)">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.ReadOnlySpan{System.Drawing.Point})">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.ReadOnlySpan{System.Drawing.Point},System.Single)">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.ReadOnlySpan{System.Drawing.PointF})">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.ReadOnlySpan{System.Drawing.PointF},System.Single)">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
            <summary>
             Adds a closed spline curve to the current figure. A cardinal spline curve is used because the
             curve travels through each of the points in the array.
            </summary>
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.ReadOnlySpan{System.Drawing.Point})">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.ReadOnlySpan{System.Drawing.Point},System.Single)">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
            <summary>
             Adds a series of rectangles to this path.
            </summary>
            <param name="rects">Array of rectangles to add.</param>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.ReadOnlySpan{System.Drawing.RectangleF})">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.ReadOnlySpan{System.Drawing.Rectangle})">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRoundedRectangle(System.Drawing.Rectangle,System.Drawing.Size)">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddRoundedRectangle(System.Drawing.RectangleF,System.Drawing.SizeF)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRoundedRectangle(System.Drawing.RectangleF,System.Drawing.SizeF)">
            <summary>
             Adds a rounded rectangle to this path.
            </summary>
            <param name="rect">The bounds of the rectangle to add.</param>
            <param name="radius">The radius width and height used to round the corners of the rectangle.</param>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.ReadOnlySpan{System.Drawing.PointF})">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
            <summary>
             Adds a polygon to this path.
            </summary>
            <param name="points">The points that define the polygon.</param>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.ReadOnlySpan{System.Drawing.Point})">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.ReadOnlySpan{System.Drawing.PointF},System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.ReadOnlySpan{System.Drawing.PointF},System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.ReadOnlySpan{System.Drawing.PointF},System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
            <inheritdoc cref="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.ReadOnlySpan{System.Drawing.PointF},System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.ReadOnlySpan{System.Drawing.PointF},System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
            <summary>
             Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.
            </summary>
            <param name="destPoints">
             An array of points that define a parallelogram to which the rectangle defined by <paramref name="srcRect"/>
             is transformed. The array can contain either three or four elements. If the array contains three elements,
             the lower-right corner of the parallelogram is implied by the first three points.
            </param>
            <param name="srcRect">
             A rectangle that represents the rectangle that is transformed to the parallelogram defined by
             <paramref name="destPoints"/>.
            </param>
            <param name="matrix">A matrix that specifies a geometric transform to apply to the path.</param>
            <param name="warpMode">Specifies whether this warp operation uses perspective or bilinear mode.</param>
            <param name="flatness">
             A value from 0 through 1 that specifies how flat the resulting path is. For more information, see the
             <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)"/> methods.
            </param>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetPathTypes(System.Span{System.Byte})">
            <summary>
             Gets the <see cref="T:System.Drawing.Drawing2D.PathPointType"/> types for the points in the path.
            </summary>
            <param name="destination">
             Span to copy the types into. This should be at least as long as the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PointCount"/>.
            </param>
            <returns>
             The count of types copied into the <paramref name="destination"/>.
            </returns>
        </member>
        <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetPathPoints(System.Span{System.Drawing.PointF})">
            <summary>
             Gets the points in the path.
            </summary>
            <param name="destination">
             Span to copy the points into. This should be at least as long as the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PointCount"/>.
            </param>
            <returns>
             The count of points copied into the <paramref name="destination"/>.
            </returns>
        </member>
        <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Numerics.Matrix3x2)">
            <summary>
             Construct a <see cref="T:System.Drawing.Drawing2D.Matrix"/> utilizing the given <paramref name="matrix"/>.
            </summary>
            <param name="matrix">Matrix data to construct from.</param>
        </member>
        <member name="P:System.Drawing.Drawing2D.Matrix.MatrixElements">
            <summary>
             Gets/sets the elements for the matrix.
            </summary>
        </member>
        <member name="F:System.Drawing.Drawing2D.PathPointType.Start">
            <summary>
             Indicates that the point is the start of a figure.
            </summary>
        </member>
        <member name="F:System.Drawing.Drawing2D.PathPointType.Line">
            <summary>
             Indicates that the point is an endpoint of a line.
            </summary>
        </member>
        <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier">
            <summary>
             Indicates that the point is an endpoint or a control point of a cubic Bézier spline.
            </summary>
        </member>
        <member name="F:System.Drawing.Drawing2D.PathPointType.PathTypeMask">
            <summary>
             Masks all bits except for the three low-order bits, which indicate the point type.
            </summary>
        </member>
        <member name="F:System.Drawing.Drawing2D.PathPointType.DashMode">
            <summary>
             Not used.
            </summary>
        </member>
        <member name="F:System.Drawing.Drawing2D.PathPointType.PathMarker">
            <summary>
             Specifies that the point is a marker.
            </summary>
        </member>
        <member name="F:System.Drawing.Drawing2D.PathPointType.CloseSubpath">
            <summary>
             Specifies that the point is the last point in a closed subpath (figure).
            </summary>
        </member>
        <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier3">
            <inheritdoc cref="F:System.Drawing.Drawing2D.PathPointType.Bezier"/>
        </member>
        <member name="F:System.Drawing.Drawing2D.WrapMode.Tile">
            <summary>
             Tiles the gradient or texture.
            </summary>
        </member>
        <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipX">
            <summary>
             Reverses the texture or gradient horizontally and then tiles the texture or gradient.
            </summary>
        </member>
        <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipY">
            <summary>
             Reverses the texture or gradient vertically and then tiles the texture or gradient.
            </summary>
        </member>
        <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipXY">
            <summary>
             Reverses the texture or gradient horizontally and vertically and then tiles the texture or gradient.
            </summary>
        </member>
        <member name="F:System.Drawing.Drawing2D.WrapMode.Clamp">
            <summary>
             The texture or gradient is not tiled.
            </summary>
        </member>
        <member name="T:System.Drawing.Design.CategoryNameCollection">
            <summary>
            A collection that stores <see cref='T:System.String'/> objects.
            </summary>
        </member>
        <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.Drawing.Design.CategoryNameCollection)">
            <summary>
            Initializes a new instance of <see cref='T:System.Drawing.Design.CategoryNameCollection'/> based on another
            <see cref='T:System.Drawing.Design.CategoryNameCollection'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.String[])">
            <summary>
            Initializes a new instance of <see cref='T:System.Drawing.Design.CategoryNameCollection'/> containing any array of
            <see cref='T:System.String'/> objects.
            </summary>
        </member>
        <member name="P:System.Drawing.Design.CategoryNameCollection.Item(System.Int32)">
            <summary>
            Represents the entry at the specified index of the <see cref='T:System.String'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Design.CategoryNameCollection.Contains(System.String)">
            <summary>
            Gets a value indicating whether the  <see cref='T:System.Drawing.Design.CategoryNameCollection'/> contains the specified
            <see cref='T:System.String'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Design.CategoryNameCollection.CopyTo(System.String[],System.Int32)">
            <summary>
            Copies the <see cref='T:System.Drawing.Design.CategoryNameCollection'/> values to a one-dimensional <see cref='T:System.Array'/> instance
            at the specified index.
            </summary>
        </member>
        <member name="M:System.Drawing.Design.CategoryNameCollection.IndexOf(System.String)">
            <summary>
            Returns the index of a <see cref='T:System.String'/> in  the <see cref='T:System.Drawing.Design.CategoryNameCollection'/> .
            </summary>
        </member>
        <member name="T:System.Drawing.Font">
            <summary>
            Defines a particular format for text, including font face, size, and style attributes.
            </summary>
        </member>
        <member name="P:System.Drawing.Font.Size">
            <summary>
            Gets the size of this <see cref='T:System.Drawing.Font'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Font.Style">
            <summary>
            Gets style information for this <see cref='T:System.Drawing.Font'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Font.Bold">
            <summary>
            Gets a value indicating whether this <see cref='T:System.Drawing.Font'/> is bold.
            </summary>
        </member>
        <member name="P:System.Drawing.Font.Italic">
            <summary>
            Gets a value indicating whether this <see cref='T:System.Drawing.Font'/> is Italic.
            </summary>
        </member>
        <member name="P:System.Drawing.Font.Strikeout">
            <summary>
            Gets a value indicating whether this <see cref='T:System.Drawing.Font'/> is strikeout (has a line through it).
            </summary>
        </member>
        <member name="P:System.Drawing.Font.Underline">
            <summary>
            Gets a value indicating whether this <see cref='T:System.Drawing.Font'/> is underlined.
            </summary>
        </member>
        <member name="P:System.Drawing.Font.FontFamily">
            <summary>
            Gets the <see cref='T:System.Drawing.FontFamily'/> of this <see cref='T:System.Drawing.Font'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Font.Name">
            <summary>
            Gets the face name of this <see cref='T:System.Drawing.Font'/> .
            </summary>
        </member>
        <member name="P:System.Drawing.Font.Unit">
            <summary>
            Gets the unit of measure for this <see cref='T:System.Drawing.Font'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Font.GdiCharSet">
             <summary>
             Returns the GDI char set for this instance of a font. This will only
             be valid if this font was created from a classic GDI font definition,
             like a LOGFONT or HFONT, or it was passed into the constructor.
            
             This is here for compatibility with native Win32 intrinsic controls
             on non-Unicode platforms.
             </summary>
        </member>
        <member name="P:System.Drawing.Font.GdiVerticalFont">
             <summary>
             Determines if this font was created to represent a GDI vertical font. This will only be valid if this font
             was created from a classic GDIfont definition, like a LOGFONT or HFONT, or it was passed into the constructor.
            
             This is here for compatibility with native Win32 intrinsic controls on non-Unicode platforms.
             </summary>
        </member>
        <member name="P:System.Drawing.Font.OriginalFontName">
            <summary>
            This property is required by the framework and not intended to be used directly.
            </summary>
        </member>
        <member name="P:System.Drawing.Font.SystemFontName">
            <summary>
            Gets the name of this <see cref='T:System.Drawing.Font'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Font.IsSystemFont">
            <summary>
            Returns true if this <see cref='T:System.Drawing.Font'/> is a SystemFont.
            </summary>
        </member>
        <member name="P:System.Drawing.Font.Height">
            <summary>
            Gets the height of this <see cref='T:System.Drawing.Font'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Font.NativeFont">
            <summary>
             Get native GDI+ object pointer. This property triggers the creation of the GDI+ native object if not initialized yet.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.Finalize">
            <summary>
            Cleans up Windows resources for this <see cref='T:System.Drawing.Font'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.Dispose">
            <summary>
            Cleans up Windows resources for this <see cref='T:System.Drawing.Font'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.GetHeight(System.Drawing.Graphics)">
            <summary>
             Returns the height of this Font in the specified graphics context.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.Equals(System.Object)">
            <summary>
            Returns a value indicating whether the specified object is a <see cref='T:System.Drawing.Font'/> equivalent to this
            <see cref='T:System.Drawing.Font'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.GetHashCode">
            <summary>
             Gets the hash code for this <see cref='T:System.Drawing.Font'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.ToString">
            <summary>
             Returns a human-readable string representation of this <see cref='T:System.Drawing.Font'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.CreateNativeFont">
            <summary>
             Creates the GDI+ native font object.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.#ctor(System.Drawing.Font,System.Drawing.FontStyle)">
            <summary>
            Initializes a new instance of the <see cref='T:System.Drawing.Font'/> class from the specified existing <see cref='T:System.Drawing.Font'/>
            and <see cref='T:System.Drawing.FontStyle'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
            <summary>
            Initializes a new instance of the <see cref='T:System.Drawing.Font'/> class with the specified attributes.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref='T:System.Drawing.Font'/> class with the specified attributes.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref='T:System.Drawing.Font'/> class with the specified attributes.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref='T:System.Drawing.Font'/> class with the specified attributes.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref='T:System.Drawing.Font'/> class with the specified attributes.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)">
            <summary>
            Initializes a new instance of the <see cref='T:System.Drawing.Font'/> class with the specified attributes.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.GraphicsUnit)">
            <summary>
            Initializes a new instance of the <see cref='T:System.Drawing.Font'/> class with the specified attributes.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single)">
            <summary>
            Initializes a new instance of the <see cref='T:System.Drawing.Font'/> class with the specified attributes.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
            <summary>
            Initializes a new instance of the <see cref='T:System.Drawing.Font'/> class with the specified attributes.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle)">
            <summary>
            Initializes a new instance of the <see cref='T:System.Drawing.Font'/> class with the specified attributes.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.GraphicsUnit)">
            <summary>
            Initializes a new instance of the <see cref='T:System.Drawing.Font'/> class with the specified attributes.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.#ctor(System.String,System.Single)">
            <summary>
            Initializes a new instance of the <see cref='T:System.Drawing.Font'/> class with the specified attributes.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.#ctor(Windows.Win32.Graphics.GdiPlus.GpFont*,System.Byte,System.Boolean)">
            <summary>
            Constructor to initialize fields from an existing native GDI+ object reference. Used by ToLogFont.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.Initialize(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
            <summary>
            Initializes this object's fields.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.Initialize(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
            <summary>
            Initializes this object's fields.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.FromHfont(System.IntPtr)">
            <summary>
            Creates a <see cref='T:System.Drawing.Font'/> from the specified Windows handle.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.FromLogFont(System.Object)">
            <summary>
            Creates a <see cref="T:System.Drawing.Font"/> from the given LOGFONT using the screen device context.
            </summary>
            <param name="lf">A boxed LOGFONT.</param>
            <returns>The newly created <see cref="T:System.Drawing.Font"/>.</returns>
        </member>
        <member name="M:System.Drawing.Font.FromLogFont(System.Object,System.IntPtr)">
            <summary>
             Creates a <see cref="T:System.Drawing.Font"/> from the given LOGFONT using the given device context.
            </summary>
            <param name="lf">A boxed LOGFONT.</param>
            <param name="hdc">Handle to a device context (HDC).</param>
            <returns>The newly created <see cref="T:System.Drawing.Font"/>.</returns>
        </member>
        <member name="M:System.Drawing.Font.FromHdc(System.IntPtr)">
            <summary>
            Creates a <see cref="T:System.Drawing.Font"/> from the specified handle to a device context (HDC).
            </summary>
            <returns>The newly created <see cref="T:System.Drawing.Font"/>.</returns>
        </member>
        <member name="M:System.Drawing.Font.Clone">
            <summary>
             Creates an exact copy of this <see cref='T:System.Drawing.Font'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Font.ToHfont">
            <summary>
             Returns a handle to this <see cref='T:System.Drawing.Font'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Font.SizeInPoints">
            <summary>
            Gets the size, in points, of this <see cref='T:System.Drawing.Font'/>.
            </summary>
        </member>
        <member name="T:System.Drawing.FontFamily">
            <summary>
             Abstracts a group of type faces having a similar basic design but having certain variation in styles.
            </summary>
        </member>
        <member name="M:System.Drawing.FontFamily.#ctor(System.String,System.Boolean)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.FontFamily'/> class with the specified name.
            </summary>
            <param name="createDefaultOnFail">
             Determines how errors are handled when creating a font based on a font family that does not exist on the end
             user's system at run time. If this parameter is true, then a fall-back font will always be used instead.
             If this parameter is false, an exception will be thrown.
            </param>
        </member>
        <member name="M:System.Drawing.FontFamily.#ctor(System.String)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.FontFamily'/> class with the specified name.
            </summary>
        </member>
        <member name="M:System.Drawing.FontFamily.#ctor(System.String,System.Drawing.Text.FontCollection)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.FontFamily'/> class in the specified
             <see cref='T:System.Drawing.Text.FontCollection'/> and with the specified name.
            </summary>
        </member>
        <member name="M:System.Drawing.FontFamily.#ctor(System.Drawing.Text.GenericFontFamilies)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.FontFamily'/> class from the specified generic font family.
            </summary>
        </member>
        <member name="M:System.Drawing.FontFamily.ToString">
            <summary>
            Converts this <see cref='T:System.Drawing.FontFamily'/> to a human-readable string.
            </summary>
        </member>
        <member name="M:System.Drawing.FontFamily.GetHashCode">
            <summary>
             Gets a hash code for this <see cref='T:System.Drawing.FontFamily'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.FontFamily.Dispose">
            <summary>
             Disposes of this <see cref='T:System.Drawing.FontFamily'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.FontFamily.Name">
            <summary>
             Gets the name of this <see cref='T:System.Drawing.FontFamily'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.FontFamily.GetName(System.Int32)">
            <summary>
             Returns the name of this <see cref='T:System.Drawing.FontFamily'/> in the specified language.
            </summary>
        </member>
        <member name="P:System.Drawing.FontFamily.Families">
            <summary>
             Returns an array that contains all of the <see cref='T:System.Drawing.FontFamily'/> objects associated with the current
             graphics context.
            </summary>
        </member>
        <member name="P:System.Drawing.FontFamily.GenericSansSerif">
            <summary>
             Gets a generic SansSerif <see cref='T:System.Drawing.FontFamily'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.FontFamily.GenericSerif">
            <summary>
             Gets a generic Serif <see cref='T:System.Drawing.FontFamily'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.FontFamily.GenericMonospace">
            <summary>
             Gets a generic monospace <see cref='T:System.Drawing.FontFamily'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.FontFamily.GetFamilies(System.Drawing.Graphics)">
            <summary>
             Returns an array that contains all of the <see cref='T:System.Drawing.FontFamily'/> objects associated with the specified
             graphics context.
            </summary>
        </member>
        <member name="M:System.Drawing.FontFamily.IsStyleAvailable(System.Drawing.FontStyle)">
            <summary>
             Indicates whether the specified <see cref='T:System.Drawing.FontStyle'/> is available.
            </summary>
        </member>
        <member name="M:System.Drawing.FontFamily.GetEmHeight(System.Drawing.FontStyle)">
            <summary>
             Gets the size of the Em square for the specified style in font design units.
            </summary>
        </member>
        <member name="M:System.Drawing.FontFamily.GetCellAscent(System.Drawing.FontStyle)">
            <summary>
             Returns the ascender metric for Windows.
            </summary>
        </member>
        <member name="M:System.Drawing.FontFamily.GetCellDescent(System.Drawing.FontStyle)">
            <summary>
             Returns the descender metric for Windows.
            </summary>
        </member>
        <member name="M:System.Drawing.FontFamily.GetLineSpacing(System.Drawing.FontStyle)">
            <summary>
             Returns the distance between two consecutive lines of text for this <see cref='T:System.Drawing.FontFamily'/> with the
             specified <see cref='T:System.Drawing.FontStyle'/>.
            </summary>
        </member>
        <member name="T:System.Drawing.FontStyle">
            <summary>
            Specifies style information applied to text.
            </summary>
        </member>
        <member name="F:System.Drawing.FontStyle.Regular">
            <summary>
            Normal text.
            </summary>
        </member>
        <member name="F:System.Drawing.FontStyle.Bold">
            <summary>
            Bold text.
            </summary>
        </member>
        <member name="F:System.Drawing.FontStyle.Italic">
            <summary>
            Italic text.
            </summary>
        </member>
        <member name="F:System.Drawing.FontStyle.Underline">
            <summary>
            Underlined text.
            </summary>
        </member>
        <member name="F:System.Drawing.FontStyle.Strikeout">
            <summary>
            Text with a line through the middle.
            </summary>
        </member>
        <member name="P:System.Drawing.Gdip.Initialized">
            <summary>
            Returns true if GDI+ has been started, but not shut down
            </summary>
        </member>
        <member name="P:System.Drawing.Gdip.ThreadData">
            <summary>
            This property will give us back a dictionary we can use to store all of our static brushes and pens on
            a per-thread basis. This way we can avoid 'object in use' crashes when different threads are
            referencing the same drawing object.
            </summary>
        </member>
        <member name="T:System.Drawing.Graphics">
            <summary>
             Encapsulates a GDI+ drawing surface.
            </summary>
        </member>
        <member name="F:System.Drawing.Graphics._previousContext">
            <summary>
             The context state previous to the current Graphics context (the head of the stack).
             We don't keep a GraphicsContext for the current context since it is available at any time from GDI+ and
             we don't want to keep track of changes in it.
            </summary>
        </member>
        <member name="F:System.Drawing.Graphics._nativeHdc">
            <summary>
             Handle to native DC - obtained from the GDI+ graphics object. We need to cache it to implement
             IDeviceContext interface.
            </summary>
        </member>
        <member name="T:System.Drawing.Graphics.EnumerateMetafileProc">
            <summary>
            Callback for EnumerateMetafile methods.
            This method can then call Metafile.PlayRecord to play the record that was just enumerated.
            </summary>
            <param name="recordType">if >= MinRecordType, it's an EMF+ record</param>
            <param name="flags">always 0 for EMF records</param>
            <param name="dataSize">size of the data, or 0 if no data</param>
            <param name="data">pointer to the data, or NULL if no data (UINT32 aligned)</param>
            <param name="callbackData">pointer to callbackData, if any</param>
            <returns>False to abort enumerating, true to continue.</returns>
        </member>
        <member name="M:System.Drawing.Graphics.#ctor(Windows.Win32.Graphics.GdiPlus.GpGraphics*)">
            <summary>
             Constructor to initialize this object from a native GDI+ Graphics pointer.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
            <summary>
             Creates a new instance of the <see cref='T:System.Drawing.Graphics'/> class from the specified handle to a device context.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
            <summary>
             Creates a new instance of the Graphics class from the specified handle to a device context and handle to a device.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
            <summary>
             Creates a new instance of the <see cref='T:System.Drawing.Graphics'/> class from a window handle.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
            <summary>
             Creates an instance of the <see cref='T:System.Drawing.Graphics'/> class from an existing <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.Dispose">
            <summary>
             Deletes this <see cref='T:System.Drawing.Graphics'/>, and frees the memory allocated for it.
            </summary>
        </member>
        <member name="P:System.Drawing.Graphics.NativeGraphics">
            <summary>
             Handle to native GDI+ graphics object. This object is created on demand.
            </summary>
        </member>
        <member name="P:System.Drawing.Graphics.CompositingMode">
            <summary>
            Gets or sets the <see cref='T:System.Drawing.Drawing2D.CompositingMode'/> associated with this <see cref='T:System.Drawing.Graphics'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Graphics.InterpolationMode">
            <summary>
            Gets or sets the interpolation mode associated with this Graphics.
            </summary>
        </member>
        <member name="P:System.Drawing.Graphics.TextRenderingHint">
            <summary>
             Gets or sets the rendering mode for text associated with this <see cref='T:System.Drawing.Graphics'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Graphics.Transform">
            <summary>
             Gets or sets the world transform for this <see cref='T:System.Drawing.Graphics'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Graphics.TransformElements">
            <summary>
             Gets or sets the world transform elements for this <see cref="T:System.Drawing.Graphics"/>.
            </summary>
            <remarks>
             <para>
              This is a more performant alternative to <see cref="P:System.Drawing.Graphics.Transform"/> that does not need disposal.
             </para>
            </remarks>
        </member>
        <member name="M:System.Drawing.Graphics.Flush">
            <summary>
             Forces immediate execution of all operations currently on the stack.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)">
            <summary>
             Forces execution of all operations currently on the stack.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.ResetTransform">
            <summary>
             Resets the world transform to identity.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
            <summary>
             Multiplies the <see cref='T:System.Drawing.Drawing2D.Matrix'/> that represents the world transform and <paramref name="matrix"/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
             Multiplies the <see cref='T:System.Drawing.Drawing2D.Matrix'/> that represents the world transform and <paramref name="matrix"/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
             Draws an arc from the specified ellipse.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
             Draws an arc from the specified ellipse.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws an arc from the specified ellipse.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
             Draws an arc from the specified ellipse.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
             Draws a cubic Bezier curve defined by four ordered pairs that represent points.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
             Draws a cubic Bezier curve defined by four points.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
             Draws a cubic Bezier curve defined by four points.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
             Draws the outline of a rectangle specified by <paramref name="rect"/>.
            </summary>
            <param name="pen">A Pen that determines the color, width, and style of the rectangle.</param>
            <param name="rect">A Rectangle structure that represents the rectangle to draw.</param>
        </member>
        <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
            <summary>
             Draws the outline of a rectangle specified by <paramref name="rect"/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawRoundedRectangle(System.Drawing.Pen,System.Drawing.Rectangle,System.Drawing.Size)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawRoundedRectangle(System.Drawing.Pen,System.Drawing.RectangleF,System.Drawing.SizeF)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawRoundedRectangle(System.Drawing.Pen,System.Drawing.RectangleF,System.Drawing.SizeF)">
            <summary>
             Draws the outline of the specified rounded rectangle.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/> to draw the outline with.</param>
            <inheritdoc cref="M:System.Drawing.Graphics.FillRoundedRectangle(System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.SizeF)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
             Draws the outline of the specified rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
             Draws the outline of the specified rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.RectangleF})">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
            <summary>
             Draws the outlines of a series of rectangles.
            </summary>
            <param name="pen"><see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the outlines of the rectangles.</param>
            <param name="rects">An array of <see cref="T:System.Drawing.Rectangle"/> structures that represents the rectangles to draw.</param>
        </member>
        <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.Rectangle})">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
             Draws the outline of an ellipse defined by a bounding rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
             Draws the outline of an ellipse defined by a bounding rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
            <summary>
             Draws the outline of an ellipse specified by a bounding rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
             Draws the outline of an ellipse defined by a bounding rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
             Draws the outline of a pie section defined by an ellipse and two radial lines.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
             Draws the outline of a pie section defined by an ellipse and two radial lines.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
             Draws the outline of a pie section defined by an ellipse and two radial lines.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
             Draws the outline of a pie section defined by an ellipse and two radial lines.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.PointF})">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
            <summary>
             Draws the outline of a polygon defined by an array of points.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/> to draw the outline with.</param>
            <param name="points">An array of <see cref="T:System.Drawing.Point"/> structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.Point})">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
             Draws the lines and curves defined by a <see cref='T:System.Drawing.Drawing2D.GraphicsPath'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.PointF})">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.PointF},System.Single)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.PointF},System.Int32,System.Int32)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.PointF},System.Int32,System.Int32,System.Single)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.Point})">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.Point},System.Single)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
            <summary>
             Draws a curve defined by an array of points.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/> to draw the curve with.</param>
            <param name="points">An array of points that define the curve.</param>
            <param name="offset">The index of the first point in the array to draw.</param>
            <param name="numberOfSegments">The number of segments to draw.</param>
            <param name="tension">A value greater than, or equal to zero that specifies the tension of the curve.</param>
        </member>
        <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.Point},System.Int32,System.Int32,System.Single)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.PointF})">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
            <summary>
             Draws a closed curve defined by an array of points.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/> to draw the closed curve with.</param>
            <param name="points">An array of points that define the closed curve.</param>
            <param name="tension">A value greater than, or equal to zero that specifies the tension of the curve.</param>
            <param name="fillmode">A <see cref="T:System.Drawing.Drawing2D.FillMode"/> enumeration that specifies the fill mode of the curve.</param>
        </member>
        <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.PointF},System.Single,System.Drawing.Drawing2D.FillMode)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.Point})">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.Point},System.Single,System.Drawing.Drawing2D.FillMode)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Graphics.Clear(System.Drawing.Color)">
            <summary>
             Fills the entire drawing surface with the specified color.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.FillRoundedRectangle(System.Drawing.Brush,System.Drawing.Rectangle,System.Drawing.Size)">
            <inheritdoc cref="M:System.Drawing.Graphics.FillRoundedRectangle(System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.SizeF)"/>/>
        </member>
        <member name="M:System.Drawing.Graphics.FillRoundedRectangle(System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.SizeF)">
            <summary>
             Fills the interior of a rounded rectangle with a <see cref='T:System.Drawing.Brush'/>.
            </summary>
            <param name="brush">The <see cref="T:System.Drawing.Brush"/> to fill the rounded rectangle with.</param>
            <param name="rect">The bounds of the rounded rectangle.</param>
            <param name="radius">The radius width and height used to round the corners of the rectangle.</param>
        </member>
        <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
             Fills the interior of a rectangle with a <see cref='T:System.Drawing.Brush'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
             Fills the interior of a rectangle with a <see cref='T:System.Drawing.Brush'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
            <summary>
             Fills the interior of a rectangle with a <see cref='T:System.Drawing.Brush'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
             Fills the interior of a rectangle with a <see cref='T:System.Drawing.Brush'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
            <summary>
             Fills the interiors of a series of rectangles with a <see cref='T:System.Drawing.Brush'/>.
            </summary>
            <param name="brush">The <see cref="T:System.Drawing.Brush"/> to fill the rectangles with.</param>
            <param name="rects">An array of rectangles to fill.</param>
        </member>
        <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.ReadOnlySpan{System.Drawing.RectangleF})">
            <inheritdoc cref="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
            <inheritdoc cref="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.ReadOnlySpan{System.Drawing.Rectangle})">
            <inheritdoc cref="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
            <inheritdoc cref="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.ReadOnlySpan{System.Drawing.PointF})">
            <inheritdoc cref="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
            <inheritdoc cref="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.ReadOnlySpan{System.Drawing.PointF},System.Drawing.Drawing2D.FillMode)">
            <inheritdoc cref="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
            <inheritdoc cref="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.ReadOnlySpan{System.Drawing.Point})">
            <inheritdoc cref="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
            <summary>
             Fills the interior of a polygon defined by an array of points.
            </summary>
            <param name="brush">The <see cref="T:System.Drawing.Brush"/> to fill the polygon with.</param>
            <param name="points">An array points that represent the vertices of the polygon.</param>
            <param name="fillMode">A <see cref="T:System.Drawing.Drawing2D.FillMode"/> enumeration that specifies the fill mode of the polygon.</param>
        </member>
        <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.ReadOnlySpan{System.Drawing.Point},System.Drawing.Drawing2D.FillMode)">
            <inheritdoc cref="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
             Fills the interior of an ellipse defined by a bounding rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
             Fills the interior of an ellipse defined by a bounding rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
            <summary>
             Fills the interior of an ellipse defined by a bounding rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
             Fills the interior of an ellipse defined by a bounding rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
             Fills the interior of a pie section defined by an ellipse and two radial lines.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
             Fills the interior of a pie section defined by an ellipse and two radial lines.
            </summary>
            <param name="brush">A Brush that determines the characteristics of the fill.</param>
            <param name="rect">A Rectangle structure that represents the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the <paramref name="startAngle"/> parameter to the second side of the pie section.</param>
        </member>
        <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
             Fills the interior of a pie section defined by an ellipse and two radial lines.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
             Fills the interior of a pie section defined by an ellipse and two radial lines.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
            <inheritdoc cref="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.ReadOnlySpan{System.Drawing.PointF})">
            <inheritdoc cref="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
            <inheritdoc cref="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.ReadOnlySpan{System.Drawing.PointF},System.Drawing.Drawing2D.FillMode)">
            <inheritdoc cref="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
            <summary>
             Fills the interior of a closed curve defined by an array of points.
            </summary>
            <param name="brush">The <see cref="T:System.Drawing.Brush"/> to fill the closed curve with.</param>
            <param name="points">An array of points that make up the closed curve.</param>
            <param name="fillmode">A <see cref="T:System.Drawing.Drawing2D.FillMode"/> enumeration that specifies the fill mode of the closed curve.</param>
            <param name="tension">A value greater than, or equal to zero that specifies the tension of the curve.</param>
        </member>
        <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.ReadOnlySpan{System.Drawing.PointF},System.Drawing.Drawing2D.FillMode,System.Single)">
            <inheritdoc cref="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
            <inheritdoc cref="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.ReadOnlySpan{System.Drawing.Point})">
            <inheritdoc cref="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
            <inheritdoc cref="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.ReadOnlySpan{System.Drawing.Point},System.Drawing.Drawing2D.FillMode)">
            <inheritdoc cref="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
            <inheritdoc cref="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.ReadOnlySpan{System.Drawing.Point},System.Drawing.Drawing2D.FillMode,System.Single)">
            <inheritdoc cref="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
            <summary>
             Draws the specified text at the specified location with the specified <see cref="T:System.Drawing.Brush"/> and
             <see cref="T:System.Drawing.Font"/> objects.
            </summary>
            <param name="s">The text to draw.</param>
            <param name="font"><see cref="T:System.Drawing.Font"/> that defines the text format.</param>
            <param name="brush"><see cref="T:System.Drawing.Brush"/> that determines the color and texture of the drawn text.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="brush"/> is <see langword="null"/>. -or- <paramref name="font"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.Drawing.Graphics.DrawString(System.ReadOnlySpan{System.Char},System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
            <summary>
             Draws the specified text at the specified location with the specified <see cref="T:System.Drawing.Brush"/> and
             <see cref="T:System.Drawing.Font"/> objects.
            </summary>
            <param name="s">The text to draw.</param>
            <param name="font"><see cref="T:System.Drawing.Font"/> that defines the text format.</param>
            <param name="brush"><see cref="T:System.Drawing.Brush"/> that determines the color and texture of the drawn text.</param>
            <param name="point"><see cref="T:System.Drawing.PointF"/>structure that specifies the upper-left corner of the drawn text.</param>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="brush"/> is <see langword="null"/>. -or- <paramref name="font"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.Drawing.Graphics.DrawString(System.ReadOnlySpan{System.Char},System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
            <summary>
             Draws the specified text at the specified location with the specified <see cref="T:System.Drawing.Brush"/> and
             <see cref="T:System.Drawing.Font"/> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat"/>.
            </summary>
            <param name="s">The text to draw.</param>
            <param name="font"><see cref="T:System.Drawing.Font"/> that defines the text format.</param>
            <param name="brush"><see cref="T:System.Drawing.Brush"/> that determines the color and texture of the drawn text.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
            <param name="format">
             <see cref="T:System.Drawing.StringFormat"/> that specifies formatting attributes, such as line spacing and alignment,
             that are applied to the drawn text.
            </param>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="brush"/> is <see langword="null"/>. -or- <paramref name="font"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.Drawing.Graphics.DrawString(System.ReadOnlySpan{System.Char},System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
            <summary>
             Draws the specified text at the specified location with the specified <see cref="T:System.Drawing.Brush"/> and
             <see cref="T:System.Drawing.Font"/> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat"/>.
            </summary>
            <param name="s">The text to draw.</param>
            <param name="font"><see cref="T:System.Drawing.Font"/> that defines the text format.</param>
            <param name="brush"><see cref="T:System.Drawing.Brush"/> that determines the color and texture of the drawn text.</param>
            <param name="point"><see cref="T:System.Drawing.PointF"/>structure that specifies the upper-left corner of the drawn text.</param>
            <param name="format">
             <see cref="T:System.Drawing.StringFormat"/> that specifies formatting attributes, such as line spacing and alignment,
             that are applied to the drawn text.
            </param>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="brush"/> is <see langword="null"/>. -or- <paramref name="font"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:System.Drawing.Graphics.DrawString(System.ReadOnlySpan{System.Char},System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
             Draws the specified text in the specified rectangle with the specified <see cref="T:System.Drawing.Brush"/> and
             <see cref="T:System.Drawing.Font"/> objects.
            </summary>
            <param name="s">The text to draw.</param>
            <param name="font"><see cref="T:System.Drawing.Font"/> that defines the text format.</param>
            <param name="brush"><see cref="T:System.Drawing.Brush"/> that determines the color and texture of the drawn text.</param>
            <param name="layoutRectangle"><see cref="T:System.Drawing.RectangleF"/>structure that specifies the location of the drawn text.</param>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="brush"/> is <see langword="null"/>. -or- <paramref name="font"/> is <see langword="null"/>.
            </exception>
            <remarks>
             <para>
              The text represented by the <paramref name="s"/> parameter is drawn inside the rectangle represented by
              the <paramref name="layoutRectangle"/> parameter. If the text does not fit inside the rectangle, it is
              truncated at the nearest word. To further manipulate how the string is drawn inside the rectangle use the
              <see cref="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)"/> overload that takes
              a <see cref="T:System.Drawing.StringFormat"/>.
             </para>
            </remarks>
        </member>
        <member name="M:System.Drawing.Graphics.DrawString(System.ReadOnlySpan{System.Char},System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
            <remarks>
             <para>
              The text represented by the <paramref name="s"/> parameter is drawn inside the rectangle represented by
              the <paramref name="layoutRectangle"/> parameter. If the text does not fit inside the rectangle, it is
              truncated at the nearest word. To further manipulate how the string is drawn inside the rectangle use the
              <see cref="M:System.Drawing.Graphics.DrawString(System.ReadOnlySpan{System.Char},System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)"/> overload that takes
              a <see cref="T:System.Drawing.StringFormat"/>.
             </para>
            </remarks>
            <inheritdoc cref="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
             Draws the specified text in the specified rectangle with the specified <see cref="T:System.Drawing.Brush"/> and
             <see cref="T:System.Drawing.Font"/> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat"/>.
            </summary>
            <param name="s">The text to draw.</param>
            <param name="font"><see cref="T:System.Drawing.Font"/> that defines the text format.</param>
            <param name="brush"><see cref="T:System.Drawing.Brush"/> that determines the color and texture of the drawn text.</param>
            <param name="layoutRectangle"><see cref="T:System.Drawing.RectangleF"/>structure that specifies the location of the drawn text.</param>
            <param name="format">
             <see cref="T:System.Drawing.StringFormat"/> that specifies formatting attributes, such as line spacing and alignment,
             that are applied to the drawn text.
            </param>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="brush"/> is <see langword="null"/>. -or- <paramref name="font"/> is <see langword="null"/>.
            </exception>
            <remarks>
             <para>
              The text represented by the <paramref name="s"/> parameter is drawn inside the rectangle represented by
              the <paramref name="layoutRectangle"/> parameter. If the text does not fit inside the rectangle, it is
              truncated at the nearest word, unless otherwise specified with the <paramref name="format"/> parameter.
             </para>
            </remarks>
        </member>
        <member name="M:System.Drawing.Graphics.DrawString(System.ReadOnlySpan{System.Char},System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)"/>
        </member>
        <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
            <param name="charactersFitted">Number of characters in the text.</param>
            <param name="linesFilled">Number of lines in the text.</param>
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)"/>
        </member>
        <member name="M:System.Drawing.Graphics.MeasureString(System.ReadOnlySpan{System.Char},System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)"/>
        </member>
        <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
            <param name="origin"><see cref="T:System.Drawing.PointF"/> structure that represents the upper-left corner of the text.</param>
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)"/>
        </member>
        <member name="M:System.Drawing.Graphics.MeasureString(System.ReadOnlySpan{System.Char},System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)"/>
        </member>
        <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)"/>
        </member>
        <member name="M:System.Drawing.Graphics.MeasureString(System.ReadOnlySpan{System.Char},System.Drawing.Font,System.Drawing.SizeF)">
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)"/>
        </member>
        <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <param name="stringFormat"><see cref="T:System.Drawing.StringFormat"/> that represents formatting information, such as line spacing, for the text.</param>
            <param name="layoutArea"><see cref="T:System.Drawing.SizeF"/> structure that specifies the maximum layout area for the text.</param>
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)"/>
        </member>
        <member name="M:System.Drawing.Graphics.MeasureString(System.ReadOnlySpan{System.Char},System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)"/>
        </member>
        <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
            <summary>
             Measures the specified text when drawn with the specified <see cref="T:System.Drawing.Font"/>.
            </summary>
            <param name="text">Text to measure.</param>
            <param name="font"><see cref="T:System.Drawing.Font"/> that defines the text format.</param>
            <returns>
             This method returns a <see cref="T:System.Drawing.SizeF"/> structure that represents the size, in the units specified by the
             <see cref="P:System.Drawing.Graphics.PageUnit"/> property, of the text specified by the <paramref name="text"/> parameter as drawn
             with the <paramref name="font"/> parameter.
            </returns>
            <remarks>
             <para>
              The <see cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)"/> method is designed for use with individual strings and
              includes a small amount of extra space before and after the string to allow for overhanging glyphs. Also,
              the <see cref="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)"/> method adjusts glyph points to optimize display
              quality and might display a string narrower than reported by <see cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)"/>.
              To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text),
              use the <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)"/> method or one of
              the <see cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)"/> methods that takes a StringFormat, and
              pass <see cref="P:System.Drawing.StringFormat.GenericTypographic"/>. Also, ensure the <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> for
              the <see cref="T:System.Drawing.Graphics"/> is <see cref="F:System.Drawing.Text.TextRenderingHint.AntiAlias"/>.
             </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="font"/> is null.</exception>
        </member>
        <member name="M:System.Drawing.Graphics.MeasureString(System.ReadOnlySpan{System.Char},System.Drawing.Font)">
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)"/>
        </member>
        <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
            <param name="width">Maximum width of the string in pixels.</param>
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)"/>
        </member>
        <member name="M:System.Drawing.Graphics.MeasureString(System.ReadOnlySpan{System.Char},System.Drawing.Font,System.Int32)">
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)"/>
        </member>
        <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
            <param name="format"><see cref="T:System.Drawing.StringFormat"/> that represents formatting information, such as line spacing, for the text.</param>
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)"/>
        </member>
        <member name="M:System.Drawing.Graphics.MeasureString(System.ReadOnlySpan{System.Char},System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)"/>
        </member>
        <member name="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
             Gets an array of <see cref="T:System.Drawing.Region"/> objects, each of which bounds a range of character positions within
             the specified text.
            </summary>
            <param name="text">Text to measure.</param>
            <param name="font"><see cref="T:System.Drawing.Font"/> that defines the text format.</param>
            <param name="layoutRect"><see cref="T:System.Drawing.RectangleF"/> structure that specifies the layout rectangle for the text.</param>
            <param name="stringFormat"><see cref="T:System.Drawing.StringFormat"/> that represents formatting information, such as line spacing, for the text.</param>
            <returns>
             This method returns an array of <see cref="T:System.Drawing.Region"/> objects, each of which bounds a range of character
             positions within the specified text.
            </returns>
            <remarks>
             <para>
              The regions returned by this method are resolution-dependent, so there might be a slight loss of accuracy
              if text is recorded in a metafile at one resolution and later played back at a different resolution.
             </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="font"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:System.Drawing.Graphics.MeasureCharacterRanges(System.ReadOnlySpan{System.Char},System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
            <summary>
             Draws the specified image at the specified location.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
             Draws a line connecting the two specified points.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.PointF})">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
             Draws a line connecting the two specified points.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
            <summary>
             Draws a line connecting the two specified points.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
            <summary>
             Draws a series of line segments that connect an array of points.
            </summary>
            <param name="pen">The <see cref="T:System.Drawing.Pen"/> that determines the color, width, and style of the line segments.</param>
            <param name="points">An array of points to connect.</param>
        </member>
        <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.Point})">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])"/>
        </member>
        <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
            <summary>
             CopyPixels will perform a gdi "bitblt" operation to the source from the destination with the given size.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
            <summary>
             CopyPixels will perform a gdi "bitblt" operation to the source from the destination with the given size.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
            <summary>
             CopyPixels will perform a gdi "bitblt" operation to the source from the destination with the given size
             and specified raster operation.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.IgnoreMetafileErrors(System.Drawing.Image,Windows.Win32.Graphics.GdiPlus.Status@)">
            <summary>
             GDI+ will return a 'generic error' when we attempt to draw an Emf
             image with width/height == 1. Here, we will hack around this by
             resetting the Status. Note that we don't do simple arg checking
             for height || width == 1 here because transforms can be applied to
             the Graphics object making it difficult to identify this scenario.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.GetRegionIfNotInfinite">
            <summary>
             Creates a Region class only if the native region is not infinite.
            </summary>
        </member>
        <member name="P:System.Drawing.Graphics.PrintingHelper">
            <summary>
             Represents an object used in connection with the printing API, it is used to hold a reference to a
             PrintPreviewGraphics (fake graphics) or a printer DeviceContext (and maybe more in the future).
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
            <summary>
             CopyPixels will perform a gdi "bitblt" operation to the source from the destination with the given size
             and specified raster operation.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
             Draws a line connecting the two specified points.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.PointF})">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
            <summary>
             Draws a series of cubic Bézier curves from an array of points.
            </summary>
            <param name="pen">The <paramref name="pen"/> to draw the Bézier with.</param>
            <param name="points">
             Points that represent the points that determine the curve. The number of points in the array
             should be a multiple of 3 plus 1, such as 4, 7, or 10.
            </param>
        </member>
        <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.ReadOnlySpan{System.Drawing.Point})">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])"/>
        </member>
        <member name="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
             Fills the interior of a path.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
            <summary>
             Fills the interior of a <see cref='T:System.Drawing.Region'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
            <summary>
             Draws this image to a graphics object. The drawing command originates on the graphics
             object, but a graphics object generally has no idea how to render a given image. So,
             it passes the call to the actual image. This version crops the image to the given
             dimensions and allows the user to specify a rectangle within the image to draw.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
            <summary>
             Draws this image to a graphics object. The drawing command originates on the graphics
             object, but a graphics object generally has no idea how to render a given image. So,
             it passes the call to the actual image. This version stretches the image to the given
             dimensions and allows the user to specify a rectangle within the image to draw.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.GetContextInfo">
            <summary>
             Combines current Graphics context with all previous contexts.
             When BeginContainer() is called, a copy of the current context is pushed into the GDI+ context stack, it keeps track of the
             absolute clipping and transform but reset the public properties so it looks like a brand new context.
             When Save() is called, a copy of the current context is also pushed in the GDI+ stack but the public clipping and transform
             properties are not reset (cumulative). Consecutive Save context are ignored with the exception of the top one which contains
             all previous information.
             The return value is an object array where the first element contains the cumulative clip region and the second the cumulative
             translate transform matrix.
             WARNING: This method is for internal FX support only.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.GetContextInfo(System.Drawing.PointF@)">
            <summary>
             Gets the cumulative offset.
            </summary>
            <param name="offset">The cumulative offset.</param>
        </member>
        <member name="M:System.Drawing.Graphics.GetContextInfo(System.Drawing.PointF@,System.Drawing.Region@)">
            <summary>
             Gets the cumulative offset and clip region.
            </summary>
            <param name="offset">The cumulative offset.</param>
            <param name="clip">The cumulative clip region or null if the clip region is infinite.</param>
        </member>
        <member name="M:System.Drawing.Graphics.PushContext(System.Drawing.GraphicsContext)">
            <summary>
             Saves the current context into the context stack.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.PopContext(System.Int32)">
            <summary>
             Pops all contexts from the specified one included. The specified context is becoming the current context.
            </summary>
        </member>
        <member name="M:System.Drawing.Graphics.CheckErrorStatus(Windows.Win32.Graphics.GdiPlus.Status)">
             <summary>
              GDI+ will return a 'generic error' with specific win32 last error codes when
              a terminal server session has been closed, minimized, etc... We don't want
              to throw when this happens, so we'll guard against this by looking at the
              'last win32 error code' and checking to see if it is either 1) access denied
              or 2) proc not found and then ignore it.
            
              The problem is that when you lock the machine, the secure desktop is enabled and
              rendering fails which is expected (since the app doesn't have permission to draw
              on the secure desktop). Not sure if there's anything you can do, short of catching
              the desktop switch message and absorbing all the exceptions that get thrown while
              it's the secure desktop.
             </summary>
        </member>
        <member name="M:System.Drawing.Graphics.DrawCachedBitmap(System.Drawing.Imaging.CachedBitmap,System.Int32,System.Int32)">
            <summary>
             Draws the given <paramref name="cachedBitmap"/>.
            </summary>
            <param name="cachedBitmap">The <see cref="T:System.Drawing.Imaging.CachedBitmap"/> that contains the image to be drawn.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
            <exception cref="T:System.ArgumentNullException">
             <para><paramref name="cachedBitmap"/> is <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
             <para>
              The <paramref name="cachedBitmap"/> is not compatible with the <see cref="T:System.Drawing.Graphics"/> device state.
             </para>
             <para>
             - or -
             </para>
             <para>
              The <see cref="T:System.Drawing.Graphics"/> object has a transform applied other than a translation.
             </para>
            </exception>
        </member>
        <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Imaging.Effects.Effect)">
            <inheritdoc cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Imaging.Effects.Effect,System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)"/>
        </member>
        <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Imaging.Effects.Effect,System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
             Draws a portion of an image after applying a specified effect.
            </summary>
            <param name="image"><see cref="T:System.Drawing.Image"/> to be drawn.</param>
            <param name="effect">The effect to be applied when drawing.</param>
            <param name="srcRect">The portion of the image to be drawn. <see cref="F:System.Drawing.RectangleF.Empty"/> draws the full image.</param>
            <param name="transform">The transform to apply to the <paramref name="srcRect"/> to determine the destination.</param>
            <param name="srcUnit">Unit of measure of the <paramref name="srcRect"/>.</param>
            <param name="imageAttr">Additional adjustments to be applied, if any.</param>
        </member>
        <member name="T:System.Drawing.GraphicsContext">
            <summary>
            Contains information about the context of a Graphics object.
            </summary>
        </member>
        <member name="M:System.Drawing.GraphicsContext.Dispose">
            <summary>
            Disposes this and all contexts up the stack.
            </summary>
        </member>
        <member name="P:System.Drawing.GraphicsContext.State">
            <summary>
            The state id representing the GraphicsContext.
            </summary>
        </member>
        <member name="P:System.Drawing.GraphicsContext.TransformOffset">
            <summary>
            The translate transform in the GraphicsContext.
            </summary>
        </member>
        <member name="P:System.Drawing.GraphicsContext.Clip">
            <summary>
            The clipping region the GraphicsContext.
            </summary>
        </member>
        <member name="P:System.Drawing.GraphicsContext.Next">
            <summary>
            The next GraphicsContext object in the stack.
            </summary>
        </member>
        <member name="P:System.Drawing.GraphicsContext.Previous">
            <summary>
            The previous GraphicsContext object in the stack.
            </summary>
        </member>
        <member name="P:System.Drawing.GraphicsContext.IsCumulative">
            <summary>
            Flag that determines whether the context was created for a Graphics.Save() operation.
            This kind of contexts are cumulative across subsequent Save() calls so the top context
            info is cumulative.  This is not the same for contexts created for a Graphics.BeginContainer()
            operation, in this case the new context information is reset.  See Graphics.BeginContainer()
            and Graphics.Save() for more information.
            </summary>
        </member>
        <member name="T:System.Drawing.GraphicsUnit">
            <summary>
             Specifies the unit of measure for the given data.
            </summary>
        </member>
        <member name="F:System.Drawing.GraphicsUnit.World">
            <summary>
             Specifies the world unit as the unit of measure.
            </summary>
        </member>
        <member name="F:System.Drawing.GraphicsUnit.Display">
            <summary>
             Specifies 1/75 inch as the unit of measure.
            </summary>
        </member>
        <member name="F:System.Drawing.GraphicsUnit.Pixel">
            <summary>
             Specifies a device pixel as the unit of measure.
            </summary>
        </member>
        <member name="F:System.Drawing.GraphicsUnit.Point">
            <summary>
             Specifies a printer's point (1/72 inch) as the unit of measure.
            </summary>
        </member>
        <member name="F:System.Drawing.GraphicsUnit.Inch">
            <summary>
             Specifies the inch as the unit of measure.
            </summary>
        </member>
        <member name="F:System.Drawing.GraphicsUnit.Document">
            <summary>
             Specifies the document unit (1/300 inch) as the unit of measure.
            </summary>
        </member>
        <member name="F:System.Drawing.GraphicsUnit.Millimeter">
            <summary>
             Specifies the millimeter as the unit of measure.
            </summary>
        </member>
        <member name="M:System.Drawing.Icon.Save(System.IO.Stream)">
            <summary>
             Saves this <see cref="T:System.Drawing.Icon"/> to the specified output <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="outputStream">The <see cref="T:System.IO.Stream"/> to save to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="outputStream"/> was <see langword="null"/>.</exception>
        </member>
        <member name="M:System.Drawing.Icon.ExtractIcon(System.String,System.Int32,System.Int32)">
            <summary>
             Extracts a specified icon from the given <paramref name="filePath"/>.
            </summary>
            <remarks>
             <para>
              Unlike the <see cref="M:System.Drawing.Icon.#ctor(System.String)">constructors that take a path</see> this method and the
              <see cref="M:System.Drawing.Icon.ExtractAssociatedIcon(System.String)"/> methods do not retain all of the resource data or modify the
              original data (outside of resizing if necessary). As such, the <see cref="T:System.Drawing.Icon"/> only uses as much
              memory as is needed for the requested size (mostly native memory).
             </para>
             <para>
              Without the original source data the <see cref="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)">copy constructors</see> have to resample
              the current icon's bitmap to change sizes. For best image quality, if different sizes for an <see cref="T:System.Drawing.Icon"/>
              are desired you should create separate instances with this method and avoid the copy constructors.
             </para>
            </remarks>
            <param name="filePath">Path to an icon or PE (.dll, .exe) file.</param>
            <param name="id">
             Positive numbers refer to an icon index in the given file. Negative numbers refer to a specific native resource
             identifier in a PE (.dll, .exe) file.
            </param>
            <param name="size">
             The desired size. If the specified size does not exist, an existing size will be resampled to give the
             requested size.
            </param>
            <returns>
             An <see cref="T:System.Drawing.Icon"/>, or <see langword="null"/> if an icon can't be found with the specified
             <paramref name="id"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
             <paramref name="size"/> is negative or larger than <see cref="F:System.UInt16.MaxValue"/>.
            </exception>
            <exception cref="T:System.IO.IOException">
             There given <paramref name="filePath"/> could not be accessed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
             <paramref name="filePath"/> is null.
            </exception>
        </member>
        <member name="M:System.Drawing.Icon.ExtractIcon(System.String,System.Int32,System.Boolean)">
            <param name="smallIcon">
             If <see langword="true"/>, gets the <see cref="T:System.Drawing.Icon"/> at the current system small icon size setting. If
             <see langword="false"/>, gets the <see cref="T:System.Drawing.Icon"/> at the current system large icon size setting. Default is
             <see langword="false"/>.
            </param>
            <inheritdoc cref="M:System.Drawing.Icon.ExtractIcon(System.String,System.Int32,System.Int32)" />
        </member>
        <member name="T:System.Drawing.IDeviceContext">
             <summary>
             This interface defines methods for obtaining a display/window device context handle (Win32 hdc).
             Note: Display and window dc handles are obtained and released using BeginPaint/EndPaint and
             GetDC/ReleaseDC; this interface is intended to be used with the last method only.
            
             Warning to implementors: Creating and releasing non-display dc handles using this interface needs
             special care, for instance using other Win32 functions like CreateDC or CreateCompatibleDC require
             DeleteDC instead of ReleaseDC to properly free the dc handle.
            
             See the DeviceContext class for an implementation of this interface, it uses the Dispose method
             for freeing non-display dc handles.
            
             This is a low-level API that is expected to be used with TextRenderer or PInvoke calls.
             </summary>
        </member>
        <member name="T:System.Drawing.Image">
            <summary>
             An abstract base class that provides functionality for 'Bitmap', 'Icon', 'Cursor', and 'Metafile' descended classes.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.FromFile(System.String)">
            <summary>
             Creates an <see cref='T:System.Drawing.Image'/> from the specified file.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.FromStream(System.IO.Stream)">
            <summary>
             Creates an <see cref='T:System.Drawing.Image'/> from the specified data stream.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.Dispose">
            <summary>
             Cleans up Windows resources for this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.Finalize">
            <summary>
             Cleans up Windows resources for this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.Clone">
            <summary>
             Creates an exact copy of this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.Save(System.String)">
            <summary>
             Saves this <see cref='T:System.Drawing.Image'/> to the specified file.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
             Saves this <see cref='T:System.Drawing.Image'/> to the specified file in the specified format.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
            <summary>
             Saves this <see cref='T:System.Drawing.Image'/> to the specified file in the specified format and with the specified encoder parameters.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
            <summary>
             Saves this <see cref='T:System.Drawing.Image'/> to the specified stream in the specified format.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
            <summary>
             Saves this <see cref='T:System.Drawing.Image'/> to the specified stream in the specified format.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)">
            <summary>
             Adds an <see cref='!:Imagin.EncoderParameters'/> to this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)">
            <summary>
             Adds an <see cref='T:System.Drawing.Imaging.EncoderParameters'/> to the specified <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Image.PhysicalDimension">
            <summary>
             Gets the width and height of this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Image.Size">
            <summary>
             Gets the width and height of this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Image.Width">
            <summary>
             Gets the width of this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Image.Height">
            <summary>
             Gets the height of this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Image.HorizontalResolution">
            <summary>
             Gets the horizontal resolution, in pixels-per-inch, of this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Image.VerticalResolution">
            <summary>
             Gets the vertical resolution, in pixels-per-inch, of this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Image.Flags">
            <summary>
             Gets attribute flags for this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Image.RawFormat">
            <summary>
             Gets the format of this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Image.PixelFormat">
            <summary>
             Gets the pixel format for this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Image.PropertyIdList">
            <summary>
             Gets an array of the property IDs stored in this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Image.PropertyItems">
            <summary>
             Gets an array of <see cref='T:System.Drawing.Imaging.PropertyItem'/> objects that describe this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)">
            <summary>
             Gets a bounding rectangle in the specified units for this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Image.Palette">
            <summary>
             Gets or sets the color palette used for this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)">
            <summary>
             Returns the thumbnail for this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)">
            <summary>
             Returns the number of frames of the given dimension.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.GetPropertyItem(System.Int32)">
            <summary>
             Gets the specified property item from this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)">
            <summary>
             Selects the frame specified by the given dimension and index.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)">
            <summary>
             Sets the specified property item to the specified value.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.RemovePropertyItem(System.Int32)">
            <summary>
             Removes the specified property item from this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.GetEncoderParameterList(System.Guid)">
            <summary>
             Returns information about the codecs used for this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr)">
            <summary>
             Creates a <see cref='T:System.Drawing.Bitmap'/> from a Windows handle.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)">
            <summary>
             Creates a <see cref='T:System.Drawing.Bitmap'/> from the specified Windows handle with the specified color palette.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)">
            <summary>
             Returns a value indicating whether the pixel format is extended.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)">
            <summary>
             Returns a value indicating whether the pixel format is canonical.
            </summary>
        </member>
        <member name="P:System.Drawing.Image.FrameDimensionsList">
            <summary>
             Gets an array of GUIDs that represent the dimensions of frames within this <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)">
            <summary>
             Returns the size of the specified pixel format.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)">
            <summary>
             Returns a value indicating whether the pixel format contains alpha information.
            </summary>
        </member>
        <member name="M:System.Drawing.Image.GetAnimatedGifRawData(System.Drawing.Image,System.String,System.IO.Stream)">
            <summary>
             If the image is an animated GIF, loads the raw data for the image into the _rawData field so we
             can work around the lack of an animated GIF encoder.
            </summary>
        </member>
        <member name="T:System.Drawing.ImageAnimator">
             <summary>
                 Animates one or more images that have time-based frames.
                 See the ImageInfo.cs file for the helper nested ImageInfo class.
            
                 A common pattern for using this class is as follows (See PictureBox control):
                 1. The winform app (user's code) calls ImageAnimator.Animate() from the main thread.
                 2. Animate() spawns the animating (worker) thread in the background, which will update the image
                    frames and raise the OnFrameChanged event, which handler will be executed in the main thread.
                 3. The main thread triggers a paint event (Invalidate()) from the OnFrameChanged handler.
                 4. From the OnPaint event, the main thread calls ImageAnimator.UpdateFrames() and then paints the
                    image (updated frame).
                 5. The main thread calls ImageAnimator.StopAnimate() when needed. This does not kill the worker thread.
            
                 Comment on locking the image ref:
                 We need to synchronize access to sections of code that modify the image(s), but we don't want to block
                 animation of one image when modifying a different one; for this, we use the image ref for locking the
                 critical section (lock(image)).
            
                 This class is safe for multi-threading but Image is not; multithreaded applications must use a critical
                 section lock using the image ref the image access is not from the same thread that executes ImageAnimator
                 code.  If the user code locks on the image ref forever a deadlock will happen preventing the animation
                 from occurring.
             </summary>
            <summary>
             Animates one or more images that have time-based frames.
            </summary>
        </member>
        <member name="F:System.Drawing.ImageAnimator.s_imageInfoList">
            <summary>
             A list of images to be animated.
            </summary>
        </member>
        <member name="F:System.Drawing.ImageAnimator.s_anyFrameDirty">
            <summary>
             A variable to flag when an image or images need to be updated due to the selection of a new frame
             in an image.  We don't need to synchronize access to this variable, in the case it is true we don't
             do anything, otherwise the worse case is where a thread attempts to update the image's frame after
             another one did which is harmless.
            </summary>
        </member>
        <member name="F:System.Drawing.ImageAnimator.s_animationThread">
            <summary>
             The thread used for animating the images.
            </summary>
        </member>
        <member name="F:System.Drawing.ImageAnimator.s_rwImgListLock">
            <summary>
             Lock that allows either concurrent read-access to the images list for multiple threads, or write-
             access to it for a single thread.  Observe that synchronization access to image objects are done
             with critical sections (lock).
            </summary>
        </member>
        <member name="F:System.Drawing.ImageAnimator.t_threadWriterLockWaitCount">
             <summary>
              Flag to avoid a deadlock when waiting on a write-lock and an attempt to acquire a read-lock is
              made in the same thread. If RWLock is currently owned by another thread, the current thread is going to wait on an
              event using CoWaitForMultipleHandles while pumps message.
            
              The comment above refers to the COM STA message pump, not to be confused with the UI message pump.
              However, the effect is the same, the COM message pump will pump messages and dispatch them to the
              window while waiting on the writer lock; this has the potential of creating a re-entrancy situation
              that if during the message processing a wait on a reader lock is originated the thread will be block
              on itself.
            
              While processing STA message, the thread may call back into managed code. We do this because
              we can not block finalizer thread.  Finalizer thread may need to release STA objects on this thread. If
              the current thread does not pump message, finalizer thread is blocked, and AD  unload is blocked while
              waiting for finalizer thread. RWLock is a fair lock. If a thread waits for a writer lock, then it needs
              a reader lock while pumping message, the thread is blocked forever.
              This TLS variable is used to flag the above situation and avoid the deadlock, it is ThreadStatic so each
              thread calling into ImageAnimator is guarded against this problem.
             </summary>
        </member>
        <member name="M:System.Drawing.ImageAnimator.#ctor">
            <summary>
             Prevent instantiation of this class.
            </summary>
        </member>
        <member name="M:System.Drawing.ImageAnimator.UpdateFrames(System.Drawing.Image)">
            <summary>
             Advances the frame in the specified image. The new frame is drawn the next time the image is rendered.
            </summary>
        </member>
        <member name="M:System.Drawing.ImageAnimator.UpdateFrames">
            <summary>
             Advances the frame in all images currently being animated. The new frame is drawn the next time the image is rendered.
            </summary>
        </member>
        <member name="M:System.Drawing.ImageAnimator.Animate(System.Drawing.Image,System.EventHandler)">
            <summary>
             Adds an image to the image manager.  If the image does not support animation this method does nothing.
             This method creates the image list and spawns the animation thread the first time it is called.
            </summary>
        </member>
        <member name="M:System.Drawing.ImageAnimator.CanAnimate(System.Drawing.Image)">
            <summary>
             Whether or not the image has multiple time-based frames.
            </summary>
        </member>
        <member name="M:System.Drawing.ImageAnimator.StopAnimate(System.Drawing.Image,System.EventHandler)">
            <summary>
             Removes an image from the image manager so it is no longer animated.
            </summary>
        </member>
        <member name="M:System.Drawing.ImageAnimator.AnimateImages">
             <summary>
              Worker thread procedure which implements the main animation loop.
            
              NOTE: This is the ONLY code the worker thread executes, keeping it in one method helps better understand
              any synchronization issues.
            
              WARNING: Also, this is the only place where ImageInfo objects (not the contained image object) are modified,
              so no access synchronization is required to modify them.
             </summary>
        </member>
        <member name="T:System.Drawing.ImageAnimator.ImageInfo">
            <summary>
             ImageAnimator nested helper class used to store extra image state info.
            </summary>
        </member>
        <member name="P:System.Drawing.ImageAnimator.ImageInfo.Animated">
            <summary>
             Whether the image supports animation.
            </summary>
        </member>
        <member name="P:System.Drawing.ImageAnimator.ImageInfo.FrameDirty">
            <summary>
             The current frame has changed but the image has not yet been updated.
            </summary>
        </member>
        <member name="P:System.Drawing.ImageAnimator.ImageInfo.TotalAnimationTime">
            <summary>
             The total animation time of the image in milliseconds, or <value>0</value> if not animated.
            </summary>
        </member>
        <member name="P:System.Drawing.ImageAnimator.ImageInfo.ShouldAnimate">
            <summary>
             Whether animation should progress, respecting the image's animation support
             and if there are animation frames or loops remaining.
            </summary>
        </member>
        <member name="M:System.Drawing.ImageAnimator.ImageInfo.AdvanceAnimationBy(System.Int64)">
            <summary>
             Advance the animation by the specified number of milliseconds. If the advancement progresses beyond the
             end time of the current Frame, <see cref="P:System.Drawing.ImageAnimator.ImageInfo.FrameChangedHandler"/> will be called. Subscribed handlers often
             use that event to call <see cref="M:System.Drawing.ImageAnimator.UpdateFrames(System.Drawing.Image)"/>..
            </summary>
            <remarks>
             <para>
              If the animation progresses beyond the end of the image's total animation time,
              the animation will loop.
             </para>
             <para>
              This animation does not respect a GIF's specified number of animation repeats;
              instead, animations loop indefinitely.
             </para>
            </remarks>
            <param name="milliseconds">The number of milliseconds to advance the animation by</param>
        </member>
        <member name="P:System.Drawing.ImageAnimator.ImageInfo.Image">
            <summary>
             The image this object wraps.
            </summary>
        </member>
        <member name="M:System.Drawing.ImageAnimator.ImageInfo.UpdateFrame">
            <summary>
             Selects the current frame as the active frame in the image.
            </summary>
        </member>
        <member name="M:System.Drawing.ImageAnimator.ImageInfo.OnFrameChanged(System.EventArgs)">
            <summary>
             Raises the FrameChanged event.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.BitmapData">
            <summary>
             Specifies the attributes of a bitmap image.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.BitmapData.Width">
            <summary>
             Specifies the pixel width of the <see cref='T:System.Drawing.Bitmap'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.BitmapData.Height">
            <summary>
             Specifies the pixel height of the <see cref='T:System.Drawing.Bitmap'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.BitmapData.Stride">
            <summary>
             Specifies the stride width of the <see cref='T:System.Drawing.Bitmap'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.BitmapData.PixelFormat">
            <summary>
             Specifies the format of the pixel information in this <see cref='T:System.Drawing.Bitmap'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.BitmapData.Scan0">
            <summary>
             Specifies the address of the pixel data.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.BitmapData.Reserved">
            <summary>
             Reserved. Do not use.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.CachedBitmap">
            <summary>
             A device dependent copy of a <see cref="T:System.Drawing.Bitmap"/> matching a specified <see cref="T:System.Drawing.Graphics"/> object's current
             device (display) settings. Avoids reformatting step when rendering, which can significantly improve performance.
            </summary>
            <remarks>
             <para>
              <see cref="T:System.Drawing.Imaging.CachedBitmap"/> matches the current bit depth of the <see cref="T:System.Drawing.Graphics"/>'s device. If the device bit
              depth changes, the <see cref="T:System.Drawing.Imaging.CachedBitmap"/> will no longer be usable and a new instance will need to be created
              that matches. If the <see cref="T:System.Drawing.Imaging.CachedBitmap"/> was created against <see cref="F:System.Drawing.Imaging.PixelFormat.Format32bppRgb"/> it
              will always work.
             </para>
             <para>
              <see cref="T:System.Drawing.Imaging.CachedBitmap"/> will not work with any transformations other than translation.
             </para>
             <para>
              <see cref="T:System.Drawing.Imaging.CachedBitmap"/> cannot be used to draw to a printer or metafile.
             </para>
            </remarks>
        </member>
        <member name="M:System.Drawing.Imaging.CachedBitmap.#ctor(System.Drawing.Bitmap,System.Drawing.Graphics)">
            <summary>
             Create a device dependent copy of the given <paramref name="bitmap"/> for the device settings of the given
             <paramref name="graphics"/>
            </summary>
            <param name="bitmap">The <see cref="T:System.Drawing.Bitmap"/> to convert.</param>
            <param name="graphics">The <see cref="T:System.Drawing.Graphics"/> object to use to format the cached copy of the <paramref name="bitmap"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="bitmap"/> or <paramref name="graphics"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:System.Drawing.Imaging.ColorAdjustType">
            <summary>
             Specifies which GDI+ objects use color adjustment information.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorAdjustType.Default">
            <summary>
             Defines color adjustment information that is used by all GDI+ objects that do not have their own color
             adjustment information.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorAdjustType.Bitmap">
            <summary>
             Defines color adjustment information for <see cref='T:System.Drawing.Bitmap'/> objects.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorAdjustType.Brush">
            <summary>
             Defines color adjustment information for <see cref='T:System.Drawing.Brush'/> objects.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorAdjustType.Pen">
            <summary>
             Defines color adjustment information for <see cref='T:System.Drawing.Pen'/> objects.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorAdjustType.Text">
            <summary>
             Defines color adjustment information for text.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorAdjustType.Count">
            <summary>
             Specifies the number of types specified.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorAdjustType.Any">
            <summary>
             Specifies the number of types specified.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.ColorChannelFlag">
            <summary>
             Specifies a range of CMYK channels.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC">
            <summary>
             Specifies the Cyan color channel.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelM">
            <summary>
             Specifies the Magenta color channel.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelY">
            <summary>
             Specifies the Yellow color channel.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelK">
            <summary>
             Specifies the Black color channel.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelLast">
            <summary>
             This element specifies to leave the color channel unchanged from the last selected channel.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.ColorMap">
            <summary>
             Defines a map for converting colors.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ColorMap.#ctor">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.ColorMap'/> class.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMap.OldColor">
            <summary>
             Specifies the existing <see cref='T:System.Drawing.Color'/> to be converted.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMap.NewColor">
            <summary>
             Specifies the new <see cref='T:System.Drawing.Color'/> to which to convert.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.ColorMapType">
            <summary>
            Specifies the types of color maps.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorMapType.Default">
            <summary>
            A default color map.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorMapType.Brush">
            <summary>
            Specifies a color map for a <see cref='T:System.Drawing.Brush'/>.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.ColorMatrix">
            <summary>
             Defines a 5 x 5 matrix that contains the homogeneous coordinates for the RGBA space.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.ColorMatrix'/> class.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix00">
            <summary>
             Represents the element at the 0th row and 0th column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix01">
            <summary>
             Represents the element at the 0th row and 1st column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix02">
            <summary>
             Represents the element at the 0th row and 2nd column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix03">
            <summary>
             Represents the element at the 0th row and 3rd column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix04">
            <summary>
             Represents the element at the 0th row and 4th column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix10">
            <summary>
             Represents the element at the 1st row and 0th column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix11">
            <summary>
              Represents the element at the 1st row and 1st column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix12">
            <summary>
             Represents the element at the 1st row and 2nd column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix13">
            <summary>
             Represents the element at the 1st row and 3rd column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix14">
            <summary>
             Represents the element at the 1st row and 4th column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix20">
            <summary>
             Represents the element at the 2nd row and 0th column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix21">
            <summary>
             Represents the element at the 2nd row and 1st column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix22">
            <summary>
             Represents the element at the 2nd row and 2nd column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix23">
            <summary>
             Represents the element at the 2nd row and 3rd column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix24">
            <summary>
             Represents the element at the 2nd row and 4th column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix30">
            <summary>
             Represents the element at the 3rd row and 0th column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix31">
            <summary>
             Represents the element at the 3rd row and 1st column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix32">
            <summary>
             Represents the element at the 3rd row and 2nd column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix33">
            <summary>
             Represents the element at the 3rd row and 3rd column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix34">
            <summary>
             Represents the element at the 3rd row and 4th column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix40">
            <summary>
             Represents the element at the 4th row and 0th column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix41">
            <summary>
             Represents the element at the 4th row and 1st column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix42">
            <summary>
             Represents the element at the 4th row and 2nd column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix43">
            <summary>
             Represents the element at the 4th row and 3rd column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix44">
            <summary>
             Represents the element at the 4th row and 4th column of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor(System.Single[][])">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.ColorMatrix'/> class with the elements in the specified matrix.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor(System.ReadOnlySpan{System.Single})">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.ColorMatrix'/> class with the elements in the specified matrix.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="newColorMatrix"/> did not have 25 values.</exception>
        </member>
        <member name="P:System.Drawing.Imaging.ColorMatrix.Item(System.Int32,System.Int32)">
            <summary>
             Gets or sets the value of the specified element of this <see cref='T:System.Drawing.Imaging.ColorMatrix'/>.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.ColorMatrixFlag">
            <summary>
             Specifies available options for color-adjusting. GDI+ can adjust color data only, grayscale data only, or both.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorMatrixFlag.Default">
            <summary>
             Both colors and grayscale are color-adjusted.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorMatrixFlag.SkipGrays">
            <summary>
             Grayscale values are not color-adjusted.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorMatrixFlag.AltGrays">
            <summary>
             Only grayscale values are color-adjusted.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.ColorMode">
            <summary>
             Specifies two modes for color component values.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorMode.Argb32Mode">
            <summary>
             Specifies that integer values supplied are 32-bit values.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ColorMode.Argb64Mode">
            <summary>
             Specifies that integer values supplied are 64-bit values.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.ColorPalette">
            <summary>
             Defines an array of colors that make up a color palette.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorPalette.Flags">
            <summary>
             Specifies how to interpret the color information in the array of colors.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ColorPalette.Entries">
            <summary>
             Specifies an array of <see cref='T:System.Drawing.Color'/> objects.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ColorPalette.#ctor(System.Drawing.Color[])">
            <summary>
             Create a custom color palette.
            </summary>
            <param name="customColors">Color entries for the palette.</param>
        </member>
        <member name="M:System.Drawing.Imaging.ColorPalette.#ctor(System.Drawing.Imaging.PaletteType)">
            <summary>
             Create a standard color palette.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ColorPalette.CreateOptimalPalette(System.Int32,System.Boolean,System.Drawing.Bitmap)">
            <summary>
             Create an optimal color palette based on the colors in a given bitmap.
            </summary>
            <inheritdoc cref="M:System.Drawing.Imaging.ColorPalette.InitializePalette(System.Drawing.Imaging.PaletteType,System.Int32,System.Boolean,IPointer{Windows.Win32.Graphics.GdiPlus.GpBitmap})"/>
        </member>
        <member name="M:System.Drawing.Imaging.ColorPalette.ConvertFromBuffer(System.ReadOnlySpan{System.UInt32})">
            <summary>
             Converts a native <see cref="T:Windows.Win32.Graphics.GdiPlus.ColorPalette"/> buffer.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ColorPalette.InitializePalette(System.Drawing.Imaging.PaletteType,System.Int32,System.Boolean,IPointer{Windows.Win32.Graphics.GdiPlus.GpBitmap})">
            <summary>
             Initializes a standard, optimal, or custom color palette.
            </summary>
            <param name="fixedPaletteType">The palette type.</param>
            <param name="colorCount">
             The number of colors you want to have in an optimal palette based on a the specified bitmap.
            </param>
            <param name="useTransparentColor"><see langword="true"/> to include the transparent color in the palette.</param>
        </member>
        <member name="T:System.Drawing.Imaging.DitherType">
            <summary>
             Algorithm for dithering images with a reduced color palette.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.DitherType.None">
            <summary>
             No dithering is performed. Pixels in the source bitmap are mapped to the nearest color in the palette specified
             by the palette parameter of the <see cref="M:System.Drawing.Bitmap.ConvertFormat(System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.DitherType,System.Drawing.Imaging.PaletteType,System.Drawing.Imaging.ColorPalette,System.Single)"/>
             method. This algorithm can be used with any palette other than <see cref="F:System.Drawing.Imaging.PaletteType.Custom"/>.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.DitherType.Solid">
            <summary>
             No dithering is performed. Pixels in the source bitmap are mapped to the nearest color in the palette specified
             by the palette parameter of the <see cref="M:System.Drawing.Bitmap.ConvertFormat(System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.DitherType,System.Drawing.Imaging.PaletteType,System.Drawing.Imaging.ColorPalette,System.Single)"/>
             method. This algorithm can be used with any palette.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.DitherType.Ordered4x4">
            <summary>
             You can use this algorithm to perform dithering based on the colors in one of the standard fixed palettes. You
             can also use this algorithm to convert a bitmap to a 16-bits-per-pixel format that has no palette.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.DitherType.Ordered8x8">
            <summary>
             Dithering is performed using the colors in one of the standard fixed palettes.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.DitherType.Ordered16x16">
            <summary>
             Dithering is performed using the colors in one of the standard fixed palettes.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.DitherType.Spiral4x4">
            <summary>
             Dithering is performed using the colors in one of the standard fixed palettes.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.DitherType.Spiral8x8">
            <summary>
             Dithering is performed using the colors in one of the standard fixed palettes.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.DitherType.DualSpiral4x4">
            <summary>
             Dithering is performed using the colors in one of the standard fixed palettes.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.DitherType.DualSpiral8x8">
            <summary>
            Dithering is performed using the colors in one of the standard fixed palettes.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.DitherType.ErrorDiffusion">
            <summary>
             Dithering is performed based on the palette specified by the palette parameter of the
             <see cref="M:System.Drawing.Bitmap.ConvertFormat(System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.DitherType,System.Drawing.Imaging.PaletteType,System.Drawing.Imaging.ColorPalette,System.Single)"/>  method.
             This algorithm can be used with any palette.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.BlackSaturationCurveEffect">
            <summary>
             Sets the black saturation of an image. The black saturation is the point at which the darkest areas of the image
             are converted to black.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.BlackSaturationCurveEffect.#ctor(System.Drawing.Imaging.Effects.CurveChannel,System.Int32)">
            <summary>
             Creates a new <see cref="T:System.Drawing.Imaging.Effects.BlackSaturationCurveEffect"/> with the given parameters.
            </summary>
            <param name="channel">The channel or channels that the effect is applied to.</param>
            <param name="blackSaturation">
             A value of t specifies that the interval [t, 255] is mapped linearly to the interval [0, 255]. For example, if
             <paramref name="blackSaturation"/> is equal to 15, then color channel values in the interval [15, 255] are adjusted
             so that they spread out over the interval [0, 255]. Color channel values less than 15 are set to 0.
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="blackSaturation"/> is less than 0 or greater than 254.</exception>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.BlackSaturationCurveEffect.BlackSaturation">
            <summary>
             A value of t specifies that the interval [t, 255] is mapped linearly to the interval [0, 255]. For example, if
             <see cref="P:System.Drawing.Imaging.Effects.BlackSaturationCurveEffect.BlackSaturation"/> is equal to 15, then color channel values in the interval [15, 255] are adjusted
             so that they spread out over the interval [0, 255]. Color channel values less than 15 are set to 0.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.BlurEffect">
            <summary>
             Applies a Gaussian blur.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.BlurEffect.#ctor(System.Single,System.Boolean)">
            <summary>
             Creates a new <see cref="T:System.Drawing.Imaging.Effects.BlurEffect"/> with the given parameters.
            </summary>
            <param name="radius">
             Real number that specifies the blur radius (the radius of the Gaussian convolution kernel) in pixels. The
             radius must be in the range 0 through 256. As the radius increases, the resulting bitmap becomes more blurry.
            </param>
            <param name="expandEdge">
             Boolean value that specifies whether the bitmap expands by an amount equal to the blur radius. If
             <see langword="true"/>, the bitmap expands by an amount equal to the radius so that it can have soft edges. If
             <see langword="false"/>, the bitmap remains the same size and the soft edges are clipped.
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="radius"/> is less than 0 or greater than 256.</exception>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.BlurEffect.Radius">
            <summary>
             Real number that specifies the blur radius (the radius of the Gaussian convolution kernel) in pixels. The
             radius must be in the range 0 through 255. As the radius increases, the resulting bitmap becomes more blurry.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.BlurEffect.ExpandEdge">
            <summary>
             Boolean value that specifies whether the bitmap expands by an amount equal to the blur radius. If
             <see langword="true"/>, the bitmap expands by an amount equal to the radius so that it can have soft edges. If
             <see langword="false"/>, the bitmap remains the same size and the soft edges are clipped.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.BrightnessContrastEffect">
            <summary>
             Changes the brightness and contrast of an image.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.BrightnessContrastEffect.#ctor(System.Int32,System.Int32)">
            <summary>
             Creates a new <see cref="T:System.Drawing.Imaging.Effects.BrightnessContrastEffect"/> with the given parameters.
            </summary>
            <param name="brightnessLevel">
             Integer in the range -255 through 255 that specifies the brightness level. If the value is 0, the brightness
             remains the same. As the value moves from 0 to 255, the brightness of the image increases. As the value moves
             from 0 to -255, the brightness of the image decreases.
            </param>
            <param name="contrastLevel">
             Integer in the range -100 through 100 that specifies the contrast level. If the value is 0, the contrast
             remains the same. As the value moves from 0 to 100, the contrast of the image increases. As the value moves
             from 0 to -100, the contrast of the image decreases.
            </param>
            <exception cref="T:System.ArgumentException">
             <paramref name="brightnessLevel"/> is less than -255 or greater than 255 or <paramref name="contrastLevel"/>
             is less than -100 or greater than 100.
            </exception>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.BrightnessContrastEffect.BrightnessLevel">
            <summary>
             Integer in the range -255 through 255 that specifies the brightness level. If the value is 0, the brightness
             remains the same. As the value moves from 0 to 255, the brightness of the image increases. As the value moves
             from 0 to -255, the brightness of the image decreases.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.BrightnessContrastEffect.ContrastLevel">
            <summary>
             Integer in the range -100 through 100 that specifies the contrast level. If the value is 0, the contrast
             remains the same. As the value moves from 0 to 100, the contrast of the image increases. As the value moves
             from 0 to -100, the contrast of the image decreases.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.ColorBalanceEffect">
            <summary>
             Adjusts the color balance of an image.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.ColorBalanceEffect.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
             Creates a new <see cref="T:System.Drawing.Imaging.Effects.ColorBalanceEffect"/> with the given parameters.
            </summary>
            <param name="cyanRed">
             Integer in the range -100 through 100 that specifies a change in the amount of red in the image. If the value
             is 0, there is no change. As the value moves from 0 to 100, the amount of red in the image increases and the
             amount of cyan decreases. As the value moves from 0 to -100, the amount of red in the image decreases and the
             amount of cyan increases.
            </param>
            <param name="magentaGreen">
             Integer in the range -100 through 100 that specifies a change in the amount of green in the image. If the value
             is 0, there is no change. As the value moves from 0 to 100, the amount of green in the image increases and the
             amount of magenta decreases. As the value moves from 0 to -100, the amount of green in the image decreases and
             and the amount of magenta increases.
            </param>
            <param name="yellowBlue">
             Integer in the range -100 through 100 that specifies a change in the amount of blue in the image. If the value
             is 0, there is no change. As the value moves from 0 to 100, the amount of blue in the image increases and the
             amount of yellow decreases. As the value moves from 0 to -100, the amount of blue in the image decreases and
             the amount of yellow increases.
            </param>
            <exception cref="T:System.ArgumentException">
             <paramref name="cyanRed"/>, <paramref name="magentaGreen"/>, or <paramref name="yellowBlue"/> is less than
             -100 or greater than 100.
            </exception>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.ColorBalanceEffect.CyanRed">
            <summary>
             Integer in the range -100 through 100 that specifies a change in the amount of red in the image. If the value
             is 0, there is no change. As the value moves from 0 to 100, the amount of red in the image increases and the
             amount of cyan decreases. As the value moves from 0 to -100, the amount of red in the image decreases and the
             amount of cyan increases.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.ColorBalanceEffect.MagentaGreen">
            <summary>
             Integer in the range -100 through 100 that specifies a change in the amount of green in the image. If the value
             is 0, there is no change. As the value moves from 0 to 100, the amount of green in the image increases and the
             amount of magenta decreases. As the value moves from 0 to -100, the amount of green in the image decreases and
             and the amount of magenta increases.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.ColorBalanceEffect.YellowBlue">
            <summary>
             Integer in the range -100 through 100 that specifies a change in the amount of blue in the image. If the value
             is 0, there is no change. As the value moves from 0 to 100, the amount of blue in the image increases and the
             amount of yellow decreases. As the value moves from 0 to -100, the amount of blue in the image decreases and
             the amount of yellow increases.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.ColorCurveEffect">
            <summary>
             Base class for several effects that can be applied to an image.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.ColorCurveEffect.Channel">
            <summary>
             The channel or channels that the effect is applied to.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.ColorCurveEffect.AdjustValue">
            <summary>
             The adjustment value.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.ColorLookupTableEffect">
            <summary>
             Allows modification of the color components of an image. Individual color component values are changed to entries
             in a series of lookup tables.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.ColorLookupTableEffect.#ctor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])">
            <summary>
             Creates a new <see cref="T:System.Drawing.Imaging.Effects.ColorLookupTableEffect"/> with the given parameters.
            </summary>
            <param name="redLookupTable">The lookup table for the red channel.</param>
            <param name="greenLookupTable">The lookup table for the green channel.</param>
            <param name="blueLookupTable">The lookup table for the blue channel.</param>
            <param name="alphaLookupTable">The lookup table for the alpha channel.</param>
            <exception cref="T:System.ArgumentException">A lookup table parameter is longer than 256 bytes.</exception>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.ColorLookupTableEffect.#ctor(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
            <inheritdoc cref="M:System.Drawing.Imaging.Effects.ColorLookupTableEffect.#ctor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])"/>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.ColorLookupTableEffect.BlueLookupTable">
            <summary>
             The lookup table for the blue channel.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.ColorLookupTableEffect.GreenLookupTable">
            <summary>
             The lookup table for the green channel.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.ColorLookupTableEffect.RedLookupTable">
            <summary>
             The lookup table for the red channel.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.ColorLookupTableEffect.AlphaLookupTable">
            <summary>
             The lookup table for the alpha channel.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.ColorMatrixEffect">
            <summary>
             Color matrix adjustment effect.
            </summary>
            <remarks>
             <para>
              See <see href="https://learn.microsoft.com/windows/win32/gdiplus/-gdiplus-recoloring-use">Recoloring</see> for
              examples of using a color matrix to adjust the colors of an image.
             </para>
            </remarks>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.ColorMatrixEffect.#ctor(System.Drawing.Imaging.ColorMatrix)">
            <summary>
             Creates a new <see cref="T:System.Drawing.Imaging.Effects.ColorMatrixEffect"/> with the given <paramref name="matrix"/>.
            </summary>
            <param name="matrix">Color transform matrix.</param>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.ColorMatrixEffect.Matrix">
            <summary>
             The color transform matrix.
            </summary>
            <remarks>
             <para>
              <see cref="T:System.Drawing.Imaging.ColorMatrix"/> is mutable, but effects do not support changing the matrix after creation.
             </para>
            </remarks>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.ContrastCurveEffect">
            <summary>
             Increases or decreases the contrast of an image.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.ContrastCurveEffect.#ctor(System.Drawing.Imaging.Effects.CurveChannel,System.Int32)">
            <summary>
             Creates a new <see cref="T:System.Drawing.Imaging.Effects.ContrastCurveEffect"/> with the given <paramref name="contrast"/> adjustment value.
            </summary>
            <param name="channel">The channel or channels that the effect is applied to.</param>
            <param name="contrast">
             A value in the range of -100 through 100.  A value of 0 specifies no change in contrast. Positive values
             specify increased contrast and negative values specify decreased contrast.
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="contrast"/> is less than -100 or greater than 100.</exception>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.ContrastCurveEffect.Contrast">
            <summary>
             A value in the range of -100 through 100.  A value of 0 specifies no change in contrast. Positive values
             specify increased contrast and negative values specify decreased contrast.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.CurveChannel">
            <summary>
             The <see cref="T:System.Drawing.Imaging.Effects.CurveChannel"/> enumeration specifies which color channels are affected by a <see cref="T:System.Drawing.Imaging.Effects.ColorCurveEffect"/>.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.Effects.CurveChannel.All">
            <summary>
             Specifies that the color adjustment applies to all channels.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.Effects.CurveChannel.Red">
            <summary>
             Specifies that the color adjustment applies only to the red channel.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.Effects.CurveChannel.Green">
            <summary>
             Specifies that the color adjustment applies only to the green channel.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.Effects.CurveChannel.Blue">
            <summary>
             Specifies that the color adjustment applies only to the blue channel.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.DensityCurveEffect">
            <summary>
             Simulates increasing or decreasing the film density of a photograph.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.DensityCurveEffect.#ctor(System.Drawing.Imaging.Effects.CurveChannel,System.Int32)">
            <summary>
             Creates a new <see cref="T:System.Drawing.Imaging.Effects.DensityCurveEffect"/> with the given <paramref name="density"/>.
            </summary>
            <param name="channel">The channel or channels that the effect is applied to.</param>
            <param name="density">
             A value in the range of -256 through 256. A value of 0 specifies no change in density. Positive values specify
             increased density (lighter picture) and negative values specify decreased density (darker picture).
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="density"/> is less than -256 or greater than 256.</exception>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.DensityCurveEffect.Density">
            <summary>
             A value in the range of -256 through 256. A value of 0 specifies no change in density. Positive values specify
             increased density (lighter picture) and negative values specify decreased density (darker picture).
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.Effect">
            <summary>
             Base class for all effects.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.ExposureCurveEffect">
            <summary>
             Simulates increasing or decreasing the exposure of a photograph
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.ExposureCurveEffect.#ctor(System.Drawing.Imaging.Effects.CurveChannel,System.Int32)">
            <summary>
             Creates a new <see cref="T:System.Drawing.Imaging.Effects.ExposureCurveEffect"/> with the given <paramref name="exposure"/> adjustment.
            </summary>
            <param name="channel">The channel or channels that the effect is applied to.</param>
            <param name="exposure">
             A value in the range of -256 through 256. A value of 0 specifies no change in exposure. Positive values
             specify increased exposure and negative values specify decreased exposure.
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="exposure"/> is less than -256 or greater than 256.</exception>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.ExposureCurveEffect.Exposure">
            <summary>
             A value in the range of -256 through 256. A value of 0 specifies no change in exposure. Positive values
             specify increased exposure and negative values specify decreased exposure.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.GrayScaleEffect">
            <summary>
             Effect that converts an image to grayscale.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.HighlightCurveEffect">
            <summary>
             Increases or decreases the value of a color channel if that channel already has a value that is above half
             intensity. You can use this effect to get more definition in the light areas of an image without affecting
             the dark areas.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.HighlightCurveEffect.#ctor(System.Drawing.Imaging.Effects.CurveChannel,System.Int32)">
            <summary>
             Creates a new <see cref="T:System.Drawing.Imaging.Effects.HighlightCurveEffect"/> with the given <paramref name="highlight"/> adjustment.
            </summary>
            <param name="channel">The channel or channels that the effect is applied to.</param>
            <param name="highlight">
             A value in the range of -100 through 100. A value of 0 specifies no change. Positive values specify that the
             light areas are made lighter, and negative values specify that the light areas are made darker.
            </param>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.HighlightCurveEffect.Highlight">
            <summary>
             A value in the range of -100 through 100. A value of 0 specifies no change. Positive values specify that the
             light areas are made lighter, and negative values specify that the light areas are made darker.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.InvertEffect">
            <summary>
             Effect that inverts the colors in an image.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.LevelsEffect">
            <summary>
             Adjusts the light, mid-tone, or dark areas of an image.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.LevelsEffect.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
             Creates a new <see cref="T:System.Drawing.Imaging.Effects.LevelsEffect"/> with the given parameters.
            </summary>
            <param name="highlight">
             Integer in the range 0 through 100 that specifies which pixels should be lightened. You can use this adjustment
             to lighten pixels that are already lighter than a certain threshold. Setting highlight to 100 specifies no change.
             Setting highlight to t specifies that a color channel value is increased if it is already greater than t percent
             of full intensity. For example, setting highlight to 90 specifies that all color channel values greater than 90
             percent of full intensity are increased.
            </param>
            <param name="midtone">
             Integer in the range -100 through 100 that specifies how much to lighten or darken an image. Color channel values
             in the middle of the intensity range are altered more than color channel values near the minimum or maximum
             intensity. You can use this adjustment to lighten (or darken) an image without loosing the contrast between the
             darkest and lightest portions of the image. A value of 0 specifies no change. Positive values specify that the
             mid-tones are made lighter, and negative values specify that the mid-tones are made darker.
            </param>
            <param name="shadow">
             Integer in the range 0 through 100 that specifies which pixels should be darkened. You can use this adjustment
             to darken pixels that are already darker than a certain threshold. Setting shadow to 0 specifies no change.
             Setting shadow to t specifies that a color channel value is decreased if it is already less than t percent of
             full intensity. For example, setting shadow to 10 specifies that all color channel values less than 10 percent
             of full intensity are decreased.
            </param>
            <exception cref="T:System.ArgumentException">
             <paramref name="highlight"/> or <paramref name="shadow"/> is less than 0 or greater than 100 or
             <paramref name="midtone"/> is less than -100 or greater than 100.
            </exception>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.LevelsEffect.Highlight">
            <summary>
             The highlight threshold.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.LevelsEffect.Midtone">
            <summary>
             The midtone adjustment.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.LevelsEffect.Shadow">
            <summary>
             The shadow threshold.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.MidtoneCurveEffect">
            <summary>
             Lightens or darkens an image. Color channel values in the middle of the intensity range are altered more than
             color channel values near the minimum or maximum intensity. You can use this effect to lighten (or darken)
             an image without loosing the contrast between the darkest and lightest portions of the image.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.MidtoneCurveEffect.#ctor(System.Drawing.Imaging.Effects.CurveChannel,System.Int32)">
            <summary>
             Creates a new <see cref="T:System.Drawing.Imaging.Effects.MidtoneCurveEffect"/> with the given <paramref name="midtone"/> adjustment.
            </summary>
            <param name="channel">The channel or channels that the effect is applied to.</param>
            <param name="midtone">
             A value in the range of -100 through 100. A value of 0 specifies no change. Positive values specify that the
             mid-tones are made lighter, and negative values specify that the mid-tones are made darker.
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="midtone"/> is less than -100 or greater than 100.</exception>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.MidtoneCurveEffect.Midtone">
            <summary>
             A value in the range of -100 through 100. A value of 0 specifies no change. Positive values specify that the
             mid-tones are made lighter, and negative values specify that the mid-tones are made darker.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.SepiaEffect">
            <summary>
             Effect that converts an image to sepia.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.ShadowCurveEffect">
            <summary>
             Increases or decreases the value of a color channel if that channel already has a value that is below half
             intensity. You can use this effect to get more definition in the dark areas of an image without affecting
             the light areas.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.ShadowCurveEffect.#ctor(System.Drawing.Imaging.Effects.CurveChannel,System.Int32)">
            <summary>
             Creates a new <see cref="T:System.Drawing.Imaging.Effects.ShadowCurveEffect"/> with the given <paramref name="shadow"/>.
            </summary>
            <param name="channel">The channel or channels that the effect is applied to.</param>
            <param name="shadow">
             A value in the range of -100 through 100. A value of 0 specifies no change. Positive values specify that the
             dark areas are made lighter, and negative values specify that the dark areas are made darker.
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="shadow"/> is less than -100 or greater than 100.</exception>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.ShadowCurveEffect.Shadow">
            <summary>
             A value in the range of -100 through 100. A value of 0 specifies no change. Positive values specify that the
             dark areas are made lighter, and negative values specify that the dark areas are made darker.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.SharpenEffect">
            <summary>
             Sharpens an image.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.SharpenEffect.#ctor(System.Single,System.Single)">
            <summary>
             Creates a new <see cref="T:System.Drawing.Imaging.Effects.SharpenEffect"/> with the given parameters.
            </summary>
            <param name="radius">
             Real number that specifies the sharpening radius (the radius of the convolution kernel) in pixels. The radius
             must be in the range 0 through 256. As the radius increases, more surrounding pixels are involved in calculating
             the new value of a given pixel.
            </param>
            <param name="amount">
             Real number in the range 0 through 100 that specifies the amount of sharpening to be applied. A value of 0
             specifies no sharpening. As the value of amount increases, the sharpness increases.
            </param>
            <exception cref="T:System.ArgumentException">
             <paramref name="radius"/> is less than 0 or greater than 256 or <paramref name="amount"/> is less than 0
             or greater than 100.
            </exception>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.SharpenEffect.Radius">
            <summary>
             Real number that specifies the sharpening radius (the radius of the convolution kernel) in pixels. The radius
             must be in the range 0 through 256. As the radius increases, more surrounding pixels are involved in calculating
             the new value of a given pixel.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.SharpenEffect.Amount">
            <summary>
             Real number in the range 0 through 100 that specifies the amount of sharpening to be applied. A value of 0
             specifies no sharpening. As the value of amount increases, the sharpness increases.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.TintEffect">
            <summary>
             Allows you to apply a tint to an image.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.TintEffect.#ctor(System.Drawing.Color,System.Int32)">
            <summary>
             Creates a new <see cref="T:System.Drawing.Imaging.Effects.TintEffect"/> with the given parameters.
            </summary>
            <param name="color">
             The color to be applied to the image.
            </param>
            <param name="amount">
             Integer in the range -100 through 100 that specifies how much the hue (given by the hue parameter) is
             strengthened or weakened. A value of 0 specifies no change. Positive values specify that the hue is
             strengthened and negative values specify that the hue is weakened
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="amount"/> is less than -100 or greater than 100.</exception>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.TintEffect.#ctor(System.Int32,System.Int32)">
            <inheritdoc cref="M:System.Drawing.Imaging.Effects.TintEffect.#ctor(System.Drawing.Color,System.Int32)"/>
            <param name="hue">
             Integer in the range of 0 to 360 that specifies the hue to be strengthened or weakened.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="hue"/> is less than 0 or greater than 360.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="amount"/> is less than -100 or greater than 100.</exception>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.TintEffect.Hue">
            <summary>
             Integer in the range of 0 to 360 that specifies the hue to be strengthened or weakened.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.TintEffect.Amount">
            <summary>
             Integer in the range -100 through 100 that specifies how much the hue (given by the hue parameter) is
             strengthened or weakened. A value of 0 specifies no change. Positive values specify that the hue is
             strengthened and negative values specify that the hue is weakened
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.VividEffect">
            <summary>
             Effect that makes colors more vivid.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Effects.WhiteSaturationCurveEffect">
            <summary>
             Sets the white saturation of an image. The white saturation is the point at which the lightest areas of the image
             are converted to white.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Effects.WhiteSaturationCurveEffect.#ctor(System.Drawing.Imaging.Effects.CurveChannel,System.Int32)">
            <summary>
             Creates a new <see cref="T:System.Drawing.Imaging.Effects.WhiteSaturationCurveEffect"/> with the given parameters.
            </summary>
            <param name="channel">The channel or channels that the effect is applied to.</param>
            <param name="whiteSaturation">
             A value of t specifies that the interval [0, t] is mapped linearly to the interval [0, 255]. For example, if
             <paramref name="whiteSaturation"/> is equal to 240, then color channel values in the interval [0, 240] are adjusted
             so that they spread out over the interval [0, 255]. Color channel values greater than 240 are set to 255.
            </param>
            <exception cref="T:System.ArgumentException"><paramref name="whiteSaturation"/> was less than 1 or greater than 255.</exception>
        </member>
        <member name="P:System.Drawing.Imaging.Effects.WhiteSaturationCurveEffect.WhiteSaturation">
            <summary>
             A value of t specifies that the interval [0, t] is mapped linearly to the interval [0, 255]. For example, if
             <see cref="P:System.Drawing.Imaging.Effects.WhiteSaturationCurveEffect.WhiteSaturation"/> is equal to 240, then color channel values in the interval [0, 240] are adjusted
             so that they spread out over the interval [0, 255]. Color channel values greater than 240 are set to 255.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.EmfPlusFlags">
            <summary>
             EMF+ Flags
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.EmfPlusRecordType">
            <summary>
             Specifies the methods available in a metafile to read and write graphic commands.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.EmfType">
            <summary>
             Specifies the metafile type.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EmfType.EmfOnly">
            <summary>
             Windows enhanced metafile. Contains GDI commands. Metafiles of this type are referred to as an EMF file.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EmfType.EmfPlusOnly">
            <summary>
             Windows enhanced metafile plus. Contains GDI+ commands. Metafiles of this type are referred to as an EMF+ file.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EmfType.EmfPlusDual">
            <summary>
             Dual Windows enhanced metafile. Contains equivalent GDI and GDI+ commands. Metafiles of this type are referred to as an EMF+ file.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.Encoder.ColorSpace">
            <summary>
             An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the color space category.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.Encoder.ImageItems">
            <summary>
             An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the image items category.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.Encoder.SaveAsCmyk">
            <summary>
             An <see cref="T:System.Drawing.Imaging.Encoder" /> object that is initialized with the globally unique identifier for the save as CMYK category.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.EncoderParameter.Encoder">
            <summary>
             Gets/Sets the Encoder for the EncoderParameter.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.EncoderParameter.Type">
            <summary>
             Gets the EncoderParameterValueType object from the EncoderParameter.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.EncoderParameter.ValueType">
            <summary>
             Gets the EncoderParameterValueType object from the EncoderParameter.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues">
            <summary>
             Gets the NumberOfValues from the EncoderParameter.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.EncoderParameterValueType">
            <summary>
            Specifies a EncoderParameter data type.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte">
            <summary>
            The data is an 8-bit unsigned value.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii">
            <summary>
            The data is an 8-bit ASCII value.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort">
            <summary>
            The data is a 16-bit unsigned value.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong">
            <summary>
            The data is a 32-bit unsigned value.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational">
            <summary>
            The data is two long integers, specifying the numerator and the denominator of a rational number, respectively.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange">
            <summary>
            Two longs which specify a range of integer values.
            The first Long specifies the lower end and the second one specifies the higher end.
            All values are inclusive at both ends.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined">
            <summary>
            An 8-bit undefined value that can take any value depending on field definition.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange">
            <summary>
            Two Rationals. The first Rational specifies the lower end and the second specifies the higher end.
            All values are inclusive at both ends
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypePointer">
            <summary>
            The parameter is a pointer to a block of custom metadata.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.EncoderValue">
            <summary>
            The EncoderValue enum.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeCMYK">
            <summary>
            Specifies the CMYK color space.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeYCCK">
            <summary>
            Specifies the YCCK color space.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.CompressionLZW">
            <summary>
            Specifies the LZW compression method.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT3">
            <summary>
            For a TIFF image, specifies the CCITT3 compression method.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT4">
            <summary>
            For a TIFF image, specifies the CCITT4 compression method.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.CompressionRle">
            <summary>
            For a TIFF image, specifies the RLE compression method.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.CompressionNone">
            <summary>
            For a TIFF image, specifies no compression.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodInterlaced">
            <summary>
            Specifies interlaced mode.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodNonInterlaced">
            <summary>
            Specifies non-interlaced mode.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif87">
            <summary>
            For a GIF image, specifies version 87.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif89">
            <summary>
            For a GIF images, specifies version 89a.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.RenderProgressive">
            <summary>
            Specifies progressive mode.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.RenderNonProgressive">
            <summary>
            Specifies non-progressive mode.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate90">
            <summary>
            For a JPEG image, specifies lossless 90-degree clockwise rotation.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate180">
            <summary>
            For a JPEG image, specifies lossless 180-degree rotation.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate270">
            <summary>
            For a JPEG image, specifies lossless 270-degree clockwise rotation.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipHorizontal">
            <summary>
            For a JPEG image, specifies a lossless horizontal flip.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipVertical">
            <summary>
            For a JPEG image, specifies a lossless vertical flip.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.MultiFrame">
            <summary>
            Specifies multiframe encoding.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.LastFrame">
            <summary>
            Specifies the last frame of a multi-frame image.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.Flush">
            <summary>
            Specifies that the encoder object is to be closed.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionTime">
            <summary>
            For a GIF image, specifies the time frame dimension.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionResolution">
            <summary>
            Specifies the resolution frame dimension.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionPage">
            <summary>
            For a TIFF image, specifies the page frame dimension
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.FrameDimension.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref='T:System.Drawing.Imaging.FrameDimension'/> class with the specified GUID.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.FrameDimension.Guid">
            <summary>
            Specifies a global unique identifier (GUID) that represents this <see cref='T:System.Drawing.Imaging.FrameDimension'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.FrameDimension.Time">
            <summary>
            The time dimension.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.FrameDimension.Resolution">
            <summary>
            The resolution dimension.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.FrameDimension.Page">
            <summary>
            The page dimension.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.FrameDimension.Equals(System.Object)">
            <summary>
            Returns a value indicating whether the specified object is an <see cref='T:System.Drawing.Imaging.FrameDimension'/> equivalent to
            this <see cref='T:System.Drawing.Imaging.FrameDimension'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.FrameDimension.ToString">
            <summary>
             Converts this <see cref='T:System.Drawing.Imaging.FrameDimension'/> to a human-readable string.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.ImageAttributes">
            <summary>
             Contains information about how image colors are manipulated during rendering.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ImageAttributes.#ctor">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.ImageAttributes'/> class.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ImageAttributes.Dispose">
            <summary>
             Cleans up Windows resources for this <see cref='T:System.Drawing.Imaging.ImageAttributes'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ImageAttributes.Finalize">
            <summary>
             Cleans up Windows resources for this <see cref='T:System.Drawing.Imaging.ImageAttributes'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ImageAttributes.Clone">
            <summary>
             Creates an exact copy of this <see cref='T:System.Drawing.Imaging.ImageAttributes'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)">
            <summary>
             Sets the 5 X 5 color adjust matrix to the specified <see cref='T:System.Drawing.Drawing2D.Matrix'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
            <summary>
             Sets the 5 X 5 color adjust matrix to the specified 'Matrix' with the specified 'ColorMatrixFlags'.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
            <summary>
             Sets the 5 X 5 color adjust matrix to the specified 'Matrix' with the  specified 'ColorMatrixFlags'.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix">
            <summary>
             Clears the color adjust matrix to all zeroes.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)">
            <summary>
             Clears the color adjust matrix.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)">
            <summary>
             Sets a color adjust matrix for image colors and a separate gray scale adjust matrix for gray scale values.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])">
            <inheritdoc cref="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)"/>
        </member>
        <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)">
            <summary>
             Sets the default color-remap table.
            </summary>
            <inheritdoc cref="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorAdjustType,System.ReadOnlySpan{System.Drawing.Imaging.ColorMap})"/>
        </member>
        <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.ReadOnlySpan{System.Drawing.Imaging.ColorMap})">
            <inheritdoc cref="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)"/>
        </member>
        <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.ReadOnlySpan{System.ValueTuple{System.Drawing.Color,System.Drawing.Color}})">
            <inheritdoc cref="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)"/>
        </member>
        <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorAdjustType,System.ReadOnlySpan{System.Drawing.Imaging.ColorMap})">
            <summary>
             Sets the color-remap table for a specified category.
            </summary>
            <param name="type">
             An element of <see cref="T:System.Drawing.Imaging.ColorAdjustType"/> that specifies the category for which the color-remap table is set.
            </param>
            <param name="map">
             A series of color pairs mapping an existing color to a new color.
            </param>
        </member>
        <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorAdjustType,System.ReadOnlySpan{System.ValueTuple{System.Drawing.Color,System.Drawing.Color}})">
            <inheritdoc cref="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorAdjustType,System.ReadOnlySpan{System.Drawing.Imaging.ColorMap})"/>
        </member>
        <member name="T:System.Drawing.Imaging.ImageFlags">
            <summary>
            Specifies the attributes of the pixel data contained in an <see cref='T:System.Drawing.Image'/> object.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ImageFlags.None">
            <summary>
            There is no format information.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ImageFlags.Scalable">
            <summary>
            Pixel data is scalable.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ImageFlags.HasAlpha">
            <summary>
            Pixel data contains alpha information.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ImageFlags.PartiallyScalable">
            <summary>
            Pixel data is partially scalable, but there are some limitations.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceRgb">
            <summary>
            Pixel data uses an RGB color space.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceCmyk">
            <summary>
            Pixel data uses a CMYK color space.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceGray">
            <summary>
            Pixel data is grayscale.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.ImageFormat">
            <summary>
             Specifies the format of the image.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ImageFormat.#ctor(System.Guid)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.ImageFormat'/> class with the specified GUID.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ImageFormat.Guid">
            <summary>
             Specifies a global unique identifier (GUID) that represents this <see cref='T:System.Drawing.Imaging.ImageFormat'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ImageFormat.MemoryBmp">
            <summary>
             Specifies a memory bitmap image format.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ImageFormat.Bmp">
            <summary>
             Specifies the bitmap image format.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ImageFormat.Emf">
            <summary>
             Specifies the enhanced Windows metafile image format.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ImageFormat.Wmf">
            <summary>
             Specifies the Windows metafile image format.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ImageFormat.Gif">
            <summary>
             Specifies the GIF image format.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ImageFormat.Jpeg">
            <summary>
             Specifies the JPEG image format.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ImageFormat.Png">
            <summary>
             Specifies the W3C PNG image format.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ImageFormat.Tiff">
            <summary>
             Specifies the Tag Image File Format (TIFF) image format.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ImageFormat.Exif">
            <summary>
             Specifies the Exchangeable Image Format (EXIF).
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ImageFormat.Icon">
            <summary>
             Specifies the Windows icon image format.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ImageFormat.Heif">
            <summary>
             Specifies the High Efficiency Image Format (HEIF).
            </summary>
            <remarks>
             <para>This format is supported since Windows 10 1809.</para>
            </remarks>
        </member>
        <member name="P:System.Drawing.Imaging.ImageFormat.Webp">
            <summary>
             Specifies the WebP image format.
            </summary>
            <remarks>
             <para>This format is supported since Windows 10 1809.</para>
            </remarks>
        </member>
        <member name="M:System.Drawing.Imaging.ImageFormat.Equals(System.Object)">
            <summary>
             Returns a value indicating whether the specified object is an <see cref='T:System.Drawing.Imaging.ImageFormat'/> equivalent to this
             <see cref='T:System.Drawing.Imaging.ImageFormat'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ImageFormat.GetHashCode">
            <summary>
             Returns a hash code.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.ImageFormat.Encoder">
            <summary>
             The encoder that supports this format, if any.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.ImageFormat.ToString">
            <summary>
             Converts this <see cref='T:System.Drawing.Imaging.ImageFormat'/> to a human-readable string.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.ImageLockMode">
            <summary>
             Indicates the access mode for an <see cref='T:System.Drawing.Image'/>.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ImageLockMode.ReadOnly">
            <summary>
             Specifies the image is read-only.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ImageLockMode.WriteOnly">
            <summary>
             Specifies the image is write-only.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ImageLockMode.ReadWrite">
            <summary>
             Specifies the image is read-write.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.ImageLockMode.UserInputBuffer">
            <summary>
             Indicates the image resides in a user input buffer, to which the user controls access.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.Metafile">
            <summary>
             Defines a graphic metafile. A metafile contains records that describe a sequence of graphics operations that
             can be recorded and played back.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader,System.Boolean)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified handle and
             <see cref='T:System.Drawing.Imaging.WmfPlaceableFileHeader'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Boolean)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified handle and
             <see cref='T:System.Drawing.Imaging.WmfPlaceableFileHeader'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified device context, bounded
             by the specified rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified handle to a device context.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified device context, bounded
             by the specified rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified device context, bounded
             by the specified rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified device context, bounded
             by the specified rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified device context, bounded
             by the specified rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified device context, bounded
             by the specified rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified device context, bounded
             by the specified rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified data stream.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified data stream.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified data stream.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified data stream.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified handle and
             <see cref='T:System.Drawing.Imaging.WmfPlaceableFileHeader'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified stream.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified handle to a device context.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified device context, bounded
             by the specified rectangle.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
            <summary>
            Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class from the specified data stream.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Imaging.Metafile'/> class with the specified filename.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr)">
            <summary>
             Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile"/> class from a native metafile handle.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.PlayRecord(System.Drawing.Imaging.EmfPlusRecordType,System.Int32,System.Int32,System.Byte[])">
            <summary>
             Plays an EMF+ file.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
            <summary>
             Returns the <see cref='T:System.Drawing.Imaging.MetafileHeader'/> associated with the specified <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr)">
            <summary>
             Returns the <see cref='T:System.Drawing.Imaging.MetafileHeader'/> associated with the specified <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.String)">
            <summary>
             Returns the <see cref='T:System.Drawing.Imaging.MetafileHeader'/> associated with the specified <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IO.Stream)">
            <summary>
             Returns the <see cref='T:System.Drawing.Imaging.MetafileHeader'/> associated with the specified <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader">
            <summary>
             Returns the <see cref='T:System.Drawing.Imaging.MetafileHeader'/> associated with this <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.Metafile.GetHenhmetafile">
            <summary>
             Returns a Windows handle to an enhanced <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.MetafileFrameUnit">
            <summary>
            Specifies the unit of measurement for the rectangle used to size and position a metafile.
            This is specified during the creation of the <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Pixel">
            <summary>
            Specifies a pixel as the unit of measure.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Point">
            <summary>
            Specifies a printer's point as the unit of measure.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Inch">
            <summary>
            Specifies an inch as the unit of measure.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Document">
            <summary>
            Specifies 1/300 of an inch as the unit of measure.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Millimeter">
            <summary>
            Specifies a millimeter as the unit of measure.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.MetafileFrameUnit.GdiCompatible">
            <summary>
            Specifies .01 millimeter as the unit of measure. Provided for compatibility with GDI.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.MetafileHeader">
            <summary>
             Contains attributes of an associated <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.MetafileHeader.Type">
            <summary>
             Gets the type of the associated <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.MetafileHeader.MetafileSize">
            <summary>
             Gets the size, in bytes, of the associated <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.MetafileHeader.Version">
            <summary>
             Gets the version number of the associated <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.MetafileHeader.DpiX">
            <summary>
             Gets the horizontal resolution, in dots-per-inch, of the associated <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.MetafileHeader.DpiY">
            <summary>
             Gets the vertical resolution, in dots-per-inch, of the associated <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.MetafileHeader.Bounds">
            <summary>
             Gets a <see cref='T:System.Drawing.Rectangle'/> that bounds the associated <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmf">
            <summary>
             Returns a value indicating whether the associated <see cref='T:System.Drawing.Imaging.Metafile'/> is in the Windows metafile format.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmfPlaceable">
            <summary>
             Returns a value indicating whether the associated <see cref='T:System.Drawing.Imaging.Metafile'/> is in the Windows Placeable metafile format.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmf">
            <summary>
             Returns a value indicating whether the associated <see cref='T:System.Drawing.Imaging.Metafile'/> is in the Windows enhanced metafile format.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfOrEmfPlus">
            <summary>
             Returns a value indicating whether the associated <see cref='T:System.Drawing.Imaging.Metafile'/> is in the Windows enhanced
             metafile format or the Windows enhanced metafile plus.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlus">
            <summary>
             Returns a value indicating whether the associated <see cref='T:System.Drawing.Imaging.Metafile'/> is in the Windows enhanced
             metafile plus format.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusDual">
            <summary>
             Returns a value indicating whether the associated <see cref='T:System.Drawing.Imaging.Metafile'/> is in the Dual enhanced metafile
             format. This format supports both the enhanced and the enhanced plus format.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusOnly">
            <summary>
             Returns a value indicating whether the associated <see cref='T:System.Drawing.Imaging.Metafile'/> supports only the Windows
             enhanced metafile plus format.
            </summary>
        </member>
        <member name="M:System.Drawing.Imaging.MetafileHeader.IsDisplay">
            <summary>
             Returns a value indicating whether the associated <see cref='T:System.Drawing.Imaging.Metafile'/> is device-dependent.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.MetafileHeader.WmfHeader">
            <summary>
             Gets the WMF header file for the associated <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.MetafileHeader.EmfPlusHeaderSize">
            <summary>
             Gets the size, in bytes, of the enhanced metafile plus header file.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiX">
            <summary>
             Gets the logical horizontal resolution, in dots-per-inch, of the associated <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiY">
            <summary>
             Gets the logical vertical resolution, in dots-per-inch, of the associated <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.MetafileType">
            <summary>
             Specifies the format of a <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.MetafileType.Invalid">
            <summary>
             Specifies an invalid type.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.MetafileType.Wmf">
            <summary>
             Specifies a standard Windows metafile.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.MetafileType.WmfPlaceable">
            <summary>
             Specifies a Windows Placeable metafile.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.MetafileType.Emf">
            <summary>
             Specifies a Windows enhanced metafile.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusOnly">
            <summary>
             Specifies a Windows enhanced metafile plus.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusDual">
            <summary>
             Specifies both enhanced and enhanced plus commands in the same file.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.MetaHeader.Type">
            <summary>
             Represents the type of the associated <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.MetaHeader.HeaderSize">
            <summary>
             Represents the size, in bytes, of the header file.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.MetaHeader.Version">
            <summary>
             Represents the version number of the header format.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.MetaHeader.Size">
            <summary>
             Represents the size, in bytes, of the associated <see cref='T:System.Drawing.Imaging.Metafile'/>.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.PaletteFlags">
            <summary>
             Specifies the type of color data in the system palette. The data can be color data with alpha, grayscale only,
             or halftone data.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.PaletteFlags.HasAlpha">
            <summary>
             Specifies alpha data.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.PaletteFlags.GrayScale">
            <summary>
             Specifies grayscale data.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.PaletteFlags.Halftone">
            <summary>
             Specifies halftone data.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.PaletteType">
            <summary>
             Color palette types.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.PaletteType.Custom">
            <summary>
             An arbitrary custom palette specified by the caller.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.PaletteType.FixedBlackAndWhite">
            <summary>
             A palette that has two colors. This palette type is suitable for bitmaps that store 1 bit per pixel.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.PaletteType.FixedHalftone8">
            <summary>
             A palette based on two intensities each (off or full) for the red, green, and blue channels. Also contains the
             16 colors of the system palette. Because all eight of the on/off combinations of red, green, and blue are
             already in the system palette, this palette is the same as the system palette. This palette type is suitable
             for bitmaps that store 4 bits per pixel.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.PaletteType.FixedHalftone27">
            <summary>
             A palette based on three intensities each for the red, green, and blue channels. Also contains the 16 colors of
             the system palette. Eight of the 16 system palette colors are among the 27 three-intensity combinations of red,
             green, and blue, so the total number of colors in the palette is 35. If the palette also includes the transparent
             color, the total number of colors is 36.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.PaletteType.FixedHalftone64">
            <summary>
             A palette based on four intensities each for the red, green, and blue channels. Also contains the 16 colors of
             the system palette. Eight of the 16 system palette colors are among the 64 four-intensity combinations of red,
             green, and blue, so the total number of colors in the palette is 72. If the palette also includes the transparent
             color, the total number of colors is 73.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.PaletteType.FixedHalftone125">
            <summary>
             A palette based on five intensities each for the red, green, and blue channels. Also contains the 16 colors of
             the system palette. Eight of the 16 system palette colors are among the 125 five-intensity combinations of red,
             green, and blue, so the total number of colors in the palette is 133. If the palette also includes the transparent
             color, the total number of colors is 134.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.PaletteType.FixedHalftone216">
            <summary>
             A palette based on six intensities each for the red, green, and blue channels. Also contains the 16 colors of
             the system palette. Eight of the 16 system palette colors are among the 216 six-intensity combinations of red,
             green, and blue, so the total number of colors in the palette is 224. If the palette also includes the transparent
             color, the total number of colors is 225. This palette is sometimes called the Windows halftone palette or
             the Web palette.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.PaletteType.FixedHalftone252">
            <summary>
             A palette based on 6 intensities of red, 7 intensities of green, and 6 intensities of blue. The system palette
             is not included. The total number of colors is 252. If the palette also includes the transparent color, the
             total number of colors is 253.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.PaletteType.FixedHalftone256">
            <summary>
             A palette based on 8 intensities of red, 8 intensities of green, and 4 intensities of blue. The system palette
             is not included. The total number of colors is 256. If the transparent color is included in this palette, it
             must replace one of the RGB combinations.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.PixelFormat">
            <summary>
             Specifies the format of the color data for each pixel in the image.
            </summary>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Indexed">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Indexed"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Gdi">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Gdi"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Alpha">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Alpha"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.PAlpha">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.PAlpha"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Extended">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Extended"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Canonical">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Canonical"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Undefined">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Undefined"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.DontCare">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.DontCare"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Format1bppIndexed">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Format1bppIndexed"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Format4bppIndexed">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Format4bppIndexed"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Format8bppIndexed">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Format8bppIndexed"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppGrayScale">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Format16bppGrayScale"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb555">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Format16bppRgb555"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb565">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Format16bppRgb565"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppArgb1555">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Format16bppArgb1555"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Format24bppRgb">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Format24bppRgb"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppRgb">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Format32bppRgb"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Format32bppArgb"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppPArgb">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Format32bppPArgb"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Format48bppRgb"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppArgb">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Format64bppArgb"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppPArgb">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Format64bppPArgb"/>
        </member>
        <member name="F:System.Drawing.Imaging.PixelFormat.Max">
            <inheritdoc cref="F:Windows.Win32.Graphics.GdiPlus.PixelFormat.Max"/>
        </member>
        <member name="T:System.Drawing.Imaging.PropertyItem">
            <summary>
             Encapsulates a metadata property to be included in an image file.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.PropertyItem.Id">
            <summary>
             Represents the ID of the property.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.PropertyItem.Len">
            <summary>
             Represents the length of the property.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.PropertyItem.Type">
            <summary>
             Represents the type of the property.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.PropertyItem.Value">
            <summary>
             Contains the property value.
            </summary>
        </member>
        <member name="T:System.Drawing.Imaging.WmfPlaceableFileHeader">
            <summary>
             Defines an Placeable Metafile.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Key">
            <summary>
             Indicates the presence of a placeable metafile header.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Hmf">
            <summary>
             Stores the handle of the metafile in memory.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxLeft">
            <summary>
             The x-coordinate of the upper-left corner of the bounding rectangle of the metafile image on the output device.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxTop">
            <summary>
             The y-coordinate of the upper-left corner of the bounding rectangle of the metafile image on the output device.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxRight">
            <summary>
             The x-coordinate of the lower-right corner of the bounding rectangle of the metafile image on the output device.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxBottom">
            <summary>
             The y-coordinate of the lower-right corner of the bounding rectangle of the metafile image on the output device.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Inch">
            <summary>
             Indicates the number of twips per inch.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Reserved">
            <summary>
             Reserved. Do not use.
            </summary>
        </member>
        <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Checksum">
            <summary>
             Indicates the checksum value for the previous ten WORDs in the header.
            </summary>
        </member>
        <member name="T:System.Drawing.NumericsExtensions">
            <summary>
            Helpers to allow using System.Numerics types like the System.Drawing equivalents.
            </summary>
        </member>
        <member name="T:System.Drawing.Pen">
            <summary>
             Defines an object used to draw lines and curves.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.#ctor(Windows.Win32.Graphics.GdiPlus.GpPen*)">
            <summary>
             Creates a Pen from a native GDI+ object.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
            <summary>
             Initializes a new instance of the Pen class with the specified <see cref='P:System.Drawing.Pen.Color'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Pen'/> class with the specified
             <see cref='P:System.Drawing.Pen.Color'/> and <see cref='P:System.Drawing.Pen.Width'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
            <summary>
             Initializes a new instance of the Pen class with the specified <see cref='P:System.Drawing.Pen.Brush'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Pen'/> class with the specified <see cref='T:System.Drawing.Brush'/> and width.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.Clone">
            <summary>
             Creates an exact copy of this <see cref='T:System.Drawing.Pen'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.Dispose">
            <summary>
             Cleans up Windows resources for this <see cref='T:System.Drawing.Pen'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.Finalize">
            <summary>
             Cleans up Windows resources for this <see cref='T:System.Drawing.Pen'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Pen.Width">
            <summary>
             Gets or sets the width of this <see cref='T:System.Drawing.Pen'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
            <summary>
             Sets the values that determine the style of cap used to end lines drawn by this <see cref='T:System.Drawing.Pen'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Pen.StartCap">
            <summary>
             Gets or sets the cap style used at the beginning of lines drawn with this <see cref='T:System.Drawing.Pen'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Pen.EndCap">
            <summary>
             Gets or sets the cap style used at the end of lines drawn with this <see cref='T:System.Drawing.Pen'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Pen.CustomStartCap">
            <summary>
             Gets or sets a custom cap style to use at the beginning of lines drawn with this <see cref='T:System.Drawing.Pen'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Pen.CustomEndCap">
            <summary>
             Gets or sets a custom cap style to use at the end of lines drawn with this <see cref='T:System.Drawing.Pen'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Pen.DashCap">
            <summary>
             Gets or sets the cap style used at the beginning or end of dashed lines drawn with this <see cref='T:System.Drawing.Pen'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Pen.LineJoin">
            <summary>
             Gets or sets the join style for the ends of two overlapping lines drawn with this <see cref='T:System.Drawing.Pen'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Pen.MiterLimit">
            <summary>
             Gets or sets the limit of the thickness of the join on a mitered corner.
            </summary>
        </member>
        <member name="P:System.Drawing.Pen.Alignment">
            <summary>
             Gets or sets the alignment for objects drawn with this <see cref='T:System.Drawing.Pen'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Pen.Transform">
            <summary>
             Gets or sets the geometrical transform for objects drawn with this <see cref='T:System.Drawing.Pen'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.ResetTransform">
            <summary>
             Resets the geometric transform for this <see cref='T:System.Drawing.Pen'/> to identity.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
            <summary>
             Multiplies the transform matrix for this <see cref='T:System.Drawing.Pen'/> by the specified <see cref='T:System.Drawing.Drawing2D.Matrix'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
             Multiplies the transform matrix for this <see cref='T:System.Drawing.Pen'/> by the specified <see cref='T:System.Drawing.Drawing2D.Matrix'/> in the specified order.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
            <summary>
             Translates the local geometrical transform by the specified dimensions. This method prepends the translation
             to the transform.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
             Translates the local geometrical transform by the specified dimensions in the specified order.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
            <summary>
             Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
             Scales the local geometric transform by the specified amounts in the specified order.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.RotateTransform(System.Single)">
            <summary>
             Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
             Rotates the local geometric transform by the specified amount in the specified order.
            </summary>
        </member>
        <member name="P:System.Drawing.Pen.PenType">
            <summary>
             Gets the style of lines drawn with this <see cref='T:System.Drawing.Pen'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Pen.Color">
            <summary>
             Gets or sets the color of this <see cref='T:System.Drawing.Pen'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Pen.Brush">
            <summary>
             Gets or sets the <see cref='T:System.Drawing.Brush'/> that determines attributes of this <see cref='T:System.Drawing.Pen'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.Pen.DashStyle">
            <summary>
             Gets or sets the style used for dashed lines drawn with this <see cref='T:System.Drawing.Pen'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Pen.EnsureValidDashPattern">
            <summary>
             This method is called after the user sets the pen's dash style to custom. Here, we make sure that there
             is a default value set for the custom pattern.
            </summary>
        </member>
        <member name="P:System.Drawing.Pen.DashOffset">
            <summary>
             Gets or sets the distance from the start of a line to the beginning of a dash pattern.
            </summary>
        </member>
        <member name="P:System.Drawing.Pen.DashPattern">
            <summary>
             Gets or sets an array of custom dashes and spaces. The dashes are made up of line segments.
            </summary>
        </member>
        <member name="P:System.Drawing.Pen.CompoundArray">
            <summary>
             Gets or sets an array of custom dashes and spaces. The dashes are made up of line segments.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.StandardPrintController">
            <summary>
             Specifies a print controller that sends information to a printer.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
            <summary>
             Implements StartPrint for printing to a physical printer.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
             Implements StartPage for printing to a physical printer.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
             Implements EndPage for printing to a physical printer.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
            <summary>
             Implements EndPrint for printing to a physical printer.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.Duplex">
            <summary>
             Specifies the printer's duplex setting.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.Duplex.Default">
            <summary>
             The printer's default duplex setting.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.Duplex.Simplex">
            <summary>
             Single-sided printing.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.Duplex.Horizontal">
            <summary>
             Double-sided, horizontal printing.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.Duplex.Vertical">
            <summary>
             Double-sided, vertical printing.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.InvalidPrinterException">
            <summary>
             Represents the exception that is thrown when trying to access a printer using invalid printer settings.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Drawing.Printing.PrinterSettings)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.InvalidPrinterException'/> class.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.Margins">
            <summary>
             Specifies the margins of a printed page.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.Margins.#ctor">
            <summary>
             Initializes a new instance of a the <see cref='T:System.Drawing.Printing.Margins'/> class with one-inch margins.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.Margins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
             Initializes a new instance of a the <see cref='T:System.Drawing.Printing.Margins'/> class with the specified left, right, top, and bottom margins.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.Margins.Left">
            <summary>
             Gets or sets the left margin, in hundredths of an inch.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.Margins.Right">
            <summary>
             Gets or sets the right margin, in hundredths of an inch.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.Margins.Top">
            <summary>
             Gets or sets the top margin, in hundredths of an inch.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.Margins.Bottom">
            <summary>
             Gets or sets the bottom margin, in hundredths of an inch.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.Margins.DoubleLeft">
            <summary>
             Gets or sets the left margin with a double value, in hundredths of an inch.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.Margins.DoubleRight">
            <summary>
             Gets or sets the right margin with a double value, in hundredths of an inch.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.Margins.DoubleTop">
            <summary>
             Gets or sets the top margin with a double value, in hundredths of an inch.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.Margins.DoubleBottom">
            <summary>
             Gets or sets the bottom margin with double value, in hundredths of an inch.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.Margins.GetHashCode">
            <summary>
             Calculates and retrieves a hash code based on the left, right, top, and bottom margins.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.Margins.op_Equality(System.Drawing.Printing.Margins,System.Drawing.Printing.Margins)">
            <summary>
             Tests whether two <see cref='T:System.Drawing.Printing.Margins'/> objects are identical.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.Margins.op_Inequality(System.Drawing.Printing.Margins,System.Drawing.Printing.Margins)">
            <summary>
             Tests whether two <see cref='T:System.Drawing.Printing.Margins'/> objects are different.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.Margins.ToString">
            <summary>
             Provides some interesting information for the Margins in String form.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.MarginsConverter">
            <summary>
             Provides a type converter to convert <see cref='T:System.Drawing.Printing.Margins'/> to and from various other representations, such as a string.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PageSettings">
            <summary>
             Specifies settings that apply to a single page.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PageSettings.#ctor">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.PageSettings'/> class using the default printer.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PageSettings.#ctor(System.Drawing.Printing.PrinterSettings)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.PageSettings'/> class using the specified printer.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PageSettings.Bounds">
            <summary>
             Gets the bounds of the page, taking into account the Landscape property.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PageSettings.Color">
            <summary>
             Gets or sets a value indicating whether the page is printed in color.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PageSettings.HardMarginX">
            <summary>
             Returns the x dimension of the hard margin
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PageSettings.HardMarginY">
            <summary>
             Returns the y dimension of the hard margin.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PageSettings.Landscape">
            <summary>
             Gets or sets a value indicating whether the page should be printed in landscape or portrait orientation.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PageSettings.Margins">
            <summary>
             Gets or sets a value indicating the margins for this page.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PageSettings.PaperSize">
            <summary>
             Gets or sets the paper size.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PageSettings.PaperSource">
            <summary>
             Gets or sets a value indicating the paper source (i.e. upper bin).
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PageSettings.PrintableArea">
            <summary>
             Gets the PrintableArea for the printer. Units = 100ths of an inch.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PageSettings.PrinterResolution">
            <summary>
             Gets or sets the printer resolution for the page.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PageSettings.PrinterSettings">
            <summary>
             Gets or sets the associated printer settings.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PageSettings.Clone">
            <summary>
             Copies the settings and margins.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)">
            <summary>
             Copies the relevant information out of the PageSettings and into the handle.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PageSettings.SetHdevmode(System.IntPtr)">
            <summary>
             Copies the relevant information out of the handle and into the PageSettings.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PaperKind">
            <summary>
             Specifies the standard paper sizes.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Custom">
            <summary>
             The paper size is defined by the user.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Letter">
            <summary>
             Letter paper (8.5 in. by 11 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Legal">
            <summary>
             Legal paper (8.5 in. by 14 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A4">
            <summary>
             A4 paper (210 mm by 297 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.CSheet">
            <summary>
             C paper (17 in. by 22 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.DSheet">
            <summary>
             D paper (22 in. by 34 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.ESheet">
            <summary>
             E paper (34 in. by 44 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.LetterSmall">
            <summary>
             Letter small paper (8.5 in. by 11 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Tabloid">
            <summary>
             Tabloid paper (11 in. by 17 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Ledger">
            <summary>
             Ledger paper (17 in. by 11 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Statement">
            <summary>
             Statement paper (5.5 in. by 8.5 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Executive">
            <summary>
             Executive paper (7.25 in. by 10.5 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A3">
            <summary>
             A3 paper (297 mm by 420 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A4Small">
            <summary>
             A4 small paper (210 mm by 297 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A5">
            <summary>
             A5 paper (148 mm by 210 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.B4">
            <summary>
             B4 paper (250 mm by 353 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.B5">
            <summary>
             B5 paper (176 mm by 250 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Folio">
            <summary>
             Folio paper (8.5 in. by 13 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Quarto">
            <summary>
             Quarto paper (215 mm by 275 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Standard10x14">
            <summary>
             10-by-14-inch paper.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Standard11x17">
            <summary>
             11-by-17-inch paper.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Note">
            <summary>
             Note paper (8.5 in. by 11 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Number9Envelope">
            <summary>
             #9 envelope (3.875 in. by 8.875 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Number10Envelope">
            <summary>
             #10 envelope (4.125 in. by 9.5 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Number11Envelope">
            <summary>
             #11 envelope (4.5 in. by 10.375 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Number12Envelope">
            <summary>
             #12 envelope (4.75 in. by 11 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Number14Envelope">
            <summary>
             #14 envelope (5 in. by 11.5 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.DLEnvelope">
            <summary>
             DL envelope (110 mm by 220 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.C5Envelope">
            <summary>
             C5 envelope (162 mm by 229 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.C3Envelope">
            <summary>
             C3 envelope (324 mm by 458 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.C4Envelope">
            <summary>
             C4 envelope (229 mm by 324 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.C6Envelope">
            <summary>
             C6 envelope (114 mm by 162 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.C65Envelope">
            <summary>
             C65 envelope (114 mm by 229 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.B4Envelope">
            <summary>
             B4 envelope (250 mm by 353 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.B5Envelope">
            <summary>
             B5 envelope (176 mm by 250 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.B6Envelope">
            <summary>
             B6 envelope (176 mm by 125 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.ItalyEnvelope">
            <summary>
             Italy envelope (110 mm by 230 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.MonarchEnvelope">
            <summary>
             Monarch envelope (3.875 in. by 7.5 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PersonalEnvelope">
            <summary>
             6 3/4 envelope (3.625 in. by 6.5 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.USStandardFanfold">
            <summary>
             US standard fanfold (14.875 in. by 11 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.GermanStandardFanfold">
            <summary>
             German standard fanfold (8.5 in. by 12 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.GermanLegalFanfold">
            <summary>
             German legal fanfold (8.5 in. by 13 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.IsoB4">
            <summary>
             ISO B4 (250 mm by 353 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcard">
            <summary>
             Japanese postcard (100 mm by 148 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Standard9x11">
            <summary>
             9-by-11-inch paper.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Standard10x11">
            <summary>
             10-by-11-inch paper.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Standard15x11">
            <summary>
             15-by-11-inch paper.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.InviteEnvelope">
            <summary>
             Invite envelope (220 mm by 220 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.LetterExtra">
            <summary>
             Letter extra paper (9.275 in. by 12 in.).
             This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.LegalExtra">
            <summary>
             Legal extra paper (9.275 in. by 15 in.).
             This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.TabloidExtra">
            <summary>
             Tabloid extra paper (11.69 in. by 18 in.).
             This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A4Extra">
            <summary>
             A4 extra paper (236 mm by 322 mm).
             This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.LetterTransverse">
            <summary>
             Letter transverse paper (8.275 in. by 11 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A4Transverse">
            <summary>
             A4 transverse paper (210 mm by 297 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.LetterExtraTransverse">
            <summary>
             Letter extra transverse paper (9.275 in. by 12 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.APlus">
            <summary>
             SuperA/SuperA/A4 paper (227 mm by 356 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.BPlus">
            <summary>
             SuperB/SuperB/A3 paper (305 mm by 487 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.LetterPlus">
            <summary>
             Letter plus paper (8.5 in. by 12.69 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A4Plus">
            <summary>
             A4 plus paper (210 mm by 330 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A5Transverse">
            <summary>
             A5 transverse paper (148 mm by 210 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.B5Transverse">
            <summary>
             JIS B5 transverse paper (182 mm by 257 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A3Extra">
            <summary>
             A3 extra paper (322 mm by 445 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A5Extra">
            <summary>
             A5 extra paper (174 mm by 235 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.B5Extra">
            <summary>
             ISO B5 extra paper (201 mm by 276 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A2">
            <summary>
             A2 paper (420 mm by 594 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A3Transverse">
            <summary>
             A3 transverse paper (297 mm by 420 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A3ExtraTransverse">
            <summary>
             A3 extra transverse paper (322 mm by 445 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcard">
            <summary>
             Japanese double postcard (200 mm by 148mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A6">
            <summary>
             A6 paper (105 mm by 148 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2">
            <summary>
             Japanese Kaku #2 envelope.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3">
            <summary>
             Japanese Kaku #3 envelope.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3">
            <summary>
             Japanese Chou #3 envelope.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4">
            <summary>
             Japanese Chou #4 envelope.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.LetterRotated">
            <summary>
             Letter rotated paper (11 in. by 8.5 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A3Rotated">
            <summary>
             A3 rotated paper (420mm by 297 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A4Rotated">
            <summary>
             A4 rotated paper (297 mm by 210 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A5Rotated">
            <summary>
             A5 rotated paper (210 mm by 148 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.B4JisRotated">
            <summary>
             JIS B4 rotated paper (364 mm by 257 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.B5JisRotated">
            <summary>
             JIS B5 rotated paper (257 mm by 182 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcardRotated">
            <summary>
             Japanese rotated postcard (148 mm by 100 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcardRotated">
            <summary>
             Japanese rotated double postcard (148 mm by 200 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.A6Rotated">
            <summary>
             A6 rotated paper (148 mm by 105 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2Rotated">
            <summary>
             Japanese rotated Kaku #2 envelope.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3Rotated">
            <summary>
             Japanese rotated Kaku #3 envelope.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3Rotated">
            <summary>
             Japanese rotated Chou #3 envelope.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4Rotated">
            <summary>
             Japanese rotated Chou #4 envelope.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.B6Jis">
            <summary>
             JIS B6 paper (128 mm by 182 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.B6JisRotated">
            <summary>
             JIS B6 rotated paper (182 mm by 128 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Standard12x11">
            <summary>
             12-by-11-inch paper.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4">
            <summary>
             Japanese You #4 envelope.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4Rotated">
            <summary>
             Japanese You #4 rotated envelope.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Prc16K">
            <summary>
             PRC 16K paper (146 mm by 215 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Prc32K">
            <summary>
             PRC 32K paper (97 mm by 151 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Prc32KBig">
            <summary>
             PRC 32K big paper (97 mm by 151 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1">
            <summary>
             PRC #1 envelope (102 mm by 165 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2">
            <summary>
             PRC #2 envelope (102 mm by 176 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3">
            <summary>
             PRC #3 envelope (125 mm by 176 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4">
            <summary>
             PRC #4 envelope (110 mm by 208 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5">
            <summary>
             PRC #5 envelope (110 mm by 220 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6">
            <summary>
             PRC #6 envelope (120 mm by 230 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7">
            <summary>
             PRC #7 envelope (160 mm by 230 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8">
            <summary>
             PRC #8 envelope (120 mm by 309 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9">
            <summary>
             PRC #9 envelope (229 mm by 324 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10">
            <summary>
             PRC #10 envelope (324 mm by 458 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Prc16KRotated">
            <summary>
             PRC 16K rotated paper (146 mm by 215 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Prc32KRotated">
            <summary>
             PRC 32K rotated paper (97 mm by 151 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.Prc32KBigRotated">
            <summary>
             PRC 32K big rotated paper (97 mm by 151 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1Rotated">
            <summary>
             PRC #1 rotated envelope (165 mm by 102 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2Rotated">
            <summary>
             PRC #2 rotated envelope (176 mm by 102 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3Rotated">
            <summary>
             PRC #3 rotated envelope (176 mm by 125 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4Rotated">
            <summary>
             PRC #4 rotated envelope (208 mm by 110 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5Rotated">
            <summary>
             PRC #5 rotated envelope (220 mm by 110 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6Rotated">
            <summary>
             PRC #6 rotated envelope (230 mm by 120 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7Rotated">
            <summary>
             PRC #7 rotated envelope (230 mm by 160 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8Rotated">
            <summary>
             PRC #8 rotated envelope (309 mm by 120 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9Rotated">
            <summary>
             PRC #9 rotated envelope (324 mm by 229 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10Rotated">
            <summary>
             PRC #10 rotated envelope (458 mm by 324 mm).
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PaperSize">
            <summary>
             Specifies the size of a piece of paper.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PaperSize.#ctor">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.PaperSize'/> class with default properties.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PaperSize.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.PaperSize'/> class.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PaperSize.Height">
            <summary>
             Gets or sets the height of the paper, in hundredths of an inch.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PaperSize.Kind">
            <summary>
             Gets the type of paper.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PaperSize.PaperName">
            <summary>
             Gets or sets the name of the type of paper.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PaperSize.RawKind">
            <summary>
             Same as Kind, but values larger than or equal to DMPAPER_LAST do not map to PaperKind.Custom.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PaperSize.Width">
            <summary>
             Gets or sets the width of the paper, in hundredths of an inch.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PaperSource">
            <summary>
             Specifies the paper tray from which the printer gets paper.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PaperSource.#ctor">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.PaperSource'/> class with default properties.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PaperSource.Kind">
            <summary>
             Gets a value indicating the type of paper source.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PaperSource.RawKind">
            <summary>
             Same as Kind, but values larger than DMBIN_USER do not map to PaperSourceKind.Custom.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PaperSource.SourceName">
            <summary>
             Gets the name of the paper source.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PaperSourceKind">
            <summary>
             Standard paper sources.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperSourceKind.Upper">
            <summary>
             The upper bin of a printer (or, if the printer only has one bin, the only bin).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperSourceKind.Lower">
            <summary>
             The lower bin of a printer.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperSourceKind.Middle">
            <summary>
             The middle bin of a printer.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperSourceKind.Manual">
            <summary>
             Manually-fed paper.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperSourceKind.Envelope">
            <summary>
             An envelope.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperSourceKind.ManualFeed">
            <summary>
             A manually-fed envelope.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperSourceKind.AutomaticFeed">
            <summary>
             Automatic-fed paper.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperSourceKind.TractorFeed">
            <summary>
             A tractor feed.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperSourceKind.SmallFormat">
            <summary>
             Small-format paper.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperSourceKind.LargeFormat">
            <summary>
             Large-format paper.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperSourceKind.LargeCapacity">
            <summary>
             A large-capacity bin printer.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperSourceKind.Cassette">
            <summary>
             A paper cassette.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PaperSourceKind.Custom">
            <summary>
             A printer-specific paper source.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PreviewPageInfo">
            <summary>
             Specifies print preview information for a single page. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PreviewPageInfo.#ctor(System.Drawing.Image,System.Drawing.Size)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.PreviewPageInfo'/> class.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PreviewPageInfo.Image">
            <summary>
             Gets the image of the printed page.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PreviewPageInfo.PhysicalSize">
            <summary>
             Gets the size of the printed page, in hundredths of an inch.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PreviewPrintController">
            <summary>
             A PrintController which "prints" to a series of images.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
            <summary>
             Implements StartPrint for generating print preview information.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
             Implements StartEnd for generating print preview information.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PrintAction">
            <summary>
             Specifies the type of action for the <see cref='T:System.Drawing.Printing.PrintEventArgs'/>.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PrintAction.PrintToFile">
            <summary>
             Printing to a file.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PrintAction.PrintToPreview">
            <summary>
             Printing to a preview.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PrintAction.PrintToPrinter">
            <summary>
             Printing to a printer.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PrintController">
            <summary>
             Controls how a document is printed.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrintController.IsPreview">
            <summary>
             Gets a value indicating whether the <see cref="T:System.Drawing.Printing.PrintController"/> is used for print preview.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
             When overridden in a derived class, begins the control sequence of when and how to print a page in a document.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
             When overridden in a derived class, completes the control sequence of when and how to print a page in a document.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrintController.Print(System.Drawing.Printing.PrintDocument)">
            <remarks>
             <para>
              If you have nested PrintControllers, this method won't get called on the inner one.
              Add initialization code to StartPrint or StartPage instead.
             </para>
            </remarks>
        </member>
        <member name="M:System.Drawing.Printing.PrintController.PrintLoop(System.Drawing.Printing.PrintDocument)">
            <summary>
             Returns true if print was aborted.
            </summary>
            <remarks>
             <para>
              If you have nested <see cref="T:System.Drawing.Printing.PrintController"/> objects, this method won't get called on the inner one.
              Add initialization code to <see cref="M:System.Drawing.Printing.PrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)"/> or
              <see cref="M:System.Drawing.Printing.PrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)"/> instead.
             </para>
            </remarks>
        </member>
        <member name="M:System.Drawing.Printing.PrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
            <summary>
             When overridden in a derived class, begins the control sequence of when and how to print a document.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
            <summary>
             When overridden in a derived class, completes the control sequence of when and how to print a document.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PrintController.SafeDeviceModeHandle">
            <summary>
             Represents a SafeHandle for a Printer's Device Mode struct handle (DEVMODE)
            </summary>
            <remarks>
             <para>
              DEVMODEs are pretty expensive, so we cache one here and share it
              with the Standard and Preview print controllers.
             </para>
            </remarks>
        </member>
        <member name="T:System.Drawing.Printing.PrintDocument">
            <summary>
             Defines a reusable object that sends output to the printer.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrintDocument.#ctor">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.PrintDocument'/> class.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings">
            <summary>
             Gets or sets the default page settings for the document being printed.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrintDocument.DocumentName">
            <summary>
             Gets or sets the name to display to the user while printing the document; for example, in a print status
             dialog or a printer queue.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrintDocument.OriginAtMargins">
            <summary>
             If <see langword="true"/>, positions the origin of the graphics object associated with the page at the
             point just inside the user-specified margins of the page. If <see langword="false"/>, the graphics origin
             is at the top-left corner of the printable area of the page.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrintDocument.PrintController">
            <summary>
             Gets or sets the <see cref='T:System.Drawing.Printing.PrintController'/>  that guides the printing process.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrintDocument.PrinterSettings">
            <summary>
             Gets or sets the printer on which the document is printed.
            </summary>
        </member>
        <member name="E:System.Drawing.Printing.PrintDocument.BeginPrint">
            <summary>
             Occurs when the <see cref='M:System.Drawing.Printing.PrintDocument.Print'/> method is called, before the first page prints.
            </summary>
        </member>
        <member name="E:System.Drawing.Printing.PrintDocument.EndPrint">
            <summary>
             Occurs when <see cref='M:System.Drawing.Printing.PrintDocument.Print'/> is called, after the last page is printed.
            </summary>
        </member>
        <member name="E:System.Drawing.Printing.PrintDocument.PrintPage">
            <summary>
             Occurs when a page is printed.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
            <summary>
             Raises the <see cref='E:System.Drawing.Printing.PrintDocument.BeginPrint'/> event.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)">
            <summary>
             Raises the <see cref='E:System.Drawing.Printing.PrintDocument.EndPrint'/> event.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
             Raises the <see cref='E:System.Drawing.Printing.PrintDocument.PrintPage'/> event.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)">
            <summary>
             Raises the <see cref='E:System.Drawing.Printing.PrintDocument.QueryPageSettings'/> event.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrintDocument.Print">
            <summary>
             Prints the document.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrintDocument.ToString">
            <summary>
             Provides some interesting information about the PrintDocument in String form.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PrinterResolution">
            <summary>
             Retrieves the resolution supported by a printer.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterResolution.#ctor">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.PrinterResolution'/> class with default properties.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterResolution.Kind">
            <summary>
             Gets a value indicating the kind of printer resolution.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterResolution.X">
            <summary>
             Gets the printer resolution in the horizontal direction, in dots per inch.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterResolution.Y">
            <summary>
             Gets the printer resolution in the vertical direction, in dots per inch.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PrinterResolutionKind">
            <summary>
             Specifies a printer resolution.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PrinterResolutionKind.High">
            <summary>
             High resolution.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PrinterResolutionKind.Medium">
            <summary>
             Medium resolution.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PrinterResolutionKind.Low">
            <summary>
             Low resolution.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PrinterResolutionKind.Draft">
            <summary>
             Draft-quality resolution.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PrinterResolutionKind.Custom">
            <summary>
             Custom resolution.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PrinterSettings">
            <summary>
             Information about how a document should be printed, including which printer to print it on.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterSettings.#ctor">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.PrinterSettings'/> class.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.CanDuplex">
            <summary>
             Gets a value indicating whether the printer supports duplex (double-sided) printing.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.Copies">
            <summary>
             Gets or sets the number of copies to print.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.Collate">
            <summary>
             Gets or sets a value indicating whether the print out is collated.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings">
            <summary>
             Gets the default page settings for this printer.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.Duplex">
            <summary>
             Gets or sets the printer's duplex setting.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.FromPage">
            <summary>
             Gets or sets the first page to print.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters">
            <summary>
             Gets the names of all printers installed on the machine.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter">
            <summary>
             Gets a value indicating whether the <see cref='P:System.Drawing.Printing.PrinterSettings.PrinterName'/> property designates the default printer.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.IsPlotter">
            <summary>
             Gets a value indicating whether the printer is a plotter, as opposed to a raster printer.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.IsValid">
            <summary>
             Gets a value indicating whether the <see cref='P:System.Drawing.Printing.PrinterSettings.PrinterName'/> property designates a valid printer.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle">
            <summary>
             Gets the angle, in degrees, which the portrait orientation is rotated to produce the landscape orientation.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.MaximumCopies">
            <summary>
             Gets the maximum number of copies allowed by the printer.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.MaximumPage">
            <summary>
             Gets or sets the highest <see cref='P:System.Drawing.Printing.PrinterSettings.FromPage'/> or <see cref='P:System.Drawing.Printing.PrinterSettings.ToPage'/> which may be selected in a print dialog box.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.MinimumPage">
            <summary>
            Gets or sets the lowest <see cref='P:System.Drawing.Printing.PrinterSettings.FromPage'/> or <see cref='P:System.Drawing.Printing.PrinterSettings.ToPage'/> which may be selected in a print dialog box.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.PrintFileName">
            <summary>
             Indicates the name of the printer file.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizes">
            <summary>
             Gets the paper sizes supported by this printer.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.PaperSources">
            <summary>
             Gets the paper sources available on this printer.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.PrintDialogDisplayed">
            <summary>
             Whether the print dialog has been displayed.  In SafePrinting mode, a print dialog is required to print.
             After printing, this property is set to false if the program does not have AllPrinting; this guarantees
             a document is only printed once each time the print dialog is shown.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.PrintRange">
            <summary>
             Gets or sets the pages the user has asked to print.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.PrintToFile">
            <summary>
             Indicates whether to print to a file instead of a port.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.PrinterName">
            <summary>
             Gets or sets the name of the printer.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions">
            <summary>
             Gets the resolutions supported by this printer.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)">
            <summary>
             If the image is a JPEG or a PNG (Image.RawFormat) and the printer returns true from
             ExtEscape(CHECKJPEGFORMAT) or ExtEscape(CHECKPNGFORMAT) then this function returns true.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)">
             <summary>
              This method utilizes the CHECKJPEGFORMAT/CHECKPNGFORMAT printer escape functions
              to determine whether the printer can handle a JPEG image.
            
              If the image is a JPEG or a PNG (Image.RawFormat) and the printer returns true
              from ExtEscape(CHECKJPEGFORMAT) or ExtEscape(CHECKPNGFORMAT) then this function returns true.
             </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.SupportsColor">
            <summary>
             Gets a value indicating whether the printer supports color printing.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.ToPage">
            <summary>
             Gets or sets the last page to print.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterSettings.Clone">
            <summary>
             Creates an identical copy of this object.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode">
            <summary>
             Creates a handle to a DEVMODE structure which correspond too the printer settings.When you are done with the
             handle, you must deallocate it yourself:
               Kernel32.GlobalFree(handle);
               Where "handle" is the return value from this method.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)">
            <summary>
             Creates a handle to a DEVMODE structure which correspond to the printer and page settings.
             When you are done with the handle, you must deallocate it yourself:
               Kernel32.GlobalFree(handle);
               Where "handle" is the return value from this method.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevnames">
            <summary>
             Creates a handle to a DEVNAMES structure which correspond to the printer settings.
             When you are done with the handle, you must deallocate it yourself:
               Kernel32.GlobalFree(handle);
               Where "handle" is the return value from this method.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)">
            <summary>
             Copies the relevant information out of the handle and into the PrinterSettings.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)">
            <summary>
             Copies the relevant information out of the handle and into the PrinterSettings.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection">
            <summary>
             Collection of <see cref="T:System.Drawing.Printing.PaperSize"/> objects.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.#ctor(System.Drawing.Printing.PaperSize[])">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection'/> class.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Count">
            <summary>
             Gets a value indicating the number of paper sizes.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Item(System.Int32)">
            <summary>
             Retrieves the <see cref="T:System.Drawing.Printing.PaperSize"/> with the specified index.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.#ctor(System.Drawing.Printing.PaperSource[])">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection'/> class.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Count">
            <summary>
             Gets a value indicating the number of paper sources.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Item(System.Int32)">
            <summary>
             Gets the PaperSource with the specified index.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.#ctor(System.Drawing.Printing.PrinterResolution[])">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection'/> class.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Count">
            <summary>
             Gets a value indicating the number of available printer resolutions.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Item(System.Int32)">
            <summary>
             Retrieves the PrinterResolution with the specified index.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.#ctor(System.String[])">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.PrinterSettings.StringCollection'/> class.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Count">
            <summary>
             Gets a value indicating the number of strings.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Item(System.Int32)">
            <summary>
             Gets the string with the specified index.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PrinterUnit">
            <summary>
             Specifies several of the units of measure Microsoft Win32 uses for printing.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PrinterUnit.Display">
            <summary>
             The default unit (0.01 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PrinterUnit.ThousandthsOfAnInch">
            <summary>
             One thousandth of an inch (0.001 in.).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PrinterUnit.HundredthsOfAMillimeter">
            <summary>
             One hundredth of a millimeter (0.01 mm).
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PrinterUnit.TenthsOfAMillimeter">
            <summary>
             One tenth of a millimeter (0.1 mm).
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PrinterUnitConvert">
            <summary>
             Specifies a series of conversion methods that are useful when interoperating with the raw Win32 printing API.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Double,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
            <summary>
             Converts the value, in fromUnit units, to toUnit units.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Int32,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
            <summary>
             Converts the value, in fromUnit units, to toUnit units.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Point,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
            <summary>
             Converts the value, in fromUnit units, to toUnit units.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Size,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
            <summary>
             Converts the value, in fromUnit units, to toUnit units.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Rectangle,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
            <summary>
             Converts the value, in fromUnit units, to toUnit units.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Printing.Margins,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
            <summary>
             Converts the value, in fromUnit units, to toUnit units.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PrintEventArgs">
            <summary>
             Provides data for the <see cref='E:System.Drawing.Printing.PrintDocument.BeginPrint'/> and <see cref='E:System.Drawing.Printing.PrintDocument.EndPrint'/> events.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrintEventArgs.#ctor">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.PrintEventArgs'/> class.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrintEventArgs.#ctor(System.Drawing.Printing.PrintAction)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.PrintEventArgs'/> class.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrintEventArgs.PrintAction">
            <summary>
             Specifies which <see cref='T:System.Drawing.Printing.PrintAction'/> is causing this event.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PrintEventHandler">
            <summary>
             Represents the method that will handle the <see cref='E:System.Drawing.Printing.PrintDocument.BeginPrint'/>,
             <see cref='E:System.Drawing.Printing.PrintDocument.EndPrint'/>, or <see cref='E:System.Drawing.Printing.PrintDocument.QueryPageSettings'/>
             event of a <see cref='T:System.Drawing.Printing.PrintDocument'/>.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PrintPageEventArgs">
            <summary>
             Provides data for the <see cref='E:System.Drawing.Printing.PrintDocument.PrintPage'/> event.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrintPageEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Printing.PageSettings)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.PrintPageEventArgs'/> class.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrintPageEventArgs.Cancel">
            <summary>
             Gets or sets a value indicating whether the print job should be canceled.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrintPageEventArgs.Graphics">
            <summary>
             Gets the <see cref='T:System.Drawing.Graphics'/> used to paint the item.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrintPageEventArgs.HasMorePages">
            <summary>
             Gets or sets a value indicating whether an additional page should be printed.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrintPageEventArgs.MarginBounds">
            <summary>
             Gets the rectangular area that represents the portion of the page between the margins.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageBounds">
            <summary>
             Gets the rectangular area that represents the total area of the page.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageSettings">
            <summary>
             Gets the page settings for the current page.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.PrintPageEventArgs.CopySettingsToDevMode">
            <summary>
             Apply page settings to the printer.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.PrintPageEventArgs.Dispose">
            <summary>
             Disposes of the resources (other than memory) used by the <see cref='T:System.Drawing.Printing.PrintPageEventArgs'/>.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PrintPageEventHandler">
            <summary>
             Represents the method that will handle the <see cref='E:System.Drawing.Printing.PrintDocument.PrintPage'/> event of a <see cref='T:System.Drawing.Printing.PrintDocument'/>.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.PrintRange">
            <summary>
             Specifies the option buttons in the print dialog box that designate the part of the document to print.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PrintRange.AllPages">
            <summary>
             All pages are printed.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PrintRange.SomePages">
            <summary>
             The pages between <see cref='P:System.Drawing.Printing.PrinterSettings.FromPage'/> and <see cref='P:System.Drawing.Printing.PrinterSettings.ToPage'/> are printed.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PrintRange.Selection">
            <summary>
             The selected pages are printed.
            </summary>
        </member>
        <member name="F:System.Drawing.Printing.PrintRange.CurrentPage">
            <summary>
             The current page is printed. The print dialog box requires Windows 2000 or later for this setting; if used
             with an earlier operating system, all pages will be printed.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.QueryPageSettingsEventArgs">
            <summary>
             Provides data for the <see cref='E:System.Drawing.Printing.PrintDocument.QueryPageSettings'/> event.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.QueryPageSettingsEventArgs.#ctor(System.Drawing.Printing.PageSettings)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Printing.QueryPageSettingsEventArgs'/> class.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings">
            <summary>
             Gets or sets the page settings for the page to be printed.
            </summary>
        </member>
        <member name="P:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettingsChanged">
            <summary>
             It's too expensive to compare 2 instances of PageSettings class, as the getters are accessing the printer
             spooler, thus we track any explicit invocations of the setters or getters on this class, and this field tracks
             if PageSettings property was accessed. It will return a false positive when the user is reading property values,
             but we'll take a perf hit in this case assuming this event is not used often.
            </summary>
        </member>
        <member name="T:System.Drawing.Printing.QueryPageSettingsEventHandler">
            <summary>
             Represents the method that will handle the <see cref='E:System.Drawing.Printing.PrintDocument.QueryPageSettings'/> event of a
             <see cref='T:System.Drawing.Printing.PrintDocument'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Printing.TriState.ToString">
            <summary>Provides some interesting information about the TriState in String form.</summary>
        </member>
        <member name="T:System.Drawing.PrintPreviewGraphics">
            <summary>
             Retrieves the printer graphics during preview.
            </summary>
        </member>
        <member name="P:System.Drawing.PrintPreviewGraphics.VisibleClipBounds">
            <summary>
             Gets the Visible bounds of this graphics object. Used during print preview.
            </summary>
        </member>
        <member name="T:System.Drawing.RotateFlipType">
            <summary>
             Specifies the different patterns available 'RotateFlipType' objects.
            </summary>
        </member>
        <member name="T:System.Drawing.StockIconId">
            <summary>
             Icon identifiers for use with <see cref="M:System.Drawing.SystemIcons.GetStockIcon(System.Drawing.StockIconId,System.Drawing.StockIconOptions)"/>.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.DocumentNoAssociation">
            <summary>
             Document (blank page), no associated program.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.DocumentWithAssociation">
            <summary>
             Document with an associated program.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Application">
            <summary>
             Generic application with no custom icon.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Folder">
            <summary>
             Closed folder.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.FolderOpen">
            <summary>
             Open folder.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Drive525">
            <summary>
             5.25" floppy disk drive.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Drive35">
            <summary>
             3.5" floppy disk drive.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.DriveRemovable">
            <summary>
             Removable drive.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.DriveFixed">
            <summary>
             Fixed drive.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.DriveNet">
            <summary>
             Network drive.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.DriveNetDisabled">
            <summary>
             Disabled network drive.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.DriveCD">
            <summary>
             CD drive.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.DriveRam">
            <summary>
             RAM disk drive.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.World">
            <summary>
             Entire network.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Server">
            <summary>
             A computer on the network.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Printer">
            <summary>
             Printer.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MyNetwork">
            <summary>
             My network places.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Find">
            <summary>
             Find.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Help">
            <summary>
             Help.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Share">
            <summary>
             Overlay for shared items.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Link">
            <summary>
             Overlay for shortcuts to items.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.SlowFile">
            <summary>
             Overlay for slow items.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Recycler">
            <summary>
             Empty recycle bin.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.RecyclerFull">
            <summary>
             Full recycle bin.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaCDAudio">
            <summary>
             Audio CD media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Lock">
            <summary>
             Security lock.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.AutoList">
            <summary>
             AutoList.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.PrinterNet">
            <summary>
             Network printer.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.ServerShare">
            <summary>
             Server share.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.PrinterFax">
            <summary>
             Fax printer.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.PrinterFaxNet">
            <summary>
             Networked fax printer.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.PrinterFile">
            <summary>
             Print to file.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Stack">
            <summary>
             Stack.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaSVCD">
            <summary>
             SVCD media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.StuffedFolder">
            <summary>
             Folder containing other items.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.DriveUnknown">
            <summary>
             Unknown drive.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.DriveDVD">
            <summary>
             DVD drive.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaDVD">
            <summary>
             DVD media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaDVDRAM">
            <summary>
             DVD-RAM media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaDVDRW">
            <summary>
             DVD-RW media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaDVDR">
            <summary>
             DVD-R media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaDVDROM">
            <summary>
             DVD-ROM media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaCDAudioPlus">
            <summary>
             CD+ (Enhanced CD) media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaCDRW">
            <summary>
             CD-RW media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaCDR">
            <summary>
             CD-R media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaCDBurn">
            <summary>
             Burning CD.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaBlankCD">
            <summary>
             Blank CD media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaCDROM">
            <summary>
             CD-ROM media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.AudioFiles">
            <summary>
             Audio files.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.ImageFiles">
            <summary>
             Image files.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.VideoFiles">
            <summary>
             Video files.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MixedFiles">
            <summary>
             Mixed files.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.FolderBack">
            <summary>
             Folder back.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.FolderFront">
            <summary>
             Folder front.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Shield">
            <summary>
             Security shield. Use for UAC prompts only.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Warning">
            <summary>
             Warning.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Info">
            <summary>
             Informational.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Error">
            <summary>
             Error.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Key">
            <summary>
             Key / secure.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Software">
            <summary>
             Software.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Rename">
            <summary>
             Rename.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Delete">
            <summary>
             Delete.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaAudioDVD">
            <summary>
             Audio DVD media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaMovieDVD">
            <summary>
             Movie DVD media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaEnhancedCD">
            <summary>
             Enhanced CD media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaEnhancedDVD">
            <summary>
             Enhanced DVD media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaHDDVD">
            <summary>
             HD-DVD media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaBluRay">
            <summary>
             BluRay media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaVCD">
            <summary>
             VCD media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaDVDPlusR">
            <summary>
             DVD+R media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaDVDPlusRW">
            <summary>
             DVD+RW media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.DesktopPC">
            <summary>
             Desktop computer.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MobilePC">
            <summary>
             Mobile computer.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Users">
            <summary>
             Users.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaSmartMedia">
            <summary>
             Smart media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaCompactFlash">
            <summary>
             Compact Flash.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.DeviceCellPhone">
            <summary>
             Cell phone.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.DeviceCamera">
            <summary>
             Camera.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.DeviceVideoCamera">
            <summary>
             Video camera.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.DeviceAudioPlayer">
            <summary>
             Audio player.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.NetworkConnect">
            <summary>
             Connect to network.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Internet">
            <summary>
             Internet.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.ZipFile">
            <summary>
             ZIP file.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.Settings">
            <summary>
             Settings.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.DriveHDDVD">
            <summary>
             HD-DVD drive.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.DriveBD">
            <summary>
             BluRay drive.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaHDDVDROM">
            <summary>
             HD-DVD-ROM media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaHDDVDR">
            <summary>
             HD-DVD-R media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaHDDVDRAM">
            <summary>
             HD-DVD-RAM media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaBDROM">
            <summary>
             BluRay-ROM media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaBDR">
            <summary>
             BluRay-R media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.MediaBDRE">
            <summary>
             BluRay-RE media.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconId.ClusteredDrive">
            <summary>
             Clustered disk.
            </summary>
        </member>
        <member name="T:System.Drawing.StockIconOptions">
            <summary>
             Options for use with <see cref="M:System.Drawing.SystemIcons.GetStockIcon(System.Drawing.StockIconId,System.Drawing.StockIconOptions)"/>.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconOptions.Default">
            <summary>
             Use the defaults, which is to retrieve a large version of the icon (as defined by the current system
             metrics).
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconOptions.SmallIcon">
            <summary>
             Retrieve the small version of the icon (as defined by the current system metrics).
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconOptions.ShellIconSize">
            <summary>
             Retrieve the shell icon size of the icon.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconOptions.LinkOverlay">
            <summary>
             Adds a link overlay onto the icon.
            </summary>
        </member>
        <member name="F:System.Drawing.StockIconOptions.Selected">
            <summary>
             Blends the icon with the system highlight color.
            </summary>
        </member>
        <member name="T:System.Drawing.StringAlignment">
            <summary>
             Specifies the alignment of a text string relative to its layout rectangle.
            </summary>
        </member>
        <member name="F:System.Drawing.StringAlignment.Near">
            <summary>
             Specifies the text be aligned near the layout. In a left-to-right layout, the near position is left. In a
             right-to-left layout, the near position is right.
            </summary>
        </member>
        <member name="F:System.Drawing.StringAlignment.Center">
            <summary>
            Specifies that text is aligned in the center of the layout rectangle.
            </summary>
        </member>
        <member name="F:System.Drawing.StringAlignment.Far">
            <summary>
             Specifies that text is aligned far from the origin position of the layout rectangle. In a left-to-right
             layout, the far position is right. In a right-to-left layout, the far position is left.
            </summary>
        </member>
        <member name="T:System.Drawing.StringDigitSubstitute">
            <summary>
             Specifies style information applied to String Digit Substitute.
            </summary>
        </member>
        <member name="T:System.Drawing.StringFormat">
            <summary>
             Encapsulates text layout information (such as alignment and linespacing), display manipulations (such as
             ellipsis insertion and national digit substitution) and OpenType features.
            </summary>
        </member>
        <member name="M:System.Drawing.StringFormat.#ctor">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.StringFormat'/> class.
            </summary>
        </member>
        <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.StringFormat'/> class with the specified <see cref='T:System.Drawing.StringFormatFlags'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags,System.Int32)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.StringFormat'/> class with the specified
             <see cref='T:System.Drawing.StringFormatFlags'/> and language.
            </summary>
        </member>
        <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormat)">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.StringFormat'/> class from the specified
             existing <see cref='T:System.Drawing.StringFormat'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.StringFormat.Dispose">
            <summary>
             Cleans up Windows resources for this <see cref='T:System.Drawing.StringFormat'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.StringFormat.Clone">
            <summary>
             Creates an exact copy of this <see cref='T:System.Drawing.StringFormat'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.StringFormat.FormatFlags">
            <summary>
             Gets or sets a <see cref='T:System.Drawing.StringFormatFlags'/> that contains formatting information.
            </summary>
        </member>
        <member name="M:System.Drawing.StringFormat.SetMeasurableCharacterRanges(System.Drawing.CharacterRange[])">
            <summary>
             Sets the measure of characters to the specified range.
            </summary>
        </member>
        <member name="P:System.Drawing.StringFormat.Alignment">
            <summary>
             Specifies text alignment information.
            </summary>
        </member>
        <member name="P:System.Drawing.StringFormat.LineAlignment">
            <summary>
             Gets or sets the line alignment.
            </summary>
        </member>
        <member name="P:System.Drawing.StringFormat.HotkeyPrefix">
            <summary>
             Gets or sets the <see cref='P:System.Drawing.StringFormat.HotkeyPrefix'/> for this <see cref='T:System.Drawing.StringFormat'/> .
            </summary>
        </member>
        <member name="M:System.Drawing.StringFormat.SetTabStops(System.Single,System.Single[])">
            <summary>
             Sets tab stops for this <see cref='T:System.Drawing.StringFormat'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.StringFormat.GetTabStops(System.Single@)">
            <summary>
             Gets the tab stops for this <see cref='T:System.Drawing.StringFormat'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.StringFormat.Trimming">
            <summary>
             Gets or sets the <see cref='T:System.Drawing.StringTrimming'/> for this <see cref='T:System.Drawing.StringFormat'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.StringFormat.GenericDefault">
             <summary>
              Gets a generic default <see cref='T:System.Drawing.StringFormat'/>.
             </summary>
             <devdoc>
              Remarks from MSDN: A generic, default StringFormat object has the following characteristics:
            
                 - No string format flags are set.
                 - Character alignment and line alignment are set to StringAlignmentNear.
                 - Language ID is set to neutral language, which means that the current language associated with the calling thread is used.
                 - String digit substitution is set to StringDigitSubstituteUser.
                 - Hot key prefix is set to HotkeyPrefixNone.
                 - Number of tab stops is set to zero.
                 - String trimming is set to StringTrimmingCharacter.
             </devdoc>
        </member>
        <member name="P:System.Drawing.StringFormat.GenericTypographic">
             <summary>
              Gets a generic typographic <see cref='T:System.Drawing.StringFormat'/>.
             </summary>
             <devdoc>
              Remarks from MSDN: A generic, typographic StringFormat object has the following characteristics:
            
                 - String format flags StringFormatFlagsLineLimit, StringFormatFlagsNoClip, and StringFormatFlagsNoFitBlackBox are set.
                 - Character alignment and line alignment are set to StringAlignmentNear.
                 - Language ID is set to neutral language, which means that the current language associated with the calling thread is used.
                 - String digit substitution is set to StringDigitSubstituteUser.
                 - Hot key prefix is set to HotkeyPrefixNone.
                 - Number of tab stops is set to zero.
                 - String trimming is set to StringTrimmingNone.
             </devdoc>
        </member>
        <member name="P:System.Drawing.StringFormat.DigitSubstitutionMethod">
            <summary>
             Gets the <see cref='T:System.Drawing.StringDigitSubstitute'/> for this <see cref='T:System.Drawing.StringFormat'/>.
            </summary>
        </member>
        <member name="P:System.Drawing.StringFormat.DigitSubstitutionLanguage">
            <summary>
             Gets the language of <see cref='T:System.Drawing.StringDigitSubstitute'/> for this <see cref='T:System.Drawing.StringFormat'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.StringFormat.Finalize">
            <summary>
             Cleans up Windows resources for this <see cref='T:System.Drawing.StringFormat'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.StringFormat.ToString">
            <summary>
             Converts this <see cref='T:System.Drawing.StringFormat'/> to a human-readable string.
            </summary>
        </member>
        <member name="T:System.Drawing.StringFormatFlags">
            <summary>
             Specifies the display and layout information for text strings.
            </summary>
        </member>
        <member name="F:System.Drawing.StringFormatFlags.DirectionRightToLeft">
            <summary>
             Specifies that text is right to left.
            </summary>
        </member>
        <member name="F:System.Drawing.StringFormatFlags.DirectionVertical">
            <summary>
            Specifies that text is vertical.
            </summary>
        </member>
        <member name="F:System.Drawing.StringFormatFlags.FitBlackBox">
             <summary>
             Specifies that no part of any glyph overhangs the bounding rectangle. By default some glyphs
             overhang the rectangle slightly where necessary to appear at the edge visually. For example
             when an italic lower case letter f in a font such as Garamond is aligned at the far left
             of a rectangle, the lower part of the f will reach slightly further left than the left edge
             of the rectangle. Setting this flag will ensure no painting outside the rectangle but will
             cause the aligned edges of adjacent lines of text to appear uneven.
            
             WARNING:
             The GDI+ equivalent for this is StringFormatFlags::StringFormatFlagsNoFitBlackBox,
             which is defined as 0x4.  This was a mistake introduced since the first version of
             the product and fixing it at this point would be a breaking change.
             <see href="https://docs.microsoft.com/en-us/windows/desktop/api/gdiplusenums/ne-gdiplusenums-stringformatflags"/>
             </summary>
        </member>
        <member name="F:System.Drawing.StringFormatFlags.DisplayFormatControl">
            <summary>
            Causes control characters such as the left-to-right mark to be shown in the output with a representative glyph.
            </summary>
        </member>
        <member name="F:System.Drawing.StringFormatFlags.NoFontFallback">
            <summary>
            Disables fallback to alternate fonts for characters not supported in the requested font. Any missing characters are
            displayed with the fonts missing glyph, usually an open square.
            </summary>
        </member>
        <member name="F:System.Drawing.StringFormatFlags.MeasureTrailingSpaces">
            <summary>
            Specifies that the space at the end of each line is included in a string measurement.
            </summary>
        </member>
        <member name="F:System.Drawing.StringFormatFlags.NoWrap">
            <summary>
            Specifies that the wrapping of text to the next line is disabled. NoWrap is implied when a point of origin
            is used instead of a layout rectangle. When drawing text within a rectangle, by default, text is broken at
            the last word boundary that is inside the rectangle's boundary and wrapped to the next line.
            </summary>
        </member>
        <member name="F:System.Drawing.StringFormatFlags.LineLimit">
            <summary>
            Specifies that only entire lines are laid out in the layout rectangle. By default, layout
            continues until the end of the text or until no more lines are visible as a result of clipping,
            whichever comes first. The default settings allow the last line to be partially obscured by a
            layout rectangle that is not a whole multiple of the line height.
            To ensure that only whole lines are seen, set this flag and be careful to provide a layout
            rectangle at least as tall as the height of one line.
            </summary>
        </member>
        <member name="F:System.Drawing.StringFormatFlags.NoClip">
            <summary>
            Specifies that characters overhanging the layout rectangle and text extending outside the layout
            rectangle are allowed to show. By default, all overhanging characters and text that extends outside
            the layout rectangle are clipped. Any trailing spaces (spaces that are at the end of a line) that
            extend outside the layout rectangle are clipped. Therefore, the setting of this flag will have an
            effect on a string measurement if trailing spaces are being included in the measurement.
            If clipping is enabled, trailing spaces that extend outside the layout rectangle are not included
            in the measurement. If clipping is disabled, all trailing spaces are included in the measurement,
            regardless of whether they are outside the layout rectangle.
            </summary>
        </member>
        <member name="T:System.Drawing.StringTrimming">
            <summary>
             Specifies how to trim characters from a string that does not completely fit into a layout shape.
            </summary>
        </member>
        <member name="F:System.Drawing.StringTrimming.None">
            <summary>
             Specifies no trimming.
            </summary>
        </member>
        <member name="F:System.Drawing.StringTrimming.Character">
            <summary>
             Specifies that the string is broken at the boundary of the last character
             that is inside the layout rectangle. This is the default.
            </summary>
        </member>
        <member name="F:System.Drawing.StringTrimming.Word">
            <summary>
             Specifies that the string is broken at the boundary of the last word that is inside the layout rectangle.
            </summary>
        </member>
        <member name="F:System.Drawing.StringTrimming.EllipsisCharacter">
            <summary>
             Specifies that the string is broken at the boundary of the last character that is inside
             the layout rectangle and an ellipsis (...) is inserted after the character.
            </summary>
        </member>
        <member name="F:System.Drawing.StringTrimming.EllipsisWord">
            <summary>
             Specifies that the string is broken at the boundary of the last word that is inside the
             layout rectangle and an ellipsis (...) is inserted after the word.
            </summary>
        </member>
        <member name="F:System.Drawing.StringTrimming.EllipsisPath">
            <summary>
             Specifies that the center is removed from the string and replaced by an ellipsis.
             The algorithm keeps as much of the last portion of the string as possible.
            </summary>
        </member>
        <member name="T:System.Drawing.StringUnit">
            <summary>
            Specifies the units of measure for a text string.
            </summary>
        </member>
        <member name="F:System.Drawing.StringUnit.World">
            <summary>
            Specifies world units as the unit of measure.
            </summary>
        </member>
        <member name="F:System.Drawing.StringUnit.Display">
            <summary>
            Specifies the device unit as the unit of measure.
            </summary>
        </member>
        <member name="F:System.Drawing.StringUnit.Pixel">
            <summary>
            Specifies a pixel as the unit of measure.
            </summary>
        </member>
        <member name="F:System.Drawing.StringUnit.Point">
            <summary>
            Specifies a printer's point as the unit of measure.
            </summary>
        </member>
        <member name="F:System.Drawing.StringUnit.Inch">
            <summary>
            Specifies an inch as the unit of measure.
            </summary>
        </member>
        <member name="F:System.Drawing.StringUnit.Document">
            <summary>
            Specifies 1/300 of an inch as the unit of measure.
            </summary>
        </member>
        <member name="F:System.Drawing.StringUnit.Millimeter">
            <summary>
            Specifies a millimeter as the unit of measure
            </summary>
        </member>
        <member name="F:System.Drawing.StringUnit.Em">
            <summary>
            Specifies a printer's em size of 32 as the unit of measure.
            </summary>
        </member>
        <member name="M:System.Drawing.SystemIcons.GetStockIcon(System.Drawing.StockIconId,System.Drawing.StockIconOptions)">
            <summary>
             Gets the specified Windows shell stock icon.
            </summary>
            <param name="stockIcon">The stock icon to retrieve.</param>
            <param name="options">Options for retrieving the icon.</param>
            <returns>The requested <see cref="T:System.Drawing.Icon"/>.</returns>
            <remarks>
             <para>
              Unlike the static icon properties in <see cref="T:System.Drawing.SystemIcons"/>, this API returns icons that are themed
              for the running version of Windows. Additionally, the returned <see cref="T:System.Drawing.Icon"/> is not cached and
              should be disposed when no longer needed.
             </para>
            </remarks>
            <exception cref="T:System.ArgumentException"><paramref name="stockIcon"/> is an invalid <see cref="T:System.Drawing.StockIconId"/>.</exception>
        </member>
        <member name="M:System.Drawing.SystemIcons.GetStockIcon(System.Drawing.StockIconId,System.Int32)">
            <inheritdoc cref="M:System.Drawing.SystemIcons.GetStockIcon(System.Drawing.StockIconId,System.Drawing.StockIconOptions)"/>
            <param name="size">
             The desired size. If the specified size does not exist, an existing size will be resampled to give the
             requested size.
            </param>
        </member>
        <member name="T:System.Drawing.Text.FontCollection">
            <summary>
             When inherited, enumerates the FontFamily objects in a collection of fonts.
            </summary>
        </member>
        <member name="M:System.Drawing.Text.FontCollection.Dispose">
            <summary>
             Disposes of this <see cref='T:System.Drawing.Text.FontCollection'/>
            </summary>
        </member>
        <member name="P:System.Drawing.Text.FontCollection.Families">
            <summary>
             Gets the array of <see cref='T:System.Drawing.FontFamily'/> objects associated with this <see cref='T:System.Drawing.Text.FontCollection'/>.
            </summary>
        </member>
        <member name="T:System.Drawing.Text.GenericFontFamilies">
            <summary>
            Specifies a generic <see cref='T:System.Drawing.FontFamily'/>.
            </summary>
        </member>
        <member name="F:System.Drawing.Text.GenericFontFamilies.Serif">
            <summary>
            A generic Serif <see cref='T:System.Drawing.FontFamily'/>.
            </summary>
        </member>
        <member name="F:System.Drawing.Text.GenericFontFamilies.SansSerif">
            <summary>
            A generic SansSerif <see cref='T:System.Drawing.FontFamily'/>.
            </summary>
        </member>
        <member name="F:System.Drawing.Text.GenericFontFamilies.Monospace">
            <summary>
            A generic Monospace <see cref='T:System.Drawing.FontFamily'/>.
            </summary>
        </member>
        <member name="T:System.Drawing.Text.HotkeyPrefix">
            <summary>
            Specifies the type of display for hotkey prefixes for text.
            </summary>
        </member>
        <member name="F:System.Drawing.Text.HotkeyPrefix.None">
            <summary>
            No hotkey prefix.
            </summary>
        </member>
        <member name="F:System.Drawing.Text.HotkeyPrefix.Show">
            <summary>
            Display the hotkey prefix.
            </summary>
        </member>
        <member name="F:System.Drawing.Text.HotkeyPrefix.Hide">
            <summary>
            Do not display the hotkey prefix.
            </summary>
        </member>
        <member name="T:System.Drawing.Text.InstalledFontCollection">
            <summary>
             Represents the fonts installed on the system.
            </summary>
        </member>
        <member name="M:System.Drawing.Text.InstalledFontCollection.#ctor">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Text.InstalledFontCollection'/> class.
            </summary>
        </member>
        <member name="T:System.Drawing.Text.PrivateFontCollection">
            <summary>
             Encapsulates a collection of <see cref='T:System.Drawing.Font'/> objects.
            </summary>
        </member>
        <member name="M:System.Drawing.Text.PrivateFontCollection.#ctor">
            <summary>
             Initializes a new instance of the <see cref='T:System.Drawing.Text.PrivateFontCollection'/> class.
            </summary>
        </member>
        <member name="M:System.Drawing.Text.PrivateFontCollection.Dispose(System.Boolean)">
            <summary>
             Cleans up Windows resources for this <see cref='T:System.Drawing.Text.PrivateFontCollection'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Text.PrivateFontCollection.AddFontFile(System.String)">
            <summary>
             Adds a font from the specified file to this <see cref='T:System.Drawing.Text.PrivateFontCollection'/>.
            </summary>
        </member>
        <member name="M:System.Drawing.Text.PrivateFontCollection.AddMemoryFont(System.IntPtr,System.Int32)">
            <summary>
             Adds a font contained in system memory to this <see cref='T:System.Drawing.Text.PrivateFontCollection'/>.
            </summary>
        </member>
        <member name="T:System.Drawing.Text.TextRenderingHint">
            <summary>
             Specifies the quality of text rendering.
            </summary>
        </member>
        <member name="F:System.Drawing.Text.TextRenderingHint.SystemDefault">
            <summary>
             Glyph with system default rendering hint.
            </summary>
        </member>
        <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixelGridFit">
            <summary>
             Glyph bitmap with hinting.
            </summary>
        </member>
        <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixel">
            <summary>
             Glyph bitmap without hinting.
            </summary>
        </member>
        <member name="F:System.Drawing.Text.TextRenderingHint.AntiAliasGridFit">
            <summary>
             Anti-aliasing with hinting.
            </summary>
        </member>
        <member name="F:System.Drawing.Text.TextRenderingHint.AntiAlias">
            <summary>
             Glyph anti-alias bitmap without hinting.
            </summary>
        </member>
        <member name="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit">
            <summary>
             Glyph CT bitmap with hinting.
            </summary>
        </member>
        <member name="T:System.Drawing.ToolboxBitmapAttribute">
            <summary>
             ToolboxBitmapAttribute defines the images associated with a specified component.
             The component can offer a small and large image (large is optional).
            </summary>
        </member>
        <member name="M:System.Text.ValueStringBuilder.GetPinnableReference">
            <summary>
             Get a pinnable reference to the builder.
             Does not ensure there is a null char after <see cref="P:System.Text.ValueStringBuilder.Length"/>
             This overload is pattern matched in the C# 7.3+ compiler so you can omit
             the explicit method call, and write eg "fixed (char* c = builder)"
            </summary>
        </member>
        <member name="M:System.Text.ValueStringBuilder.GetPinnableReference(System.Boolean)">
            <summary>
             Get a pinnable reference to the builder.
            </summary>
            <param name="terminate">Ensures that the builder has a null char after <see cref="P:System.Text.ValueStringBuilder.Length"/></param>
        </member>
        <member name="P:System.Text.ValueStringBuilder.RawChars">
            <summary>Returns the underlying storage of the builder.</summary>
        </member>
        <member name="M:System.Text.ValueStringBuilder.AsSpan(System.Boolean)">
            <summary>
            Returns a span around the contents of the builder.
            </summary>
            <param name="terminate">Ensures that the builder has a null char after <see cref="P:System.Text.ValueStringBuilder.Length"/></param>
        </member>
        <member name="M:System.Text.ValueStringBuilder.Grow(System.Int32)">
            <summary>
            Resize the internal buffer either by doubling current buffer size or
            by adding <paramref name="additionalCapacityBeyondPos"/> to
            <see cref="F:System.Text.ValueStringBuilder._pos"/> whichever is greater.
            </summary>
            <param name="additionalCapacityBeyondPos">
            Number of chars requested beyond current position.
            </param>
        </member>
        <member name="P:System.SR.CantTellPrinterName">
            <summary>(printer name protected due to security restrictions)</summary>
        </member>
        <member name="P:System.SR.CantChangeImmutableObjects">
            <summary>Changes cannot be made to {0} because permissions are not valid.</summary>
        </member>
        <member name="P:System.SR.CantMakeIconTransparent">
            <summary>Bitmaps that are icons cannot be made transparent. Icons natively support transparency. Use the Icon constructor to create an icon.</summary>
        </member>
        <member name="P:System.SR.ColorNotSystemColor">
            <summary>The color {0} is not a system color.</summary>
        </member>
        <member name="P:System.SR.GdiplusAborted">
            <summary>Function was ended.</summary>
        </member>
        <member name="P:System.SR.GdiplusAccessDenied">
            <summary>File access is denied.</summary>
        </member>
        <member name="P:System.SR.GdiplusCannotCreateGraphicsFromIndexedPixelFormat">
            <summary>A Graphics object cannot be created from an image that has an indexed pixel format.</summary>
        </member>
        <member name="P:System.SR.GdiplusCannotSetPixelFromIndexedPixelFormat">
            <summary>SetPixel is not supported for images with indexed pixel formats.</summary>
        </member>
        <member name="P:System.SR.GdiplusDestPointsInvalidParallelogram">
            <summary>Destination points define a parallelogram which must have a length of 3. These points will represent the upper-left, upper-right, and lower-left coordinates (defined in that order).</summary>
        </member>
        <member name="P:System.SR.GdiplusDestPointsInvalidLength">
            <summary>Destination points must be an array with a length of 3 or 4. A length of 3 defines a parallelogram with the upper-left, upper-right, and lower-left corners. A length of 4 defines a quadrilateral with the fourth element of the array specifying the lower-rig ...</summary>
        </member>
        <member name="P:System.SR.GdiplusFileNotFound">
            <summary>File not found.</summary>
        </member>
        <member name="P:System.SR.GdiplusFontFamilyNotFound">
            <summary>Font '{0}' cannot be found.</summary>
        </member>
        <member name="P:System.SR.GdiplusFontStyleNotFound">
            <summary>Font '{0}' does not support style '{1}'.</summary>
        </member>
        <member name="P:System.SR.GdiplusGenericError">
            <summary>A generic error occurred in GDI+.</summary>
        </member>
        <member name="P:System.SR.GdiplusInsufficientBuffer">
            <summary>Buffer is too small (internal GDI+ error).</summary>
        </member>
        <member name="P:System.SR.GdiplusInvalidParameter">
            <summary>Parameter is not valid.</summary>
        </member>
        <member name="P:System.SR.GdiplusInvalidRectangle">
            <summary>Rectangle '{0}' cannot have a width or height equal to 0.</summary>
        </member>
        <member name="P:System.SR.GdiplusInvalidSize">
            <summary>Operation requires a transformation of the image from GDI+ to GDI. GDI does not support images with a width or height greater than 32767.</summary>
        </member>
        <member name="P:System.SR.GdiplusOutOfMemory">
            <summary>Out of memory.</summary>
        </member>
        <member name="P:System.SR.GdiplusNotImplemented">
            <summary>Not implemented.</summary>
        </member>
        <member name="P:System.SR.GdiplusNotInitialized">
            <summary>GDI+ is not properly initialized (internal GDI+ error).</summary>
        </member>
        <member name="P:System.SR.GdiplusNotTrueTypeFont">
            <summary>Only TrueType fonts are supported. '{0}' is not a TrueType font.</summary>
        </member>
        <member name="P:System.SR.GdiplusNotTrueTypeFont_NoName">
            <summary>Only TrueType fonts are supported. This is not a TrueType font.</summary>
        </member>
        <member name="P:System.SR.GdiplusObjectBusy">
            <summary>Object is currently in use elsewhere.</summary>
        </member>
        <member name="P:System.SR.GdiplusOverflow">
            <summary>Overflow error.</summary>
        </member>
        <member name="P:System.SR.GdiplusPropertyNotFoundError">
            <summary>Property cannot be found.</summary>
        </member>
        <member name="P:System.SR.GdiplusPropertyNotSupportedError">
            <summary>Property is not supported.</summary>
        </member>
        <member name="P:System.SR.GdiplusUnknown">
            <summary>Unknown GDI+ error occurred.</summary>
        </member>
        <member name="P:System.SR.GdiplusUnknownImageFormat">
            <summary>Image format is unknown.</summary>
        </member>
        <member name="P:System.SR.GdiplusUnsupportedGdiplusVersion">
            <summary>Current version of GDI+ does not support this feature.</summary>
        </member>
        <member name="P:System.SR.GdiplusWrongState">
            <summary>Bitmap region is already locked.</summary>
        </member>
        <member name="P:System.SR.GlobalAssemblyCache">
            <summary>(Global Assembly Cache)</summary>
        </member>
        <member name="P:System.SR.GraphicsBufferCurrentlyBusy">
            <summary>BufferedGraphicsContext cannot be disposed of because a buffer operation is currently in progress.</summary>
        </member>
        <member name="P:System.SR.GraphicsBufferQueryFail">
            <summary>Screen-compatible bitmap cannot be created. The screen bitmap format cannot be determined.</summary>
        </member>
        <member name="P:System.SR.IconInvalidMaskLength">
            <summary>'{0}' data length expected {1}, read {2}</summary>
        </member>
        <member name="P:System.SR.IllegalState">
            <summary>Internal state of the {0} class is invalid.</summary>
        </member>
        <member name="P:System.SR.InterpolationColorsColorBlendNotSet">
            <summary>Property must be set to a valid ColorBlend object to use interpolation colors.</summary>
        </member>
        <member name="P:System.SR.InterpolationColorsCommon">
            <summary>{0}{1} ColorBlend objects must be constructed with the same number of positions and color values. Positions must be between 0.0 and 1.0, 1.0 indicating the last element in the array.</summary>
        </member>
        <member name="P:System.SR.InterpolationColorsInvalidColorBlendObject">
            <summary>ColorBlend object that was set is not valid.</summary>
        </member>
        <member name="P:System.SR.InterpolationColorsInvalidStartPosition">
            <summary>Position's first element must be equal to 0.</summary>
        </member>
        <member name="P:System.SR.InterpolationColorsInvalidEndPosition">
            <summary>Position's last element must be equal to 1.0.</summary>
        </member>
        <member name="P:System.SR.InterpolationColorsLength">
            <summary>Array of colors and positions must contain at least two elements.</summary>
        </member>
        <member name="P:System.SR.InterpolationColorsLengthsDiffer">
            <summary>Colors and positions do not have the same number of elements.</summary>
        </member>
        <member name="P:System.SR.InvalidArgumentValue">
            <summary>Value of '{1}' is not valid for '{0}'.</summary>
        </member>
        <member name="P:System.SR.InvalidArgumentValueFontConverter">
            <summary>Value of '{0}' is not valid for font size unit.</summary>
        </member>
        <member name="P:System.SR.InvalidBoundArgument">
            <summary>Value of '{1}' is not valid for '{0}'. '{0}' should be greater than {2} and less than or equal to {3}.</summary>
        </member>
        <member name="P:System.SR.InvalidColor">
            <summary>Color '{0}' is not valid.</summary>
        </member>
        <member name="P:System.SR.InvalidDashPattern">
            <summary>DashPattern value is not valid.</summary>
        </member>
        <member name="P:System.SR.InvalidEx2BoundArgument">
            <summary>Value of '{1}' is not valid for '{0}'. '{0}' should be greater than or equal to {2} and less than or equal to {3}.</summary>
        </member>
        <member name="P:System.SR.InvalidGDIHandle">
            <summary>Win32 handle that was passed to {0} is not valid or is the wrong type.</summary>
        </member>
        <member name="P:System.SR.InvalidImage">
            <summary>Image type is unknown.</summary>
        </member>
        <member name="P:System.SR.InvalidLowBoundArgumentEx">
            <summary>Value of '{1}' is not valid for '{0}'. '{0}' must be greater than or equal to {2}.</summary>
        </member>
        <member name="P:System.SR.InvalidPermissionState">
            <summary>Permission state is not valid.</summary>
        </member>
        <member name="P:System.SR.InvalidPictureType">
            <summary>Argument '{0}' must be a picture that can be used as a {1}.</summary>
        </member>
        <member name="P:System.SR.InvalidPrinterException_InvalidPrinter">
            <summary>Settings to access printer '{0}' are not valid.</summary>
        </member>
        <member name="P:System.SR.InvalidPrinterException_NoDefaultPrinter">
            <summary>No printers are installed.</summary>
        </member>
        <member name="P:System.SR.InvalidPrinterHandle">
            <summary>Handle {0} is not valid.</summary>
        </member>
        <member name="P:System.SR.ValidRangeX">
            <summary>Parameter must be positive and &lt; Width.</summary>
        </member>
        <member name="P:System.SR.ValidRangeY">
            <summary>Parameter must be positive and &lt; Height.</summary>
        </member>
        <member name="P:System.SR.NativeHandle0">
            <summary>Native handle is 0.</summary>
        </member>
        <member name="P:System.SR.NoDefaultPrinter">
            <summary>Default printer is not set.</summary>
        </member>
        <member name="P:System.SR.NotImplemented">
            <summary>Not implemented.</summary>
        </member>
        <member name="P:System.SR.PDOCbeginPrintDescr">
            <summary>Occurs when the document is about to be printed.</summary>
        </member>
        <member name="P:System.SR.PDOCdocumentNameDescr">
            <summary>The name of the document shown to the user.</summary>
        </member>
        <member name="P:System.SR.PDOCdocumentPageSettingsDescr">
            <summary>The page settings of the page currently being printed.</summary>
        </member>
        <member name="P:System.SR.PDOCendPrintDescr">
            <summary>Occurs after the document has been printed.</summary>
        </member>
        <member name="P:System.SR.PDOCoriginAtMarginsDescr">
            <summary>Indicates that the graphics origin is located at the user-specified page margins.</summary>
        </member>
        <member name="P:System.SR.PDOCprintControllerDescr">
            <summary>Retrieves the print controller for this document.</summary>
        </member>
        <member name="P:System.SR.PDOCprintPageDescr">
            <summary>Occurs once for each page to be printed.</summary>
        </member>
        <member name="P:System.SR.PDOCprinterSettingsDescr">
            <summary>Retrieves the settings for the printer the document is currently being printed to.</summary>
        </member>
        <member name="P:System.SR.PDOCqueryPageSettingsDescr">
            <summary>Occurs before each page is printed.  Useful for changing PageSettings for a particular page.</summary>
        </member>
        <member name="P:System.SR.PlatformNotSupported_Unix">
            <summary>System.Drawing.Common is not supported on non-Windows platforms. See https://aka.ms/systemdrawingnonwindows for more information.</summary>
        </member>
        <member name="P:System.SR.PrintDocumentDesc">
            <summary>Defines an object that sends output to a printer.</summary>
        </member>
        <member name="P:System.SR.PropertyValueInvalidEntry">
            <summary>IDictionary parameter contains at least one entry that is not valid. Ensure all values are consistent with the object's properties.</summary>
        </member>
        <member name="P:System.SR.PSizeNotCustom">
            <summary>PaperSize cannot be changed unless the Kind property is set to Custom.</summary>
        </member>
        <member name="P:System.SR.ResourceNotFound">
            <summary>Resource '{1}' cannot be found in class '{0}'.</summary>
        </member>
        <member name="P:System.SR.TextParseFailedFormat">
            <summary>Text "{0}" cannot be parsed. The expected text format is "{1}".</summary>
        </member>
        <member name="P:System.SR.TriStateCompareError">
            <summary>TriState.Default cannot be converted into a Boolean.</summary>
        </member>
        <member name="P:System.SR.toStringIcon">
            <summary>(Icon)</summary>
        </member>
        <member name="P:System.SR.toStringNone">
            <summary>(none)</summary>
        </member>
        <member name="P:System.SR.DCTypeInvalid">
            <summary>GetObjectType on this dc returned an invalid value.</summary>
        </member>
        <member name="P:System.SR.InvalidEnumArgument">
            <summary>The value of argument '{0}' ({1}) is invalid for Enum type '{2}'.</summary>
        </member>
        <member name="P:System.SR.ConvertInvalidPrimitive">
            <summary>{0} is not a valid value for {1}.</summary>
        </member>
        <member name="P:System.SR.BlendObjectMustHaveTwoElements">
            <summary>Invalid Blend object. It should have at least 2 elements in each of the factors and positions arrays.</summary>
        </member>
        <member name="P:System.SR.BlendObjectFirstElementInvalid">
            <summary>Invalid Blend object. The positions array must have 0.0 as its first element.</summary>
        </member>
        <member name="P:System.SR.BlendObjectLastElementInvalid">
            <summary>Invalid Blend object. The positions array must have 1.0 as its last element.</summary>
        </member>
        <member name="P:System.SR.AvailableOnlyOnWMF">
            <summary>{0} only available on WMF files.</summary>
        </member>
        <member name="P:System.SR.CannotCreateGraphics">
            <summary>Cannot create Graphics from an indexed bitmap.</summary>
        </member>
        <member name="P:System.SR.CouldNotOpenDisplay">
            <summary>Could not open display (X-Server required. Check your DISPLAY environment variable)</summary>
        </member>
        <member name="P:System.SR.CouldntFindSpecifiedFile">
            <summary>Couldn't find specified file.</summary>
        </member>
        <member name="P:System.SR.IconInstanceWasDisposed">
            <summary>Icon instance was disposed.</summary>
        </member>
        <member name="P:System.SR.InvalidGraphicsUnit">
            <summary>Invalid GraphicsUnit</summary>
        </member>
        <member name="P:System.SR.InvalidThumbnailSize">
            <summary>Invalid thumbnail size</summary>
        </member>
        <member name="P:System.SR.NoCodecAvailableForFormat">
            <summary>No codec available for format:{0}</summary>
        </member>
        <member name="P:System.SR.NotImplementedUnderX11">
            <summary>Operation not implemented under X11</summary>
        </member>
        <member name="P:System.SR.none">
            <summary>(none)</summary>
        </member>
        <member name="P:System.SR.NoValidIconImageFound">
            <summary>No valid icon image found</summary>
        </member>
        <member name="P:System.SR.NullOrEmptyPath">
            <summary>Null or empty path.</summary>
        </member>
        <member name="P:System.SR.NumberOfPointsAndTypesMustBeSame">
            <summary>Invalid parameter passed. Number of points and types must be same.</summary>
        </member>
        <member name="P:System.SR.ObjectDisposed">
            <summary>Object has been disposed.</summary>
        </member>
        <member name="P:System.SR.ValueLessThenZero">
            <summary>The value of the {0} property is less than zero.</summary>
        </member>
        <member name="P:System.SR.ValueNotOneOfValues">
            <summary>The value of the {0} property is not one of the {1} values</summary>
        </member>
        <member name="P:System.SR.TargetDirectoryDoesNotExist">
            <summary>The directory {0} of the filename {1} does not exist.</summary>
        </member>
        <member name="P:System.SR.SystemDrawingCommon_PlatformNotSupported">
            <summary>System.Drawing.Common is not supported on this platform.</summary>
        </member>
        <member name="P:System.SR.IconCouldNotBeExtracted">
            <summary>The file path could not be opened or did not contain valid data.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.GdiPlus.Color">
            <summary>Note This section describes functionality designed for use by online stores. | Color Element</summary>
            <remarks>
            <para>The default value for **MediaPlayer** is \#7C9AD6. The default value for **MediaPlayerText** is \#FFFFFF. Be sure to use colors that make it easy for the user to read the button text. For example, you should avoid using white button text on light colored buttons.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/WMP/color-element#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.GdiPlus.ImageType">
            <summary>Defines the type that contains the binary information for an image in a Journal note.</summary>
            <remarks>
            <para><see href="https://learn.microsoft.com/windows/win32/tablet/imagetype-complex-type">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.GdiPlus.Matrix">
            <summary>A matrix is a special data type that contains between one and sixteen components. Every component of a matrix must be of the same type.</summary>
            <remarks>
            <para><see href="https://learn.microsoft.com/windows/win32/direct3dhlsl/dx-graphics-hlsl-matrix">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="T:Windows.Win32.Graphics.GdiPlus.Point">
            <summary>Represents an ordered pair of floating-point x- and y-coordinates that defines a point in a two-dimensional plane.</summary>
            <remarks>
            <para><see href="https://learn.microsoft.com/windows/win32/api/windows.foundation/ns-windows-foundation-point">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.GdiPlus.Point.X">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.GdiPlus.Point.Y">
            <summary></summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Gdi.BITMAP">
            <summary>The BITMAP structure defines the type, width, height, color format, and bit values of a bitmap.</summary>
            <remarks>
            <para>The bitmap formats currently used are monochrome and color. The monochrome bitmap uses a one-bit, one-plane format. Each scan is a multiple of 16 bits. Scans are organized as follows for a monochrome bitmap of height <i>n</i>:</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/wingdi/ns-wingdi-bitmap#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Gdi.BITMAP.bmType">
            <summary>The bitmap type. This member must be zero.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Gdi.BITMAP.bmWidth">
            <summary>The width, in pixels, of the bitmap. The width must be greater than zero.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Gdi.BITMAP.bmHeight">
            <summary>The height, in pixels, of the bitmap. The height must be greater than zero.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Gdi.BITMAP.bmWidthBytes">
            <summary>The number of bytes in each scan line. This value must be divisible by 2, because the system assumes that the bit values of a bitmap form an array that is word aligned.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Gdi.BITMAP.bmPlanes">
            <summary>The count of color planes.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Gdi.BITMAP.bmBitsPixel">
            <summary>The number of bits required to indicate the color of a pixel.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Gdi.BITMAP.bmBits">
            <summary>A pointer to the location of the bit values for the bitmap. The <b>bmBits</b> member must be a pointer to an array of character (1-byte) values.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Gdi.METAHEADER">
            <summary>The METAHEADER structure contains information about a Windows-format metafile.</summary>
            <remarks>
            <para><see href="https://learn.microsoft.com/windows/win32/api/wingdi/ns-wingdi-metaheader">Learn more about this API from docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Gdi.METAHEADER.mtType">
            <summary></summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Gdi.METAHEADER.mtHeaderSize">
            <summary>The size, in words, of the metafile header.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Gdi.METAHEADER.mtVersion">
            <summary>The system version number. The version number for metafiles that support device-independent bitmaps (DIBs) is 0x0300. Otherwise, the version number is 0x0100.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Gdi.METAHEADER.mtSize">
            <summary>The size, in words, of the file.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Gdi.METAHEADER.mtNoObjects">
            <summary>The maximum number of objects that exist in the metafile at the same time.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Gdi.METAHEADER.mtMaxRecord">
            <summary>The size, in words, of the largest record in the metafile.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Gdi.METAHEADER.mtNoParameters">
            <summary>Reserved.</summary>
        </member>
        <member name="T:Windows.Win32.Graphics.Printing.PRINTER_INFO_4W">
            <summary>The PRINTER\_INFO\_4 structure specifies general printer information.The structure can be used to retrieve minimal printer information on a call to EnumPrinters.</summary>
            <remarks>
            <para>The **PRINTER\_INFO\_4** structure provides an easy and extremely fast way to retrieve the names of the printers installed on a local machine, as well as the remote connections that a user has established. When [**EnumPrinters**](enumprinters.md) is called with a **PRINTER\_INFO\_4** data structure, that function queries the registry for the specified information, then returns immediately. This differs from the behavior of **EnumPrinters** when called with other levels of **PRINTER\_INFO\_xxx** data structures. In particular, when **EnumPrinters** is called with a level 2 (**PRINTER\_INFO\_2** ) data structure, it performs an **OpenPrinter** call on each remote connection. If a remote connection is down, if the remote server no longer exists, or if the remote printer no longer exists, the function must wait for RPC to time out and consequently fail the **OpenPrinter** call. This can take a while. Passing a **PRINTER\_INFO\_4** structure lets an application retrieve a bare minimum of required information; if more detailed information is desired, a subsequent **EnumPrinter** level 2 call can be made. **Attributes** can also contain values that are defined in the **Attributes** field of **PRINTER\_INFO\_2**. Some printer configurations, such as printer connections to some non-Windows-based print servers, might return both **PRINTER\_ATTRIBUTE\_LOCAL** and **PRINTER\_ATTRIBUTE\_NETWORK**.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/printdocs/printer-info-4#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Graphics.Printing.PRINTER_INFO_4W.pPrinterName">
            <summary>Pointer to a null-terminated string that specifies the name of the printer (local or remote).</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Printing.PRINTER_INFO_4W.pServerName">
            <summary>Pointer to a null-terminated string that is the name of the server.</summary>
        </member>
        <member name="F:Windows.Win32.Graphics.Printing.PRINTER_INFO_4W.Attributes">
            <summary>
            <para>Specifies information about the returned data.</para>
            <para>| Value                       | Meaning                          | |-----------------------------|----------------------------------| | PRINTER\_ATTRIBUTE\_LOCAL   | The printer is a local printer.  | | PRINTER\_ATTRIBUTE\_NETWORK | The printer is a remote printer. |</para>
            <para><see href="https://learn.microsoft.com/windows/win32/printdocs/printer-info-4#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="T:Windows.Win32.PInvoke">
            <content>
            Contains extern methods from "GDI32.dll".
            </content>
            <content>
            Contains extern methods from "gdiplus.dll".
            </content>
            <content>
            Contains extern methods from "SHELL32.dll".
            </content>
            <content>
            Contains extern methods from "USER32.dll".
            </content>
            <content>
            Contains extern methods from "winspool.drv".
            </content>
        </member>
        <member name="M:Windows.Win32.PInvoke.AbortDoc``1(``0)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.AbortDoc(Windows.Win32.Graphics.Gdi.HDC)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.EndDoc``1(``0)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.EndDoc(Windows.Win32.Graphics.Gdi.HDC)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.EndPage``1(``0)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.EndPage(Windows.Win32.Graphics.Gdi.HDC)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.SHGetStockIconInfo(Windows.Win32.UI.Shell.SHSTOCKICONID,Windows.Win32.UI.Shell.SHGSI_FLAGS,Windows.Win32.UI.Shell.SHSTOCKICONINFO*)">
            <summary>Retrieves information about system-defined Shell icons.</summary>
            <param name="siid">
            <para>Type: <b><a href="https://learn.microsoft.com/windows/desktop/api/shellapi/ne-shellapi-shstockiconid">SHSTOCKICONID</a></b> One of the values from the <a href="https://learn.microsoft.com/windows/desktop/api/shellapi/ne-shellapi-shstockiconid">SHSTOCKICONID</a> enumeration that specifies which icon should be retrieved.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/nf-shellapi-shgetstockiconinfo#parameters">Read more on learn.microsoft.com</see>.</para>
            </param>
            <param name="uFlags">
            <para>Type: <b>UINT</b> A combination of zero or more of the following flags that specify which information is requested.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/nf-shellapi-shgetstockiconinfo#parameters">Read more on learn.microsoft.com</see>.</para>
            </param>
            <param name="psii">
            <para>Type: <b><a href="https://learn.microsoft.com/windows/desktop/api/shellapi/ns-shellapi-shstockiconinfo">SHSTOCKICONINFO</a>*</b> A pointer to a <a href="https://learn.microsoft.com/windows/desktop/api/shellapi/ns-shellapi-shstockiconinfo">SHSTOCKICONINFO</a> structure. When this function is called, the <b>cbSize</b> member of this structure needs to be set to the size of the <b>SHSTOCKICONINFO</b> structure. When this function returns, contains a pointer to a <b>SHSTOCKICONINFO</b> structure that contains the requested information.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/nf-shellapi-shgetstockiconinfo#parameters">Read more on learn.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> If this function succeeds, it returns <b>S_OK</b>. Otherwise, it returns an <b>HRESULT</b> error code.</para>
            </returns>
            <remarks><para>If this function returns an icon handle in the <b>hIcon</b> member of the <a href="https://learn.microsoft.com/windows/desktop/api/shellapi/ns-shellapi-shstockiconinfo">SHSTOCKICONINFO</a>  structure pointed to by <i>psii</i>, you are responsible for freeing the icon with <a href="https://learn.microsoft.com/windows/desktop/api/winuser/nf-winuser-destroyicon">DestroyIcon</a> when you no longer need it.</para></remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.StartDoc``1(``0,Windows.Win32.Storage.Xps.DOCINFOW@)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.StartDoc(Windows.Win32.Graphics.Gdi.HDC,Windows.Win32.Storage.Xps.DOCINFOW*)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.StartPage``1(``0)">
            <inheritdoc cref="M:Windows.Win32.PInvoke.StartPage(Windows.Win32.Graphics.Gdi.HDC)"/>
        </member>
        <member name="M:Windows.Win32.PInvoke.AbortDoc(Windows.Win32.Graphics.Gdi.HDC)">
            <summary>The AbortDoc function stops the current print job and erases everything drawn since the last call to the StartDoc function.</summary>
            <param name="hdc">Handle to the device context for the print job.</param>
            <returns>
            <para>If the function succeeds, the return value is greater than zero. If the function fails, the return value is SP_ERROR.</para>
            </returns>
            <remarks>
            <para><div class="alert"><b>Note</b>  This is a blocking or synchronous function and might not return immediately. How quickly this function returns depends on run-time factors such as network status, print server configuration, and printer driver implementation—factors that are difficult to predict when writing an application. Calling this function from a thread that manages interaction with the user interface could make the application appear to be unresponsive.</div> <div> </div> Applications should call the <b>AbortDoc</b> function to stop a print job if an error occurs, or to stop a print job after the user cancels that job. To end a successful print job, an application should call the <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/nf-wingdi-enddoc">EndDoc</a> function. If Print Manager was used to start the print job, calling <b>AbortDoc</b> erases the entire spool job, so that the printer receives nothing. If Print Manager was not used to start the print job, the data may already have been sent to the printer. In this case, the printer driver resets the printer (when possible) and ends the print job.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/wingdi/nf-wingdi-abortdoc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.AddFontResourceEx(Windows.Win32.Foundation.PCWSTR,Windows.Win32.Graphics.Gdi.FONT_RESOURCE_CHARACTERISTICS,System.Void*)">
            <summary>The AddFontResourceEx function adds the font resource from the specified file to the system. Fonts added with the AddFontResourceEx function can be marked as private and not enumerable. (Unicode)</summary>
            <param name="name">
            <para>A pointer to a null-terminated character string that contains a valid font file name. This parameter can specify any of the following files. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/wingdi/nf-wingdi-addfontresourceexw#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="fl"></param>
            <param name="res">Reserved. Must be zero.</param>
            <returns>
            <para>If the function succeeds, the return value specifies the number of fonts added. If the function fails, the return value is zero. No extended error information is available.</para>
            </returns>
            <remarks>
            <para>This function allows a process to use fonts without allowing other processes access to the fonts. When an application no longer needs a font resource it loaded by calling the <b>AddFontResourceEx</b> function, it must remove the resource by calling the <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/nf-wingdi-removefontresourceexa">RemoveFontResourceEx</a> function. This function installs the font only for the current session. When the system restarts, the font will not be present. To have the font installed even after restarting the system, the font must be listed in the registry. A font listed in the registry and installed to a location other than the %windir%\fonts\ folder cannot be modified, deleted, or replaced as long as it is loaded in any session. In order to change one of these fonts, it must first be removed by calling <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/nf-wingdi-removefontresourcea">RemoveFontResource</a>, removed from the font registry (<b>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Fonts</b>), and the system restarted. After restarting the system, the font will no longer be loaded and can be changed.</para>
            <para>> [!NOTE] > The wingdi.h header defines AddFontResourceEx as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see [Conventions for Function Prototypes](/windows/win32/intl/conventions-for-function-prototypes).</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/wingdi/nf-wingdi-addfontresourceexw#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.EndDoc(Windows.Win32.Graphics.Gdi.HDC)">
            <summary>The EndDoc function ends a print job.</summary>
            <param name="hdc">Handle to the device context for the print job.</param>
            <returns>
            <para>If the function succeeds, the return value is greater than zero. If the function fails, the return value is less than or equal to zero.</para>
            </returns>
            <remarks>
            <para><div class="alert"><b>Note</b>  This is a blocking or synchronous function and might not return immediately. How quickly this function returns depends on run-time factors such as network status, print server configuration, and printer driver implementation—factors that are difficult to predict when writing an application. Calling this function from a thread that manages interaction with the user interface could make the application appear to be unresponsive.</div> <div> </div> Applications should call <b>EndDoc</b> immediately after finishing a print job.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/wingdi/nf-wingdi-enddoc#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.EndPage(Windows.Win32.Graphics.Gdi.HDC)">
            <summary>The EndPage function notifies the device that the application has finished writing to a page. This function is typically used to direct the device driver to advance to a new page.</summary>
            <param name="hdc">A handle to the device context for the print job.</param>
            <returns>
            <para>If the function succeeds, the return value is greater than zero. If the function fails, the return value is less than or equal to zero.</para>
            </returns>
            <remarks>
            <para><div class="alert"><b>Note</b>  This is a blocking or synchronous function and might not return immediately. How quickly this function returns depends on run-time factors such as network status, print server configuration, and printer driver implementation—factors that are difficult to predict when writing an application. Calling this function from a thread that manages interaction with the user interface could make the application appear to be unresponsive.</div> <div> </div> Use the <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/nf-wingdi-resetdca">ResetDC</a> function to change the device mode, if necessary, after calling the <b>EndPage</b> function. Note that a call to <b>ResetDC</b> resets all device context attributes back to default values. Neither <b>EndPage</b> nor <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/nf-wingdi-startpage">StartPage</a> resets the device context attributes. Device context attributes remain constant across subsequent pages. You do not need to re-select objects and set up the mapping mode again before printing the next page; however, doing so will produce the same results and reduce code differences between versions of Windows. When a page in a spooled file exceeds approximately 350 MB, it may fail to print and not send an error message. For example, this can occur when printing large EMF files. The page size limit depends on many factors including the amount of virtual memory available, the amount of memory allocated by calling processes, and the amount of fragmentation in the process heap.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/wingdi/nf-wingdi-endpage#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.ExtEscape(Windows.Win32.Graphics.Gdi.HDC,System.Int32,System.Int32,Windows.Win32.Foundation.PCSTR,System.Int32,Windows.Win32.Foundation.PSTR)">
            <summary>The ExtEscape function enables an application to access device capabilities that are not available through GDI.</summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="iEscape">
            <para>The escape function to be performed. It can be one of the following or it can be an application-defined escape function. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/wingdi/nf-wingdi-extescape#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="cjInput">The number of bytes of data pointed to by the <i>lpszInData</i> parameter.</param>
            <param name="lpInData">A pointer to the input structure required for the specified escape. See also Remarks.</param>
            <param name="cjOutput">The number of bytes of data pointed to by the <i>lpszOutData</i> parameter.</param>
            <param name="lpOutData">A pointer to the structure that receives output from this escape. This parameter must not be <b>NULL</b> if <b>ExtEscape</b> is called as a query function. If no data is to be returned in this structure, set <i>cbOutput</i> to 0. See also Remarks.</param>
            <returns>The return value specifies the outcome of the function. It is greater than zero if the function is successful, except for the QUERYESCSUPPORT printer escape, which checks for implementation only. The return value is zero if the escape is not implemented. A return value less than zero indicates an error.</returns>
            <remarks>
            <para><div class="alert"><b>Note</b>  This is a blocking or synchronous function and might not return immediately. How quickly this function returns depends on run-time factors such as network status, print server configuration, and printer driver implementation—factors that are difficult to predict when writing an application. Calling this function from a thread that manages interaction with the user interface could make the application appear to be unresponsive.</div> <div> </div> Use this function to pass a driver-defined escape value to a device. Use the <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/nf-wingdi-escape">Escape</a> function to pass one of the system-defined escape values to a device, unless the escape is one of the defined escapes in <i>nEscape</i>. <b>ExtEscape</b> might not work properly with the system-defined escapes. In particular, escapes in which <i>lpszInData</i> is a pointer to a structure that contains a member that is a pointer will fail. Note, that the behavior described in this article is the expected behavior, but it is up to the driver to comply with this model. The variables referenced by <i>lpszInData</i> and <i>lpszOutData</i> should not be the same or overlap. If the input and the output buffer size variables overlap, they may not contain the correct values after the call returns. For the best results, <i>lpszInData</i> and <i>lpszOutData</i> should refer to different variables. The <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/dd183421(v=vs.85)">CHECKJPEGFORMAT</a> printer escape function determines whether a printer supports printing a JPEG image. Before using the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/dd183421(v=vs.85)">CHECKJPEGFORMAT</a> printer escape function, call the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff686811(v=vs.85)">QUERYESCSUPPORT</a> printer escape function to determine whether the driver supports <b>CHECKJPEGFORMAT</b>. For sample code that demonstrates the use of <b>CHECKJPEGFORMAT</b>, see <a href="https://docs.microsoft.com/windows/desktop/gdi/testing-a-printer-for-jpeg-or-png-support">Testing a Printer for JPEG or PNG Support</a>. The <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/dd183424(v=vs.85)">CHECKPNGFORMAT</a> printer escape function determines whether a printer supports printing a PNG image. Before using the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/dd183421(v=vs.85)">CHECKJPEGFORMAT</a> printer escape function, call the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff686811(v=vs.85)">QUERYESCSUPPORT</a> printer escape function to determine whether the driver supports <b>CHECKJPEGFORMAT</b>. For sample code, see <a href="https://docs.microsoft.com/windows/desktop/gdi/testing-a-printer-for-jpeg-or-png-support">Testing a Printer for JPEG or PNG Support</a>. The <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/dd162495(v=vs.85)">DRAWPATTERNRECT</a> printer escape creates a white, gray scale, or solid black rectangle by using the pattern and rule capabilities of Page Control Language (PCL) on Hewlett-Packard LaserJet or LaserJet-compatible printers. A gray scale is a gray pattern that contains a specific mixture of black and white pixels. An application should use the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ff686811(v=vs.85)">QUERYESCSUPPORT</a> escape to determine whether the printer is capable of drawing patterns and rules before using the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/dd162495(v=vs.85)">DRAWPATTERNRECT</a> escape.</para>
            <para></para>
            <para>This doc was truncated.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/wingdi/nf-wingdi-extescape#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.GetDIBits(Windows.Win32.Graphics.Gdi.HDC,Windows.Win32.Graphics.Gdi.HBITMAP,System.UInt32,System.UInt32,System.Void*,Windows.Win32.Graphics.Gdi.BITMAPINFO*,Windows.Win32.Graphics.Gdi.DIB_USAGE)">
            <summary>The GetDIBits function retrieves the bits of the specified compatible bitmap and copies them into a buffer as a DIB using the specified format.</summary>
            <param name="hdc">A handle to the device context.</param>
            <param name="hbm">A handle to the bitmap. This must be a compatible bitmap (DDB).</param>
            <param name="start">The first scan line to retrieve.</param>
            <param name="cLines">The number of scan lines to retrieve.</param>
            <param name="lpvBits">A pointer to a buffer to receive the bitmap data. If this parameter is <b>NULL</b>, the function passes the dimensions and format of the bitmap to the <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/ns-wingdi-bitmapinfo">BITMAPINFO</a> structure pointed to by the <i>lpbmi</i> parameter.</param>
            <param name="lpbmi">A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/ns-wingdi-bitmapinfo">BITMAPINFO</a> structure that specifies the desired format for the DIB data.</param>
            <param name="usage"></param>
            <returns>
            <para>If the <i>lpvBits</i> parameter is non-<b>NULL</b> and the function succeeds, the return value is the number of scan lines copied from the bitmap. If the <i>lpvBits</i> parameter is <b>NULL</b> and <b>GetDIBits</b> successfully fills the <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/ns-wingdi-bitmapinfo">BITMAPINFO</a> structure, the return value is nonzero. If the function fails, the return value is zero. This function can return the following value. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>If the requested format for the DIB matches its internal format, the RGB values for the bitmap are copied. If the requested format doesn't match the internal format, a color table is synthesized. The following table describes the color table synthesized for each format. </para>
            <para>This doc was truncated.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/wingdi/nf-wingdi-getdibits#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.ResetDCW(Windows.Win32.Graphics.Gdi.HDC,Windows.Win32.Graphics.Gdi.DEVMODEW*)">
            <summary>The ResetDC function updates the specified printer or plotter device context (DC) using the specified information. (Unicode)</summary>
            <param name="hdc">A handle to the DC to update.</param>
            <param name="lpdm">A pointer to a <a href="https://docs.microsoft.com/windows/win32/api/wingdi/ns-wingdi-devmodea">DEVMODE</a> structure containing information about the new DC.</param>
            <returns>
            <para>If the function succeeds, the return value is a handle to the original DC. If the function fails, the return value is <b>NULL</b>.</para>
            </returns>
            <remarks>
            <para>An application will typically use the <b>ResetDC</b> function when a window receives a <a href="https://docs.microsoft.com/windows/desktop/gdi/wm-devmodechange">WM_DEVMODECHANGE</a> message. <b>ResetDC</b> can also be used to change the paper orientation or paper bins while printing a document. The <b>ResetDC</b> function cannot be used to change the driver name, device name, or the output port. When the user changes the port connection or device name, the application must delete the original DC and create a new DC with the new information. An application can pass an information DC to the <b>ResetDC</b> function. In that situation, <b>ResetDC</b> will always return a printer DC. <b>ICM:</b> The color profile of the DC specified by the <i>hdc</i> parameter will be reset based on the information contained in the <b>lpInitData</b> member of the <a href="https://docs.microsoft.com/windows/win32/api/wingdi/ns-wingdi-devmodea">DEVMODE</a> structure.</para>
            <para>> [!NOTE] > The wingdi.h header defines ResetDC as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see [Conventions for Function Prototypes](/windows/win32/intl/conventions-for-function-prototypes).</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/wingdi/nf-wingdi-resetdcw#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.StartDoc(Windows.Win32.Graphics.Gdi.HDC,Windows.Win32.Storage.Xps.DOCINFOW*)">
            <summary>The StartDoc function starts a print job. (Unicode)</summary>
            <param name="hdc">A handle to the device context for the print job.</param>
            <param name="lpdi">A pointer to a <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/ns-wingdi-docinfow">DOCINFO</a> structure containing the name of the document file and the name of the output file.</param>
            <returns>
            <para>If the function succeeds, the return value is greater than zero. This value is the print job identifier for the document. If the function fails, the return value is less than or equal to zero.</para>
            </returns>
            <remarks>
            <para><div class="alert"><b>Note</b>  This is a blocking or synchronous function and might not return immediately. How quickly this function returns depends on run-time factors such as network status, print server configuration, and printer driver implementation—factors that are difficult to predict when writing an application. Calling this function from a thread that manages interaction with the user interface could make the application appear to be unresponsive.</div> <div> </div> Applications should call the <b>StartDoc</b> function immediately before beginning a print job. Using this function ensures that multipage documents are not interspersed with other print jobs. Applications can use the value returned by <b>StartDoc</b> to retrieve or set the priority of a print job. Call the <a href="https://docs.microsoft.com/windows/desktop/printdocs/getjob">GetJob</a> or <a href="https://docs.microsoft.com/windows/desktop/printdocs/setjob">SetJob</a> function and supply this value as one of the required arguments.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/wingdi/nf-wingdi-startdocw#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.StartPage(Windows.Win32.Graphics.Gdi.HDC)">
            <summary>The StartPage function prepares the printer driver to accept data.</summary>
            <param name="hdc">A handle to the device context for the print job.</param>
            <returns>
            <para>If the function succeeds, the return value is greater than zero. If the function fails, the return value is less than or equal to zero.</para>
            </returns>
            <remarks>
            <para><div class="alert"><b>Note</b>  This is a blocking or synchronous function and might not return immediately. How quickly this function returns depends on run-time factors such as network status, print server configuration, and printer driver implementation—factors that are difficult to predict when writing an application. Calling this function from a thread that manages interaction with the user interface could make the application appear to be unresponsive.</div> <div> </div> The system disables the <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/nf-wingdi-resetdca">ResetDC</a> function between calls to the <b>StartPage</b> and <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/nf-wingdi-endpage">EndPage</a> functions. This means that you cannot change the device mode except at page boundaries. After calling <b>EndPage</b>, you can call <b>ResetDC</b> to change the device mode, if necessary. Note that a call to <b>ResetDC</b> resets all device context attributes back to default values. Neither <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/nf-wingdi-endpage">EndPage</a> nor <b>StartPage</b> resets the device context attributes. Device context attributes remain constant across subsequent pages. You do not need to re-select objects and set up the mapping mode again before printing the next page; however, doing so will produce the same results and reduce code differences between versions of Windows.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/wingdi/nf-wingdi-startpage#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.ExtractAssociatedIcon(Windows.Win32.Foundation.HINSTANCE,Windows.Win32.Foundation.PWSTR,System.UInt16*)">
            <summary>Gets a handle to an icon stored as a resource in a file or an icon stored in a file's associated executable file. (Unicode)</summary>
            <param name="hInst">
            <para>Type: <b>HINSTANCE</b> A handle to the instance of the calling application.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/nf-shellapi-extractassociatediconw#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pszIconPath">
            <para>Type: <b>LPTSTR</b> Pointer to a string that, on entry, specifies the full path and file name of the file that contains the icon. The function extracts the icon handle from that file, or from an executable file associated with that file.</para>
            <para>When this function returns, if the icon handle was obtained from an executable file (either an executable file pointed to by <i>lpIconPath</i> or an associated executable file) the function stores the full path and file name of that executable in the buffer pointed to by this parameter.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/nf-shellapi-extractassociatediconw#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="piIcon">
            <para>Type: <b>LPWORD</b> Pointer to a <b>WORD</b> value that, on entry, specifies the index of the icon whose handle is to be obtained.</para>
            <para>When the function returns, if the icon handle was obtained from an executable file (either an executable file pointed to by <i>lpIconPath</i> or an associated executable file), this value points to the icon's index in that file.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/nf-shellapi-extractassociatediconw#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HICON</b> If the function succeeds, the return value is an icon handle. If the icon is extracted from an associated executable file, the function stores the full path and file name of the executable file in the string pointed to by <i>lpIconPath</i>, and stores the icon's identifier in the <b>WORD</b> pointed to by <i>lpiIcon</i>.</para>
            <para>If the function fails, the return value is <b>NULL</b>.</para>
            </returns>
            <remarks>
            <para>When it is no longer needed, the caller is responsible for freeing the icon handle returned by <b>ExtractAssociatedIcon</b> by calling the <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-destroyicon">DestroyIcon</a> function. The <b>ExtractAssociatedIcon</b> function first looks for the indexed icon in the file specified by <i>lpIconPath</i>. If the function cannot obtain the icon handle from that file, and the file has an associated executable file, it looks in that executable file for an icon. Associations with executable files are based on file name extensions and are stored in the per-user part of the registry.</para>
            <para>> [!NOTE] > The shellapi.h header defines ExtractAssociatedIcon as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see [Conventions for Function Prototypes](/windows/win32/intl/conventions-for-function-prototypes).</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/nf-shellapi-extractassociatediconw#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.SHDefExtractIcon(Windows.Win32.Foundation.PCWSTR,System.Int32,System.UInt32,Windows.Win32.UI.WindowsAndMessaging.HICON*,Windows.Win32.UI.WindowsAndMessaging.HICON*,System.UInt32)">
            <summary>Provides a default handler to extract an icon from a file. (Unicode)</summary>
            <param name="pszIconFile">
            <para>Type: <b>LPCTSTR</b> A pointer to a null-terminated buffer that contains the path and name of the file from which the icon is extracted.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shlobj_core/nf-shlobj_core-shdefextracticonw#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="iIndex">
            <para>Type: <b>int</b> The location of the icon within the file named in <i>pszIconFile</i>. If this is a positive number, it refers to the zero-based position of the icon in the file. For instance, 0 refers to the 1st icon in the resource file and 2 refers to the 3rd. If this is a negative number, it refers to the icon's resource ID.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shlobj_core/nf-shlobj_core-shdefextracticonw#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="uFlags">
            <para>Type: <b>UINT</b> A flag that controls the icon extraction.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shlobj_core/nf-shlobj_core-shdefextracticonw#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="phiconLarge">
            <para>Type: <b>HICON*</b> A pointer to an HICON that, when this function returns successfully, receives the handle of the large version of the icon specified in the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ms632659(v=vs.85)">LOWORD</a> of <i>nIconSize</i>. This value can be <b>NULL</b>.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shlobj_core/nf-shlobj_core-shdefextracticonw#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="phiconSmall">
            <para>Type: <b>HICON*</b> A pointer to an HICON that, when this function returns successfully, receives the handle of the small version of the icon specified in the <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ms632657(v=vs.85)">HIWORD</a> of <i>nIconSize</i>.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shlobj_core/nf-shlobj_core-shdefextracticonw#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="nIconSize">
            <para>Type: <b>UINT</b> A value that contains the large icon size in its <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ms632659(v=vs.85)">LOWORD</a> and the small icon size in its <a href="https://docs.microsoft.com/previous-versions/windows/desktop/legacy/ms632657(v=vs.85)">HIWORD</a>. Size is measured in pixels. Pass 0 to specify default large and small sizes.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shlobj_core/nf-shlobj_core-shdefextracticonw#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>Type: <b>HRESULT</b> This function can return one of these values. </para>
            <para>This doc was truncated.</para>
            </returns>
            <remarks>
            <para>It is the responsibility of the caller to free the icon resources created through this function when they are no longer needed. This can be done through the <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-destroyicon">DestroyIcon</a> function.</para>
            <para>> [!NOTE] > The shlobj_core.h header defines SHDefExtractIcon as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see [Conventions for Function Prototypes](/windows/win32/intl/conventions-for-function-prototypes).</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shlobj_core/nf-shlobj_core-shdefextracticonw#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.CreateIconFromResourceEx(System.Byte*,System.UInt32,Windows.Win32.Foundation.BOOL,System.UInt32,System.Int32,System.Int32,Windows.Win32.UI.WindowsAndMessaging.IMAGE_FLAGS)">
            <summary>Creates an icon or cursor from resource bits describing the icon. (CreateIconFromResourceEx)</summary>
            <param name="presbits">
            <para>Type: <b>PBYTE</b> The icon or cursor resource bits. These bits are typically loaded by calls to the <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-lookupiconidfromdirectoryex">LookupIconIdFromDirectoryEx</a> and <a href="https://docs.microsoft.com/windows/desktop/api/libloaderapi/nf-libloaderapi-loadresource">LoadResource</a> functions.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/winuser/nf-winuser-createiconfromresourceex#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="dwResSize">
            <para>Type: <b>DWORD</b> The size, in bytes, of the set of bits pointed to by the <i>pbIconBits</i> parameter.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/winuser/nf-winuser-createiconfromresourceex#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="fIcon">
            <para>Type: <b>BOOL</b> Indicates whether an icon or a cursor is to be created. If this parameter is <b>TRUE</b>, an icon is to be created. If it is <b>FALSE</b>, a cursor is to be created.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/winuser/nf-winuser-createiconfromresourceex#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="dwVer">
            <para>Type: <b>DWORD</b> The version number of the icon or cursor format for the resource bits pointed to by the <i>pbIconBits</i> parameter. The value must be greater than or equal to 0x00020000 and less than or equal to 0x00030000. This parameter is generally set to 0x00030000.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/winuser/nf-winuser-createiconfromresourceex#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="cxDesired">
            <para>Type: <b>int</b> The desired width, in pixels, of the icon or cursor. If this parameter is zero, the function uses the <b>SM_CXICON</b> or <b>SM_CXCURSOR</b> system metric value to set the width.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/winuser/nf-winuser-createiconfromresourceex#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="cyDesired">
            <para>Type: <b>int</b> The desired height, in pixels, of the icon or cursor. If this parameter is zero, the function uses the <b>SM_CYICON</b> or <b>SM_CYCURSOR</b> system metric value to set the height.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/winuser/nf-winuser-createiconfromresourceex#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Flags">Type: <b>UINT</b></param>
            <returns>
            <para>Type: <b>HICON</b> If the function succeeds, the return value is a handle to the icon or cursor. If the function fails, the return value is <b>NULL</b>. To get extended error information, call <a href="https://docs.microsoft.com/windows/desktop/api/errhandlingapi/nf-errhandlingapi-getlasterror">GetLastError</a>.</para>
            </returns>
            <remarks>
            <para>The <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-createiconfromresource">CreateIconFromResource</a>, <b>CreateIconFromResourceEx</b>, <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-createiconindirect">CreateIconIndirect</a>, <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-geticoninfo">GetIconInfo</a>, and <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-lookupiconidfromdirectoryex">LookupIconIdFromDirectoryEx</a> functions allow shell applications and icon browsers to examine and use resources throughout the system. You should call <a href="https://docs.microsoft.com/windows/desktop/api/winuser/nf-winuser-destroyicon">DestroyIcon</a> for icons created with <b>CreateIconFromResourceEx</b>.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/winuser/nf-winuser-createiconfromresourceex#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.DeviceCapabilities(Windows.Win32.Foundation.PCWSTR,Windows.Win32.Foundation.PCWSTR,Windows.Win32.Storage.Xps.PRINTER_DEVICE_CAPABILITIES,Windows.Win32.Foundation.PWSTR,Windows.Win32.Graphics.Gdi.DEVMODEW*)">
            <summary>The DeviceCapabilities function retrieves the capabilities of a printer driver. (Unicode)</summary>
            <param name="pDevice">A pointer to a null-terminated string that contains the name of the printer. Note that this is the name of the printer, not of the printer driver.</param>
            <param name="pPort">A pointer to a null-terminated string that contains the name of the port to which the device is connected, such as LPT1.</param>
            <param name="fwCapability"></param>
            <param name="pOutput">A pointer to an array. The format of the array depends on the setting of the <i>fwCapability</i> parameter. See each capability above to find out what is returned if <i>pOutput</i> is <b>NULL</b>.</param>
            <param name="pDevMode">A pointer to a <a href="https://docs.microsoft.com/windows/win32/api/wingdi/ns-wingdi-devmodea">DEVMODE</a> structure. If this parameter is <b>NULL</b>, <b>DeviceCapabilities</b> retrieves the current default initialization values for the specified printer driver. Otherwise, the function retrieves the values contained in the structure to which <i>pDevMode</i> points.</param>
            <returns>
            <para>If the function succeeds, the return value depends on the setting of the <i>fwCapability</i> parameter. A return value of zero generally indicates that, while the function completed successfully, there was some type of failure, such as a capability that is not supported. For more details, see the descriptions for the <i>fwCapability</i> values. If the function returns -1, this may mean either that the capability is not supported or there was a general function failure.</para>
            </returns>
            <remarks>
            <para><div class="alert"><b>Note</b>  This is a blocking or synchronous function and might not return immediately. How quickly this function returns depends on run-time factors such as network status, print server configuration, and printer driver implementation—factors that are difficult to predict when writing an application. Calling this function from a thread that manages interaction with the user interface could make the application appear to be unresponsive.</div> <div> </div> The <a href="https://docs.microsoft.com/windows/win32/api/wingdi/ns-wingdi-devmodea">DEVMODE</a> structure pointed to by the <i>pDevMode</i> parameter may be obtained by calling the <a href="https://docs.microsoft.com/windows/desktop/printdocs/documentproperties">DocumentProperties</a> function. If a printer driver supports custom device capabilities, the driver must call the <a href="https://docs.microsoft.com/windows/desktop/printdocs/setprinterdata">SetPrinterData</a> function for each custom capability. The <b>SetPrinterData</b> function adds the appropriate printer data to the print system, which enables 32-bit applications to access the custom capabilities on 64-bit Windows installations. For each custom capability, you must first add printer data that describes the type of the capability. To do this, when you call <b>SetPrinterData</b>, set the <i>pValueName</i> string to <b>CustomDeviceCapabilityType_Xxx</b>, where "Xxx" is the hexadecimal representation of the capability. For example, you might have "CustomDeviceCapabilityType_1234". The registry data that you set must be of the <b>REG_DWORD</b> type, and you must set its value to one of the following: </para>
            <para>This doc was truncated.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/wingdi/nf-wingdi-devicecapabilitiesw#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.DocumentProperties(Windows.Win32.Foundation.HWND,Windows.Win32.Foundation.HANDLE,Windows.Win32.Foundation.PWSTR,Windows.Win32.Graphics.Gdi.DEVMODEW*,Windows.Win32.Graphics.Gdi.DEVMODEW*,System.UInt32)">
            <summary>The DocumentProperties function retrieves or modifies printer initialization information or displays a printer-configuration property sheet for the specified printer.</summary>
            <param name="hWnd">A handle to the parent window of the printer-configuration property sheet.</param>
            <param name="hPrinter">A handle to a printer object. Use the [**OpenPrinter**](openprinter.md) or [**AddPrinter**](addprinter.md) function to retrieve a printer handle.</param>
            <param name="pDeviceName">A pointer to a null-terminated string that specifies the name of the device for which the printer-configuration property sheet is displayed.</param>
            <param name="pDevModeOutput">A pointer to a [**DEVMODE**](/windows/win32/api/wingdi/ns-wingdi-devmodea) structure that receives the printer configuration data specified by the user.</param>
            <param name="pDevModeInput">
            <para>A pointer to a [**DEVMODE**](/windows/win32/api/wingdi/ns-wingdi-devmodea) structure that the operating system uses to initialize the property sheet controls. This parameter is only used if the **DM\_IN\_BUFFER** flag is set in the *fMode* parameter. If **DM\_IN\_BUFFER** is not set, the operating system uses the printer's default [**DEVMODE**](/windows/win32/api/wingdi/ns-wingdi-devmodea).</para>
            <para><see href="https://learn.microsoft.com/windows/win32/printdocs/documentproperties#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="fMode">
            <para>The operations the function performs. If this parameter is zero, the **DocumentProperties** function returns the number of bytes required by the printer driver's [**DEVMODE**](/windows/win32/api/wingdi/ns-wingdi-devmodea) data structure. Otherwise, use one or more of the following constants to construct a value for this parameter; note, however, that in order to change the print settings, an application must specify at least one input value and one output value.</para>
            <para>| Value                                                                                                                                                          | Meaning| |----------------------------------------------------------------------------------------------------------------------------------------------------------------|| | <span id="DM_IN_BUFFER"></span><span id="dm_in_buffer"></span><dl> <dt>**DM\_IN\_BUFFER**</dt> </dl>    | Input value. Before prompting, copying, or updating, the function merges the printer driver's current print settings with the settings in the [**DEVMODE**](/windows/win32/api/wingdi/ns-wingdi-devmodea) structure specified by the *pDevModeInput* parameter. The function updates the structure only for those members specified by the **DEVMODE** structure's **dmFields** member. This value is also defined as **DM\_MODIFY**. In cases of conflict during the merge, the settings in the **DEVMODE** structure specified by *pDevModeInput* override the printer driver's current print settings.<br/> | | <span id="DM_IN_PROMPT"></span><span id="dm_in_prompt"></span><dl> <dt>**DM\_IN\_PROMPT**</dt> </dl>    | Input value. The function presents the printer driver's Print Setup property sheet and then changes the settings in the printer's [**DEVMODE**](/windows/win32/api/wingdi/ns-wingdi-devmodea) data structure to those values specified by the user. This value is also defined as **DM\_PROMPT**.<br/>                                                                                                                                                                                                                                                                                                         | | <span id="DM_OUT_BUFFER"></span><span id="dm_out_buffer"></span><dl> <dt>**DM\_OUT\_BUFFER**</dt> </dl> | Output value. The function writes the printer driver's current print settings, including private data, to the [**DEVMODE**](/windows/win32/api/wingdi/ns-wingdi-devmodea) data structure specified by the *pDevModeOutput* parameter. The caller must allocate a buffer sufficiently large to contain the information. If the bit **DM\_OUT\_BUFFER** sets is clear, the *pDevModeOutput* parameter can be **NULL**. This value is also defined as **DM\_COPY**.<br/>                                                                                                                                          |</para>
            <para><see href="https://learn.microsoft.com/windows/win32/printdocs/documentproperties#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <returns>
            <para>If the *fMode* parameter is zero, the return value is the size of the buffer required to contain the printer driver initialization data. Note that this buffer can be larger than a [**DEVMODE**](/windows/win32/api/wingdi/ns-wingdi-devmodea) structure if the printer driver appends private data to the structure. If the function displays the property sheet, the return value is either **IDOK** or **IDCANCEL**, depending on which button the user selects. If the function does not display the property sheet and is successful, the return value is **IDOK**. If the function fails, the return value is less than zero.</para>
            </returns>
            <remarks>
            <para>> [!Note] > This is a blocking or synchronous function and might not return immediately. How quickly this function returns depends on run-time factors such as network status, print server configuration, and printer driver implementation factors that are difficult to predict when writing an application. Calling this function from a thread that manages interaction with the user interface could make the application appear to be unresponsive.</para>
            <para>The string pointed to by the *pDeviceName* parameter can be obtained by calling the [**GetPrinter**](getprinter.md) function. The [**DEVMODE**](/windows/win32/api/wingdi/ns-wingdi-devmodea) structure actually used by a printer driver contains the device-independent part (as defined above) followed by a driver-specific part that varies in size and content with each driver and driver version. Because of this driver dependence, it is very important for applications to query the driver for the correct size of the **DEVMODE** structure before allocating a buffer for it. **To make changes to print settings that are local to an application, an application should follow these steps:** 1.  Get the number of bytes required for the full [**DEVMODE**](/windows/win32/api/wingdi/ns-wingdi-devmodea) structure by calling **DocumentProperties** and specifying zero in the *fMode* parameter. 2.  Allocate memory for the full [**DEVMODE**](/windows/win32/api/wingdi/ns-wingdi-devmodea) structure. 3.  Get the current printer settings by calling **DocumentProperties**. Pass a pointer to the [**DEVMODE**](/windows/win32/api/wingdi/ns-wingdi-devmodea) structure allocated in Step 2 as the *pDevModeOutput* parameter and specify the **DM\_OUT\_BUFFER** value. 4.  Modify the appropriate members of the returned [**DEVMODE**](/windows/win32/api/wingdi/ns-wingdi-devmodea) structure and indicate which members were changed by setting the corresponding bits in the **dmFields** member of the **DEVMODE**. 5.  Call **DocumentProperties** and pass the modified [**DEVMODE**](/windows/win32/api/wingdi/ns-wingdi-devmodea) structure back as both the *pDevModeInput* and *pDevModeOutput* parameters and specify both the **DM\_IN\_BUFFER** and **DM\_OUT\_BUFFER** values (which are combined using the OR operator).The **DEVMODE** structure returned by the third call to **DocumentProperties** can be used as an argument in a call to the [**CreateDC**](/windows/desktop/api/wingdi/nf-wingdi-createdca) function. To create a handle to a printer-device context using the current printer settings, you only need to call **DocumentProperties** twice, as described above. The first call gets the size of the full [**DEVMODE**](/windows/win32/api/wingdi/ns-wingdi-devmodea) and the second call initializes the **DEVMODE** with the current printer settings. Pass the initialized **DEVMODE** to [**CreateDC**](/windows/desktop/api/wingdi/nf-wingdi-createdca) to obtain the handle to the printer device context.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/printdocs/documentproperties#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="M:Windows.Win32.PInvoke.EnumPrinters(System.UInt32,Windows.Win32.Foundation.PWSTR,System.UInt32,System.Byte*,System.UInt32,System.UInt32*,System.UInt32*)">
            <summary>The EnumPrinters function enumerates available printers, print servers, domains, or print providers.</summary>
            <param name="Flags">
            <para>The types of print objects that the function should enumerate. This value can be one or more of the following values.</para>
            <para>| Value                                                                                                                                                                                               | Meaning                                                                                                                                                                                                                                                | |-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| | <span id="PRINTER_ENUM_LOCAL"></span><span id="printer_enum_local"></span><dl> <dt>**PRINTER\_ENUM\_LOCAL**</dt> </dl>                       | If the PRINTER\_ENUM\_NAME flag is not also passed, the function ignores the *Name* parameter, and enumerates the locally installed printers. If PRINTER\_ENUM\_NAME is also passed, the function enumerates the local printers on *Name*. <br/> | | <span id="PRINTER_ENUM_NAME"></span><span id="printer_enum_name"></span><dl> <dt>**PRINTER\_ENUM\_NAME**</dt> </dl>                          | The function enumerates the printer identified by *Name*. This can be a server, a domain, or a print provider. If *Name* is **NULL**, the function enumerates available print providers.<br/>                                                    | | <span id="PRINTER_ENUM_SHARED"></span><span id="printer_enum_shared"></span><dl> <dt>**PRINTER\_ENUM\_SHARED**</dt> </dl>                    | The function enumerates printers that have the shared attribute. Cannot be used in isolation; use an OR operation to combine with another PRINTER\_ENUM type.<br/>                                                                               | | <span id="PRINTER_ENUM_CONNECTIONS"></span><span id="printer_enum_connections"></span><dl> <dt>**PRINTER\_ENUM\_CONNECTIONS**</dt> </dl>     | The function enumerates the list of printers to which the user has made previous connections.<br/>                                                                                                                                               | | <span id="PRINTER_ENUM_NETWORK"></span><span id="printer_enum_network"></span><dl> <dt>**PRINTER\_ENUM\_NETWORK**</dt> </dl>                 | The function enumerates network printers in the computer's domain. This value is valid only if *Level* is 1.<br/>                                                                                                                                | | <span id="PRINTER_ENUM_REMOTE"></span><span id="printer_enum_remote"></span><dl> <dt>**PRINTER\_ENUM\_REMOTE**</dt> </dl>                    | The function enumerates network printers and print servers in the computer's domain. This value is valid only if *Level* is 1.<br/>                                                                                                              | | <span id="PRINTER_ENUM_CATEGORY_3D"></span><span id="printer_enum_category_3d"></span><dl> <dt>**PRINTER\_ENUM\_CATEGORY\_3D**</dt> </dl>    | The function enumerates only 3D printers.<br/>                                                                                                                                                                                                   | | <span id="PRINTER_ENUM_CATEGORY_ALL"></span><span id="printer_enum_category_all"></span><dl> <dt>**PRINTER\_ENUM\_CATEGORY\_ALL**</dt> </dl> | The function enumerates all print devices, including 3D printers.<br/>                                                                                                                                                                           |</para>
            <para>If *Level* is 4, you can only use the PRINTER\_ENUM\_CONNECTIONS and PRINTER\_ENUM\_LOCAL constants. > [!Note] > 3D print devices are not enumerated by default. You must include both **PRINTER\_ENUM\_CATEGORY\_3D** and **PRINTER\_ENUM\_LOCAL** to enumerate only 3D printers. To include 3D printers, along with all other local printers, use **PRINTER\_ENUM\_CATEGORY\_ALL** and **PRINTER\_ENUM\_LOCAL**.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/printdocs/enumprinters#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Name">
            <para>If *Level* is 1, *Flags* contains PRINTER\_ENUM\_NAME, and *Name* is non-**NULL**, then *Name* is a pointer to a null-terminated string that specifies the name of the object to enumerate. This string can be the name of a server, a domain, or a print provider. If *Level* is 1, *Flags* contains PRINTER\_ENUM\_NAME, and *Name* is **NULL**, then the function enumerates the available print providers. If *Level* is 1, *Flags* contains PRINTER\_ENUM\_REMOTE, and *Name* is **NULL**, then the function enumerates the printers in the user's domain. If *Level* is 2 or 5,*Name* is a pointer to a null-terminated string that specifies the name of a server whose printers are to be enumerated. If this string is **NULL**, then the function enumerates the printers installed on the local computer. If *Level* is 4, *Name* should be **NULL**. The function always queries on the local computer. When *Name* is **NULL**, setting *Flags* to PRINTER\_ENUM\_LOCAL \| PRINTER\_ENUM\_CONNECTIONS enumerates printers that are installed on the local machine. These printers include those that are physically attached to the local machine as well as remote printers to which it has a network connection. When *Name* is not **NULL**, setting *Flags* to PRINTER\_ENUM\_LOCAL \| PRINTER\_ENUM\_NAME enumerates the local printers that are installed on the server *Name*.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/printdocs/enumprinters#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="Level">
            <para>The type of data structures pointed to by *pPrinterEnum*. Valid values are 1, 2, 4, and 5, which correspond to the [**PRINTER\_INFO\_1**](printer-info-1.md), [**PRINTER\_INFO\_2**](printer-info-2.md) , [**PRINTER\_INFO\_4**](printer-info-4.md), and [**PRINTER\_INFO\_5**](printer-info-5.md) data structures. This value can be 1, 2, 4, or 5.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/printdocs/enumprinters#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="pPrinterEnum">
            <para>A pointer to a buffer that receives an array of [**PRINTER\_INFO\_1**](printer-info-1.md), [**PRINTER\_INFO\_2**](printer-info-2.md), [**PRINTER\_INFO\_4**](printer-info-4.md), or [**PRINTER\_INFO\_5**](printer-info-5.md) structures. Each structure contains data that describes an available print object. If *Level* is 1, the array contains [**PRINTER\_INFO\_1**](printer-info-1.md) structures. If *Level* is 2, the array contains [**PRINTER\_INFO\_2**](printer-info-2.md) structures. If *Level* is 4, the array contains [**PRINTER\_INFO\_4**](printer-info-4.md) structures. If *Level* is 5, the array contains [**PRINTER\_INFO\_5**](printer-info-5.md) structures. The buffer must be large enough to receive the array of data structures and any strings or other data to which the structure members point. If the buffer is too small, the *pcbNeeded* parameter returns the required buffer size.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/printdocs/enumprinters#parameters">Read more on docs.microsoft.com</see>.</para>
            </param>
            <param name="cbBuf">The size, in bytes, of the buffer pointed to by *pPrinterEnum*.</param>
            <param name="pcbNeeded">A pointer to a value that receives the number of bytes copied if the function succeeds or the number of bytes required if *cbBuf* is too small.</param>
            <param name="pcReturned">A pointer to a value that receives the number of [**PRINTER\_INFO\_1**](printer-info-1.md), [**PRINTER\_INFO\_2**](printer-info-2.md) , [**PRINTER\_INFO\_4**](printer-info-4.md), or [**PRINTER\_INFO\_5**](printer-info-5.md) structures that the function returns in the array to which *pPrinterEnum* points.</param>
            <returns>
            <para>If the function succeeds, the return value is a nonzero value. If the function fails, the return value is zero.</para>
            </returns>
            <remarks>
            <para>Do not call this method in [**DllMain**](/windows/desktop/Dlls/dllmain). > [!Note] > This is a blocking or synchronous function and might not return immediately. How quickly this function returns depends on run-time factors such as network status, print server configuration, and printer driver implementation factors that are difficult to predict when writing an application. Calling this function from a thread that manages interaction with the user interface could make the application appear to be unresponsive.</para>
            <para>If **EnumPrinters** returns a [**PRINTER\_INFO\_1**](printer-info-1.md) structure in which PRINTER\_ENUM\_CONTAINER is specified, this indicates that there is a hierarchy of printer objects. An application can enumerate the hierarchy by calling **EnumPrinters** again, setting *Name* to the value of the **PRINTER\_INFO\_1** structure's **pName** member. The **EnumPrinters** function does not retrieve security information. If [**PRINTER\_INFO\_2**](printer-info-2.md) structures are returned in the array pointed to by *pPrinterEnum*, their *pSecurityDescriptor* members will be set to **NULL**. To get information about the default printer, call [**GetDefaultPrinter**](getdefaultprinter.md). The [**PRINTER\_INFO\_4**](printer-info-4.md) structure provides an easy and extremely fast way to retrieve the names of the printers installed on a local machine, as well as the remote connections that a user has established. When **EnumPrinters** is called with a **PRINTER\_INFO\_4** data structure, that function queries the registry for the specified information, then returns immediately. This differs from the behavior of **EnumPrinters** when called with other levels of **PRINTER\_INFO\_\*** data structures. In particular, when **EnumPrinters** is called with a level 2 ([**PRINTER\_INFO\_2**](printer-info-2.md)) data structure, it performs an [**OpenPrinter**](openprinter.md) call on each remote connection. If a remote connection is down, or the remote server no longer exists, or the remote printer no longer exists, the function must wait for RPC to time out and consequently fail the **OpenPrinter** call. This can take a while. Passing a **PRINTER\_INFO\_4** structure lets an application retrieve a bare minimum of required information; if more detailed information is desired, a subsequent **EnumPrinters** level 2 call can be made. **Windows Vista:** The printer data returned by **EnumPrinters** is retrieved from a local cache when the value of *Level* is 4. The following table shows the **EnumPrinters** output for various *Flags* values when the *Level* parameter is set to 1. In the *Name* parameter column of the table, you should substitute an appropriate name for Print Provider, Domain, and Machine. For example, for "Print Provider," you could use the name of the network print provider or the name of the local print provider. To retrieve print provider names, call **EnumPrinters** with *Name* set to **NULL**.</para>
            <para>| *Flags* parameter                                  | *Name* parameter                            | Result                                                                                            | |----------------------------------------------------|---------------------------------------------|---------------------------------------------------------------------------------------------------| | PRINTER\_ENUM\_LOCAL (and not PRINTER\_ENUM\_NAME) | The *Name* parameter is ignored.<br/> | All local printers.<br/>                                                                    | | PRINTER\_ENUM\_NAME                                | "Print Provider"<br/>                 | All domain names<br/>                                                                       | | PRINTER\_ENUM\_NAME                                | "Print Provider!Domain"<br/>          | All printers and print servers in the computer's domain<br/>                                | | PRINTER\_ENUM\_NAME                                | "Print Provider!!\\\\Machine"<br/>    | All printers shared at \\\\Machine<br/>                                                     | | PRINTER\_ENUM\_NAME                                | An empty string, ""<br/>              | All local printers.<br/>                                                                    | | PRINTER\_ENUM\_NAME                                | **NULL**<br/>                         | All print providers in the computer's domain<br/>                                           | | PRINTER\_ENUM\_CONNECTIONS                         | The *Name* parameter is ignored.<br/> | All connected remote printers<br/>                                                          | | PRINTER\_ENUM\_NETWORK                             | The *Name* parameter is ignored.<br/> | All printers in the computer's domain<br/>                                                  | | PRINTER\_ENUM\_REMOTE                              | An empty string, ""<br/>              | All printers and print servers in the computer's domain<br/>                                | | PRINTER\_ENUM\_REMOTE                              | "Print Provider"<br/>                 | Same as PRINTER\_ENUM\_NAME<br/>                                                            | | PRINTER\_ENUM\_REMOTE                              | "Print Provider!Domain"<br/>          | All printers and print servers in computer's domain, regardless of *Domain* specified.<br/> | | PRINTER\_ENUM\_CATEGORY\_3D                        | The *Name* parameter is ignored.<br/> | Only 3D printers are enumerated.<br/>                                                       | | PRINTER\_ENUM\_CATEGORY\_ALL                       | The *Name* parameter is ignored.<br/> | 3D printers are enumerated, along with all other printers.<br/>                             |</para>
            <para><see href="https://learn.microsoft.com/windows/win32/printdocs/enumprinters#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="T:Windows.Win32.UI.Shell.SHSTOCKICONID">
            <summary>Used by SHGetStockIconInfo to identify which stock system icon to retrieve.</summary>
            <remarks>SIID_INVALID, with a value of -1, indicates an invalid **SHSTOCKICONID** value.</remarks>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DOCNOASSOC">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DOCNOASSOC.png"::: Document of a type with no associated application.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DOCASSOC">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DOCASSOC.jpg"::: Document of a type with an associated application.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_APPLICATION">
            <summary>
            <para>:::image type="icon" source="./images/SIID_APPLICATION.jpg"::: Generic application with no custom icon.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_FOLDER">
            <summary>
            <para>:::image type="icon" source="./images/SIID_FOLDER.jpg"::: Folder (generic, unspecified state).</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_FOLDEROPEN">
            <summary>
            <para>:::image type="icon" source="./images/SIID_FOLDEROPEN.jpg"::: Folder (open).</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DRIVE525">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DRIVE525.jpg"::: 5.25-inch disk drive.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DRIVE35">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DRIVE35.jpg"::: 3.5-inch disk drive.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DRIVEREMOVE">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DRIVEREMOVE.png"::: Removable drive.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DRIVEFIXED">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DRIVEFIXED.jpg"::: Fixed drive (hard disk).</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DRIVENET">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DRIVENET.jpg"::: Network drive (connected).</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DRIVENETDISABLED">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DRIVENETDISABLED.jpg"::: Network drive (disconnected).</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DRIVECD">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DRIVECD.jpg"::: CD drive.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DRIVERAM">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DRIVERAM.jpg"::: RAM disk drive.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_WORLD">
            <summary>
            <para>:::image type="icon" source="./images/SIID_WORLD.jpg"::: The entire network.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_SERVER">
            <summary>
            <para>:::image type="icon" source="./images/SIID_SERVER.jpg"::: A computer on the network.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_PRINTER">
            <summary>
            <para>:::image type="icon" source="./images/SIID_PRINTER.jpg"::: A local printer or print destination.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MYNETWORK">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MYNETWORK.jpg"::: The **Network** virtual folder (<a href="https://docs.microsoft.com/windows/desktop/shell/knownfolderid">FOLDERID_NetworkFolder</a>/<a href="https://docs.microsoft.com/windows/desktop/shell/csidl">CSIDL_NETWORK</a>).</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_FIND">
            <summary>
            <para>:::image type="icon" source="./images/SIID_FIND.jpg"::: The **Search** feature.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_HELP">
            <summary>
            <para>:::image type="icon" source="./images/SIID_HELP.jpg"::: The **Help and Support** feature.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_SHARE">
            <summary>
            <para>:::image type="icon" source="./images/SIID_SHARE.jpg"::: Overlay for a shared item.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_LINK">
            <summary>
            <para>:::image type="icon" source="./images/SIID_LINK.jpg"::: Overlay for a shortcut.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_SLOWFILE">
            <summary>
            <para>:::image type="icon" source="./images/SIID_SLOWFILE.png"::: Overlay for items that are expected to be slow to access.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_RECYCLER">
            <summary>
            <para>:::image type="icon" source="./images/SIID_RECYCLER.jpg"::: The Recycle Bin (empty).</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_RECYCLERFULL">
            <summary>
            <para>:::image type="icon" source="./images/SIID_RECYCLERFULL.jpg"::: The Recycle Bin (not empty).</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIACDAUDIO">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIACDAUDIO.jpg"::: Audio CD media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_LOCK">
            <summary>
            <para>:::image type="icon" source="./images/SIID_LOCK.jpg"::: Security lock.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_AUTOLIST">
            <summary>
            <para>:::image type="icon" source="./images/SIID_AUTOLIST.jpg"::: A virtual folder that contains the results of a search.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_PRINTERNET">
            <summary>
            <para>:::image type="icon" source="./images/SIID_PRINTERNET.jpg"::: A network printer.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_SERVERSHARE">
            <summary>
            <para>:::image type="icon" source="./images/SIID_SERVERSHARE.jpg"::: A server shared on a network.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_PRINTERFAX">
            <summary>
            <para>:::image type="icon" source="./images/SIID_PRINTERFAX.jpg"::: A local fax printer.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_PRINTERFAXNET">
            <summary>
            <para>:::image type="icon" source="./images/SIID_PRINTERFAXNET.jpg"::: A network fax printer.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_PRINTERFILE">
            <summary>
            <para>:::image type="icon" source="./images/SIID_PRINTERFILE.jpg"::: A file that receives the output of a **Print to file** operation.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_STACK">
            <summary>
            <para>:::image type="icon" source="./images/SIID_STACK.jpg"::: A category that results from a **Stack by** command to organize the contents of a folder.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIASVCD">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIASVCD.jpg"::: Super Video CD (SVCD) media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_STUFFEDFOLDER">
            <summary>
            <para>:::image type="icon" source="./images/SIID_STUFFEDFOLDER.jpg"::: A folder that contains only subfolders as child items.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DRIVEUNKNOWN">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DRIVEUNKNOWN.jpg"::: Unknown drive type.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DRIVEDVD">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DRIVEDVD.jpg"::: DVD drive.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIADVD">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIADVD.jpg"::: DVD media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIADVDRAM">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIADVDRAM.jpg"::: DVD-RAM media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIADVDRW">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIADVDRW.jpg"::: DVD-RW media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIADVDR">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIADVDR.jpg"::: DVD-R media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIADVDROM">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIADVDROM.jpg"::: DVD-ROM media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIACDAUDIOPLUS">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIACDAUDIOPLUS.jpg"::: CD+ (enhanced audio CD) media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIACDRW">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIACDRW.jpg"::: CD-RW media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIACDR">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIACDR.jpg"::: CD-R media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIACDBURN">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIACDBURN.jpg"::: A writable CD in the process of being burned.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIABLANKCD">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIABLANKCD.jpg"::: Blank writable CD media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIACDROM">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIACDROM.jpg"::: CD-ROM media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_AUDIOFILES">
            <summary>
            <para>:::image type="icon" source="./images/SIID_AUDIOFILES.jpg"::: An audio file.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_IMAGEFILES">
            <summary>
            <para>:::image type="icon" source="./images/SIID_IMAGEFILES.jpg"::: An image file.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_VIDEOFILES">
            <summary>
            <para>:::image type="icon" source="./images/SIID_VIDEOFILES.jpg"::: A video file.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MIXEDFILES">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MIXEDFILES.jpg"::: A mixed file.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_FOLDERBACK">
            <summary>
            <para>:::image type="icon" source="./images/SIID_FOLDERBACK.jpg"::: Folder back.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_FOLDERFRONT">
            <summary>
            <para>:::image type="icon" source="./images/SIID_FOLDERFRONT.jpg"::: Folder front.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_SHIELD">
            <summary>
            <para>:::image type="icon" source="./images/SIID_SHIELD.jpg"::: Security shield. Use for UAC prompts only.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_WARNING">
            <summary>
            <para>:::image type="icon" source="./images/SIID_WARNING.jpg"::: Warning.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_INFO">
            <summary>
            <para>:::image type="icon" source="./images/SIID_INFO.jpg"::: Informational.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_ERROR">
            <summary>
            <para>:::image type="icon" source="./images/SIID_ERROR.jpg"::: Error.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_KEY">
            <summary>
            <para>:::image type="icon" source="./images/SIID_KEY.jpg"::: Key.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_SOFTWARE">
            <summary>
            <para>:::image type="icon" source="./images/SIID_SOFTWARE.jpg"::: Software.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_RENAME">
            <summary>
            <para>:::image type="icon" source="./images/SIID_RENAME.jpg"::: A UI item, such as a button, that issues a rename command.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DELETE">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DELETE.jpg"::: A UI item, such as a button, that issues a delete command.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIAAUDIODVD">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIAAUDIODVD.jpg"::: Audio DVD media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIAMOVIEDVD">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIAMOVIEDVD.jpg"::: Movie DVD media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIAENHANCEDCD">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIAENHANCEDCD.jpg"::: Enhanced CD media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIAENHANCEDDVD">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIAENHANCEDDVD.jpg"::: Enhanced DVD media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIAHDDVD">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIAHDDVD.jpg"::: High definition DVD media in the HD DVD format.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIABLURAY">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIABLURAY.jpg"::: High definition DVD media in the Blu-ray Disc™ format.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIAVCD">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIAVCD.jpg"::: Video CD (VCD) media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIADVDPLUSR">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIADVDPLUSR.jpg"::: DVD+R media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIADVDPLUSRW">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIADVDPLUSRW.jpg"::: DVD+RW media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DESKTOPPC">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DESKTOPPC.jpg"::: A desktop computer.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MOBILEPC">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MOBILEPC.jpg"::: A mobile computer (laptop).</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_USERS">
            <summary>
            <para>:::image type="icon" source="./images/SIID_USERS.jpg"::: The **User Accounts** Control Panel item.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIASMARTMEDIA">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIASMARTMEDIA.jpg"::: Smart media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIACOMPACTFLASH">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIACOMPACTFLASH.jpg"::: CompactFlash media.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DEVICECELLPHONE">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DEVICECELLPHONE.jpg"::: A cell phone.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DEVICECAMERA">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DEVICECAMERA.jpg"::: A digital camera.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DEVICEVIDEOCAMERA">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DEVICEVIDEOCAMERA.jpg"::: A digital video camera.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DEVICEAUDIOPLAYER">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DEVICEAUDIOPLAYER.jpg"::: An audio player.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_NETWORKCONNECT">
            <summary>
            <para>:::image type="icon" source="./images/SIID_NETWORKCONNECT.jpg"::: Connect to network.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_INTERNET">
            <summary>
            <para>:::image type="icon" source="./images/SIID_INTERNET.jpg"::: The **Network and Internet** Control Panel item.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_ZIPFILE">
            <summary>
            <para>:::image type="icon" source="./images/SIID_ZIPFILE.jpg"::: A compressed file with a .zip file name extension.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_SETTINGS">
            <summary>
            <para>:::image type="icon" source="./images/SIID_SETTINGS.jpg"::: The **Additional Options** Control Panel item.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DRIVEHDDVD">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DRIVEHDDVD.jpg"::: **Windows Vista with Service Pack 1 (SP1) and later**. High definition DVD drive (any type - HD DVD-ROM, HD DVD-R, HD-DVD-RAM) that uses the HD DVD format.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_DRIVEBD">
            <summary>
            <para>:::image type="icon" source="./images/SIID_DRIVEBD.jpg"::: **Windows Vista with SP1 and later**. High definition DVD drive (any type - BD-ROM, BD-R, BD-RE) that uses the Blu-ray Disc format.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIAHDDVDROM">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIAHDDVDROM.jpg"::: **Windows Vista with SP1 and later**. High definition DVD-ROM media in the HD DVD-ROM format.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIAHDDVDR">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIAHDDVDR.jpg"::: **Windows Vista with SP1 and later**. High definition DVD-R media in the HD DVD-R format.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIAHDDVDRAM">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIAHDDVDRAM.jpg"::: **Windows Vista with SP1 and later**. High definition DVD-RAM media in the HD DVD-RAM format.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIABDROM">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIABDROM.jpg"::: **Windows Vista with SP1 and later**. High definition DVD-ROM media in the Blu-ray Disc BD-ROM format.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIABDR">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIABDR.jpg"::: **Windows Vista with SP1 and later**. High definition write-once media in the Blu-ray Disc BD-R format.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MEDIABDRE">
            <summary>
            <para>:::image type="icon" source="./images/SIID_MEDIABDRE.jpg"::: **Windows Vista with SP1 and later**. High definition read/write media in the Blu-ray Disc BD-RE format.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_CLUSTEREDDRIVE">
            <summary>
            <para>:::image type="icon" source="./images/SIID_CLUSTEREDDRIVE.jpg"::: **Windows Vista with SP1 and later**. A cluster disk array.</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/shellapi/ne-shellapi-shstockiconid#members">Read more on docs.microsoft.com</see>.</para>
            </summary>
        </member>
        <member name="F:Windows.Win32.UI.Shell.SHSTOCKICONID.SIID_MAX_ICONS">
            <summary>The highest valid value in the enumeration. Values over 160 are Windows 7-only icons.</summary>
        </member>
        <member name="P:Windows.Win32.__byte_256.Length">
            <summary>The length of the inline array.</summary>
        </member>
        <member name="P:Windows.Win32.__byte_256.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.__byte_256.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="M:Windows.Win32.__byte_256.AsReadOnlySpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="T:Windows.Win32.Storage.Xps.DOCINFOW">
            <summary>The DOCINFO structure contains the input and output file names and other information used by the StartDoc function. (Unicode)</summary>
            <remarks>
            <para>> [!NOTE] > The wingdi.h header defines DOCINFO as an alias which automatically selects the ANSI or Unicode version of this function based on the definition of the UNICODE preprocessor constant. Mixing usage of the encoding-neutral alias with code that not encoding-neutral can lead to mismatches that result in compilation or runtime errors. For more information, see [Conventions for Function Prototypes](/windows/win32/intl/conventions-for-function-prototypes).</para>
            <para><see href="https://learn.microsoft.com/windows/win32/api/wingdi/ns-wingdi-docinfow#">Read more on docs.microsoft.com</see>.</para>
            </remarks>
        </member>
        <member name="F:Windows.Win32.Storage.Xps.DOCINFOW.cbSize">
            <summary>The size, in bytes, of the structure.</summary>
        </member>
        <member name="F:Windows.Win32.Storage.Xps.DOCINFOW.lpszDocName">
            <summary>Pointer to a null-terminated string that specifies the name of the document.</summary>
        </member>
        <member name="F:Windows.Win32.Storage.Xps.DOCINFOW.lpszOutput">
            <summary>Pointer to a null-terminated string that specifies the name of an output file. If this pointer is <b>NULL</b>, the output will be sent to the device identified by the device context handle that was passed to the <a href="https://docs.microsoft.com/windows/desktop/api/wingdi/nf-wingdi-startdoca">StartDoc</a> function.</summary>
        </member>
        <member name="F:Windows.Win32.Storage.Xps.DOCINFOW.lpszDatatype">
            <summary>Pointer to a null-terminated string that specifies the type of data used to record the print job. The legal values for this member can be found by calling <a href="https://docs.microsoft.com/windows/desktop/printdocs/enumprintprocessordatatypes">EnumPrintProcessorDatatypes</a> and can include such values as raw, emf, or XPS_PASS. This member can be <b>NULL</b>. Note that the requested data type might be ignored.</summary>
        </member>
        <member name="F:Windows.Win32.Storage.Xps.DOCINFOW.fwType">
            <summary></summary>
        </member>
        <member name="P:Windows.Win32.__float_25.Length">
            <summary>The length of the inline array.</summary>
        </member>
        <member name="P:Windows.Win32.__float_25.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.__float_25.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="M:Windows.Win32.__float_25.AsReadOnlySpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="T:Windows.Win32.Foundation.RECTL">
            <summary>The RECTL structure defines a rectangle by the coordinates of its upper-left and lower-right corners.</summary>
            <remarks>The RECTL structure is identical to the <a href="https://docs.microsoft.com/windows/desktop/api/windef/ns-windef-rect">RECT</a> structure.</remarks>
        </member>
        <member name="F:Windows.Win32.Foundation.RECTL.left">
            <summary>Specifies the <i>x</i>-coordinate of the upper-left corner of the rectangle.</summary>
        </member>
        <member name="F:Windows.Win32.Foundation.RECTL.top">
            <summary>Specifies the <i>y</i>-coordinate of the upper-left corner of the rectangle.</summary>
        </member>
        <member name="F:Windows.Win32.Foundation.RECTL.right">
            <summary>Specifies the <i>x</i>-coordinate of the lower-right corner of the rectangle.</summary>
        </member>
        <member name="F:Windows.Win32.Foundation.RECTL.bottom">
            <summary>Specifies the <i>y</i>-coordinate of the lower-right corner of the rectangle.</summary>
        </member>
        <member name="P:Windows.Win32.__uint_1.Length">
            <summary>The length of the inline array.</summary>
        </member>
        <member name="P:Windows.Win32.__uint_1.Item(System.Int32)">
            <summary>
            Gets a ref to an individual element of the inline array.
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned reference outlive the stack frame that defines it.
            </summary>
        </member>
        <member name="M:Windows.Win32.__uint_1.AsSpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
        <member name="M:Windows.Win32.__uint_1.AsReadOnlySpan">
            <summary>
            Gets this inline array as a span.
            </summary>
            <remarks>
            ⚠ Important ⚠: When this struct is on the stack, do not let the returned span outlive the stack frame that defines it.
            </remarks>
        </member>
    </members>
</doc>
